{"version":3,"sources":["../../../../../packages/miq-dmsjs/src/document/components.jsx","../../../../../packages/miq-dmsjs/src/docufile/utils.jsx","../../../../../packages/miq-dmsjs/src/docufile/UploadButton.jsx","../../../../../packages/miq-dmsjs/src/docufile/FileList.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/ShareModal/SelectUserModal.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/ShareModal/AddUserModal.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/ShareModal/index.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/UpdateForm.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/index.jsx","../../../../../packages/miq-dmsjs/src/document/utils.jsx"],"names":["DocumentDeleteIconButton","doc","docSlug","onSuccess","props","is_read_only","deleteDocument","docServices","delete","then","res","isFunction","catch","err","Icon","Icons","Trash","id","label","className","title","renderHeader","renderFooter","setOpen","disabled","onClick","render","UserCount","document","users","length","PersonCircle","FileCount","files","FileEarmarkText","docufileServices","file","isRequired","name","Promise","reject","fd","FormData","append","services","post","headers","docFileSlug","DocuFileUploadButton","uploadRef","createRef","PaperClip","click","onChange","evt","Array","from","target","forEach","data","console","log","ref","getIcon","ext","getFileIcon","DocuFileList","items","onFileDelete","style","overflowX","renderItem","Tr","Td","href","getImgUrl","src","name_truncated","size","align","slug","SelectUserModal","form","useState","q","setQ","setUsers","debounceGetStaffUsers","useCallback","debounce","getStaffList","results","useEffect","context","Modal","header","PersonPlus","X","closeModal","footer","floating","required","e","value","placeholder","isOpen","map","user","i","includes","setValue","setUser","role","users_data","setDoc","patchUser","action","DocuSharedPermissionSelect","permission","permissions","Object","values","patchUserPermission","perm","AddUserModal","ArrowLeft","uploaded_by","CheckboxInput","checked","sendNotif","TextArea","maxLength","rows","DocumentShareModal","useForm","message","UserCard","img_data","username","DocumentUpdateForm","handleTextInputSave","Label","TextInput","onSave","autoComplete","TextAreaX","ViewHeader","to","match","path","replace","tabIndex","aria-label","data-tooltip","Share","Actions","history","push","Archive","url","addForwardSlash","status","archive","DocumentUpdateView","params","error","setError","reference","description","setValues","get","response","patch","shared","patchFile","files_data","filter","formatDocDate","date","formatDate","month","day","year","getDocumentLinkTo","link","list","getService","API","this","listPage","oldValues","keys","user_slug"],"mappings":"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","file":"static/js/7.9f94a393.chunk.js","sourcesContent":["import { isFunction } from \"lodash\";\n\nimport { getClassName } from \"@miq/utils\";\nimport { Icons, ConfirmIconButton, Button } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\n\nexport const DocumentDeleteIconButton = ({ doc, docSlug, onSuccess, ...props }) => {\n    if (!doc || doc.is_read_only) return null;\n\n    const deleteDocument = () =>\n        docServices\n            .delete(docSlug)\n            .then((res) => {\n                isFunction(onSuccess) && onSuccess(docSlug);\n            })\n            .catch((err) => {});\n\n    return (\n        <ConfirmIconButton\n            Icon={Icons.Trash}\n            id={props.id}\n            label={props.label}\n            className={props.className}\n            title=\"Supprimer ce document\"\n            renderHeader={() => (\n                <div>\n                    <h3>Supprimer ce document</h3>\n                </div>\n            )}\n            renderFooter={({ setOpen }) => (\n                <div className=\"flex-1 d-flex align-items-center justify-content-between\">\n                    <Button disabled={doc.is_read_only} onClick={deleteDocument} className=\"btn-danger\">\n                        Confirmer\n                    </Button>\n                    <Button onClick={() => setOpen(false)}>Annuler</Button>\n                </div>\n            )}\n            render={() => (\n                <div className=\"p-4\">\n                    <p>Are you sure you want to delete “2. Parties in Payment Gateway business”?</p>\n                    <p>This item will be deleted immediately. You can’t undo this action.</p>\n                </div>\n            )}\n            disabled={doc.is_read_only}\n        />\n    );\n};\n\nexport const UserCount = ({ document = {}, ...props }) => {\n    if (!document || !document.users || !document.users.length) return null;\n\n    return (\n        <span className=\"me-1 d-flex align-items-center\">\n            <span className=\"count\">{document.users.length}</span>\n            <Icons.PersonCircle />\n        </span>\n    );\n};\n\nexport const FileCount = ({ document = {}, ...props }) => {\n    if (!document || !document.files || !document.files.length) return null;\n\n    return (\n        <span className=\"me-1 d-flex align-items-center\">\n            <span className=\"count\">{document.files.length}</span>\n            <Icons.FileEarmarkText />\n        </span>\n    );\n};\n","import { services } from \"@miq/adminjs\";\n\nexport const docufileServices = {\n    postFile(file = isRequired(\"file\")) {\n        let name = file.name;\n        if (name.length >= 300) {\n            return Promise.reject({ files: \"File name is too long\" });\n        }\n\n        const fd = new FormData();\n        fd.append(\"src\", file, name);\n\n        return services.post(`docufiles/`, fd, {\n            headers: { \"content-type\": \"multipart/form-data\" },\n        });\n    },\n\n    delete(docFileSlug, docSlug) {\n        return services.delete(`docufiles/${docFileSlug}/?document=${docSlug}`);\n    },\n};\n","import { createRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FileInput, IconButton, Icons } from \"@miq/components\";\n\nimport { docufileServices } from \"./utils\";\n\nconst propTypes = {\n    onSuccess: PropTypes.func,\n};\n\nexport default function DocuFileUploadButton({ onSuccess, ...props }) {\n    let uploadRef = createRef();\n\n    function uploadFiles(evt) {\n        // TODO: Ensure this filename has at most 100 characters\n\n        Array.from(evt.target.files).forEach((file) => {\n            docufileServices\n                .postFile(file)\n                .then((data) => {\n                    if (onSuccess) onSuccess(data);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        });\n    }\n\n    return (\n        <>\n            <IconButton\n                Icon={Icons.PaperClip}\n                label=\"Joindre\"\n                title=\"Joindre des fichiers à ce document\"\n                {...props}\n                onClick={() => uploadRef.click()}\n            />\n            <FileInput onChange={uploadFiles} ref={(file) => (uploadRef = file)} />\n        </>\n    );\n}\n\nDocuFileUploadButton.propTypes = propTypes;\n","import { Icons, Button, ImgSquare, Img, ConfirmIconButton } from \"@miq/components\";\nimport { Table, ItemTable, IconButton } from \"@miq/components\";\nimport { getImgUrl } from \"@miq/utils\";\n\nimport { docufileServices } from \"./utils\";\n\nimport \"./docufile-grid.scss\";\n\nconst getIcon = (file) => {\n    switch (file.ext) {\n        case \".jpg\":\n        case \".jpeg\":\n        case \".png\":\n            return <ImgSquare {...file} />;\n\n        default:\n            const Icon = Icons.getFileIcon(file.ext);\n            return <Icon className=\"icon mb-1\" />;\n    }\n};\n\nexport function DocuFileList({ items, ...props }) {\n    const { document, onFileDelete } = props;\n\n    return (\n        <div className=\"docufile-list border-1 rounded mb-3\" style={{ overflowX: \"scroll\" }}>\n            <ItemTable\n                items={items}\n                renderItem={(file) => {\n                    return (\n                        <Table.Tr className=\"docufile-list-item border-bottom\" key={file.slug}>\n                            <Table.Td>\n                                <a href={getImgUrl(file.src)} className=\"docufile-btn\" target=\"_blank\">\n                                    <div className=\"d-flex\">\n                                        <span className=\"docufile-icon-wrapper d-none d-md-block me-1\">\n                                            {getIcon(file)}\n                                        </span>\n                                        <div className=\"\">\n                                            <div>{file.name_truncated}</div>\n                                            <span className=\"text-sm text-muted\">{file.size}</span>\n                                        </div>\n                                    </div>\n                                </a>\n                            </Table.Td>\n\n                            <Table.Td align=\"right\">\n                                <div className=\"actions\">\n                                    {!document.is_read_only && (\n                                        <ConfirmIconButton\n                                            disabled={document.is_read_only}\n                                            Icon={Icons.Trash}\n                                            render={() => {\n                                                return <div>Are you sure?</div>;\n                                            }}\n                                            renderFooter={({ setOpen }) => {\n                                                return (\n                                                    <div className=\"flex-1\">\n                                                        <Button onClick={() => setOpen(false)} className=\"me-1\">\n                                                            Annuler\n                                                        </Button>\n                                                        <Button\n                                                            className=\"btn-danger\"\n                                                            onClick={() =>\n                                                                docufileServices\n                                                                    .delete(file.slug, document.slug)\n                                                                    .then((data) => {\n                                                                        onFileDelete({ ...data, slug: file.slug });\n                                                                    })\n                                                                    .catch((err) => {\n                                                                        console.log(err);\n                                                                    })\n                                                            }\n                                                        >\n                                                            Delete\n                                                        </Button>\n                                                    </div>\n                                                );\n                                            }}\n                                        />\n                                    )}\n                                </div>\n                            </Table.Td>\n                        </Table.Tr>\n                    );\n                }}\n                className=\"w-100\"\n            />\n        </div>\n    );\n}\n","import { debounce, throttle } from \"lodash\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport Form from \"@miq/form\";\nimport { Portal, Button, IconButton, Icons, Collapse } from \"@miq/components\";\nimport { docServices } from \"../../utils\";\nimport { UserCard } from \".\";\n\nexport default function SelectUserModal({ form, doc, ...props }) {\n    const [q, setQ] = useState(\"\");\n    const [users, setUsers] = useState([]);\n\n    const getStaffUsers = (q) =>\n        docServices.getStaffList(q).then(({ results }) => {\n            // if (results)\n            setUsers(results);\n        });\n    const debounceGetStaffUsers = useCallback(debounce(getStaffUsers, 400), []);\n\n    useEffect(() => {\n        if (!q || q.length < 3) return;\n\n        debounceGetStaffUsers(q);\n    }, [q, debounceGetStaffUsers]);\n\n    if (!form || !doc) return null;\n\n    const setUser = (user) => {\n        if (doc.users.includes(user.slug)) return;\n        form.setValue(\"user\", user);\n    };\n\n    return (\n        <Portal>\n            <Form context={form} id=\"DocumentShareModal\" className=\"dms-share\">\n                <Portal.Modal\n                    /**\n                     * HEADER\n                     */\n                    header={\n                        <div className=\"dms-share-header\">\n                            <div className=\"title\">\n                                <div className=\"btn btn-icon select\">\n                                    <Icons.PersonPlus className=\"icon\" />\n                                </div>\n                                <h2>Partager avec des personnes</h2>\n                            </div>\n\n                            <div className=\"actions\">\n                                <IconButton Icon={Icons.X} onClick={props.closeModal} />\n                            </div>\n                        </div>\n                    }\n                    /**\n                     * FOOTER\n                     */\n                    footer={\n                        <div className=\"dms-share-footer\">\n                            <div className=\"\">\n                                <Button\n                                    // primary\n                                    onClick={props.closeModal}\n                                >\n                                    Terminé\n                                </Button>\n                            </div>\n                        </div>\n                    }\n                >\n                    <div className=\"dms-share-select\">\n                        <Collapse\n                            floating\n                            header={\n                                <input\n                                    required\n                                    name=\"q\"\n                                    onChange={(e) => setQ(e.target.value)}\n                                    placeholder=\"Ajouter des personnes\"\n                                    className=\"miq-input mb-1\"\n                                />\n                            }\n                            isOpen={q.length > 2 && users.length > 0}\n                        >\n                            {users.map((user, i) => (\n                                <div\n                                    className=\"dms-user-item\"\n                                    onClick={() => setUser(user)}\n                                    key={`${user.slug}-${i}`}\n                                    role=\"button\"\n                                >\n                                    <UserCard {...{ user, form }} />\n                                </div>\n                            ))}\n                        </Collapse>\n\n                        <div className=\"dms-share-users my-2\">\n                            {doc.users_data.map((user) => {\n                                return (\n                                    <div\n                                        className=\"my-1 d-flex align-items-center justify-content-between\"\n                                        key={user.slug}\n                                    >\n                                        <UserCard {...{ user, form }} />\n\n                                        <div className=\"d-flex align-items-center\">\n                                            <DocuSharedPermissionSelect\n                                                {...{ user, doc, form, setDoc: props.setDoc }}\n                                                className=\"me-1\"\n                                            />\n                                            <IconButton\n                                                Icon={Icons.X}\n                                                onClick={() => {\n                                                    docServices\n                                                        .patchUser(doc.slug, { action: \"remove\", users: [user.slug] })\n                                                        .then((data) => {\n                                                            props.setDoc({ ...doc, ...data });\n                                                        })\n                                                        .catch((err) => {\n                                                            console.log(err);\n                                                        });\n                                                }}\n                                                title=\"Supprimer cet utilisateur\"\n                                            />\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </Portal.Modal>\n            </Form>\n        </Portal>\n    );\n}\n\nconst DocuSharedPermissionSelect = ({ user, doc, ...props }) => {\n    const [value, setValue] = useState(user.permission || \"VIEW\");\n\n    const permissions = Object.values(doc.permissions);\n\n    return (\n        <select\n            value={value}\n            className=\"miq-select me-1\"\n            onChange={(e) => {\n                const { value } = e.target;\n                setValue(value);\n                docServices\n                    .patchUserPermission(doc.slug, user.slug, value)\n                    .then((data) => props.setDoc({ ...doc, ...data }));\n            }}\n        >\n            {permissions.map((perm) => (\n                <option key={perm.name} value={perm.value}>\n                    {perm.label}\n                </option>\n            ))}\n        </select>\n    );\n};\n\n/**\n *\n * @param {*} param0\n * @returns\n */\n\nexport function SelectUserTab({ doc, form = {}, ...props }) {\n    const q = form.values.q;\n    const [users, setUsers] = useState([]);\n    const [width, setWidth] = useState(null);\n\n    const getStaffUsers = (q) =>\n        docServices.getStaffList(q).then(({ results }) => {\n            if (results) setUsers(results);\n            console.log(\"her\");\n        });\n    const debounceGetStaffUsers = useCallback(debounce(getStaffUsers, 400), []);\n\n    useEffect(() => {\n        if (!q || q.length < 3) return;\n        debounceGetStaffUsers(q);\n    }, [q, debounceGetStaffUsers]);\n\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const el = ref.current;\n        if (!el || typeof window !== \"object\") return;\n\n        const resize = throttle(\n            () => {\n                const rect = el.getBoundingClientRect();\n                setWidth(rect.width);\n            },\n            400,\n            { trailing: true }\n        );\n\n        window.addEventListener(\"resize\", resize);\n        resize();\n\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    const setUser = (user) => {\n        if (!form || doc.users.includes(user.slug)) return;\n        form.setValue(\"user\", user);\n    };\n\n    return (\n        <div className=\"dms-dropdown\">\n            <div className=\"dms-dropdown-header\">\n                <Form.TextInput required name=\"q\" placeholder=\"Ajouter des personnes\" className=\"mb-1\" ref={ref} />\n            </div>\n\n            {users && users.length !== 0 && (\n                <div className=\"dms-dropdown-body\" style={{ width }}>\n                    <ul className=\"inner\">\n                        {users.map((user, i) => {\n                            return (\n                                <li\n                                    className=\"dms-dropdown-item\"\n                                    onClick={() => setUser(user)}\n                                    key={`${user.slug}-${i}`}\n                                    role=\"button\"\n                                >\n                                    <UserCard {...{ user, form }} />\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n","import Form from \"@miq/form\";\nimport { Portal, Icons, Button, IconButton } from \"@miq/components\";\nimport { UserCard } from \".\";\nimport { docServices } from \"../../utils\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function AddUserModal({ form, doc, ...props }) {\n    const user = form.values.user;\n\n    if (!form) return null;\n\n    const addUser = () => {\n        const { slug } = form.values.user;\n        if (slug === doc.uploaded_by.slug) {\n            return;\n        }\n\n        docServices\n            .patchUser(doc.slug, { action: \"add\", users: [slug] })\n            .then((data) => {\n                props.setDoc({ ...doc, ...data });\n                form.setValue(\"user\", null);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <Portal>\n            <Form context={form} id=\"DocumentShareModal\" className=\"dms-share\">\n                <Portal.Modal\n                    /**\n                     * HEADER\n                     */\n                    header={\n                        <div className=\"dms-share-header\">\n                            <div className=\"title\">\n                                <div>\n                                    <IconButton\n                                        Icon={Icons.ArrowLeft}\n                                        onClick={() => form.setValue(\"user\", \"\")}\n                                        title=\"Retourner derriere\"\n                                        className=\"add\"\n                                    />\n                                </div>\n                                <h2>Partager avec des personnes</h2>\n                            </div>\n\n                            <div className=\"actions\"></div>\n                        </div>\n                    }\n                    /**\n                     * FOOTER\n                     */\n                    footer={\n                        <div className=\"dms-share-footer\">\n                            <div className=\"\">\n                                <Button onClick={addUser}>Envoyer</Button>\n                            </div>\n                        </div>\n                    }\n                >\n                    <div className=\"dms-share-add\">\n                        <div className=\"\">\n                            <UserCard {...{ user }} />\n                        </div>\n\n                        <div className=\"add-form mt-2\">\n                            <Form.CheckboxInput\n                                name=\"sendNotif\"\n                                checked={form.values.sendNotif}\n                                label=\"Envoyer une notification\"\n                            />\n\n                            <Form.TextArea\n                                name=\"message\"\n                                placeholder=\"Message\"\n                                maxLength={200}\n                                rows={4}\n                                className=\"my-1\"\n                            />\n                        </div>\n                    </div>\n                </Portal.Modal>\n            </Form>\n        </Portal>\n    );\n}\n","import { useForm } from \"@miq/form\";\nimport { Avatar } from \"@miq/components\";\nimport SelectUserModal from \"./SelectUserModal\";\nimport AddUserModal from \"./AddUserModal\";\n\nimport \"./share-modal.scss\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentShareModal(props) {\n    const form = useForm({\n        q: \"\",\n        user: null,\n        sendNotif: true,\n        message: \"\",\n    });\n\n    const { isOpen } = props;\n\n    if (!isOpen) return null;\n\n    const closeModal = () => props.setOpen(false);\n\n    if (form.values.user) return <AddUserModal {...props} {...{ form, closeModal }} />;\n\n    return <SelectUserModal {...props} {...{ form, closeModal }} />;\n}\n\nexport const UserCard = ({ user, form, ...props }) => {\n    return (\n        <div className=\"d-flex align-items-center\">\n            <div className=\"\">\n                <Avatar {...user.img_data} />\n            </div>\n            <div className=\"ms-1\">\n                <div className=\"\">{user.name}</div>\n                <div className=\"text-sm text-muted\">@{user.username}</div>\n            </div>\n        </div>\n    );\n};\n","import Form, { FormProvider } from \"@miq/form\";\n\nimport { isRequired } from \"@miq/utils\";\n\nexport default function DocumentUpdateForm({ docSlug, ...props }) {\n    const { form = isRequired(\"form\"), doc, handleTextInputSave } = props;\n\n    return (\n        <FormProvider value={form}>\n            <div className=\"d-grid grid-lg-12 mb-2\">\n                <Form.Label value=\"Reference\" className=\"span-12 mb-1\" />\n                <Form.TextInput\n                    name=\"reference\"\n                    onSave={handleTextInputSave}\n                    autoComplete=\"off\"\n                    className=\"span-12 span-md-4\"\n                    placeholder=\"Ajouter une reference ...\"\n                    disabled={doc.is_read_only}\n                />\n            </div>\n\n            <div className=\"d-grid grid-1 grid-xl-12 mb-2\">\n                <Form.Label value=\"Description\" className=\"span-12 mb-1\" />\n\n                <div className=\"span-lg-8\">\n                    <Form.TextAreaX\n                        name=\"description\"\n                        onSave={handleTextInputSave}\n                        placeholder=\"Ajouter une description ...\"\n                        disabled={doc.is_read_only}\n                    />\n                </div>\n            </div>\n        </FormProvider>\n    );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { AdminView } from \"@miq/adminjs\";\nimport { addForwardSlash } from \"@miq/utils\";\nimport { Icons, IconButton, IconNavLink } from \"@miq/components\";\n\nimport \"./update-view.scss\";\n\nimport DocuFileUploadButton from \"../../docufile/UploadButton\";\nimport { DocuFileList } from \"../../docufile\";\nimport { docServices } from \"../utils\";\nimport { DocumentDeleteIconButton } from \"../components\";\nimport DocumentShareModal from \"./ShareModal\";\nimport DocumentUpdateForm from \"./UpdateForm\";\nimport { Redirect } from \"react-router-dom\";\n\n// import { Prompt } from \"react-router-dom\";\n\nconst ViewHeader = (props) => {\n    const { doc } = props;\n    const [isOpen, setOpen] = useState(false);\n\n    // useEffect(() => {\n    //     return () => {\n    //         window.confirm(\"Are you sure\");\n    //     };\n    // }, []);\n\n    return (\n        <div className=\"document-update-header border-bottom mt-1 py-1\">\n            <div className=\"pe-1\">\n                <IconNavLink\n                    to={props.match.path.replace(\":docSlug/\", \"\")}\n                    Icon={Icons.ArrowLeft}\n                    title=\"Retourner en arriere\"\n                    className=\"\"\n                />\n            </div>\n            <div className=\"flex-1\">\n                <Form.TextInput\n                    required\n                    name=\"title\"\n                    onSave={props.handleTextInputSave}\n                    disabled={doc.is_read_only}\n                    autoComplete=\"off\"\n                    tabIndex={0}\n                    aria-label=\"Renommer ce document\"\n                    title=\"Renommer ce document\"\n                    data-tooltip=\"Renommer ce document\"\n                />\n            </div>\n\n            <div className=\"ps-1\">\n                <IconButton\n                    onClick={() => setOpen(true)}\n                    disabled={doc.is_read_only}\n                    Icon={Icons.Share}\n                    className=\"btn-primary\"\n                    label=\"Partager\"\n                    title=\"Partager ce document avec des personnes\"\n                />\n\n                {!doc.is_read_only && isOpen && <DocumentShareModal {...props} {...{ setOpen, isOpen }} />}\n            </div>\n        </div>\n        // </Prompt>\n    );\n};\n\nconst Actions = (props) => {\n    const { docSlug, doc } = props;\n\n    const handleArchive = (e) => {\n        const url = `${addForwardSlash(props.match.url)}view/`;\n        if (doc.status === \"ARCHIVED\") return props.history.push(url);\n\n        docServices\n            .archive(docSlug)\n            .then(() => {\n                props.history.push(url);\n            })\n            .catch((err) => {});\n    };\n\n    return (\n        <div className=\"document-update-view-actions border-bottom py-1 mb-2\">\n            <DocumentDeleteIconButton\n                {...props}\n                {...{ docSlug }}\n                label=\"Supprimer\"\n                className=\"me-1\"\n                onSuccess={() => props.history.push(\"/grio/documents/\")}\n            />\n\n            <IconButton\n                Icon={Icons.Archive}\n                onClick={handleArchive}\n                label=\"Archiver\"\n                title=\"Archiver ce document. Un document archivé ne peut plus être modifié\"\n                disabled={doc.is_read_only}\n                // className=\"p-1\"\n            />\n        </div>\n    );\n};\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentUpdateView(props) {\n    const { docSlug } = props.match.params;\n\n    const [doc, setDoc] = useState(null);\n    const [error, setError] = useState(null);\n\n    const form = useForm({ title: \"\", reference: \"\", description: \"\" });\n    const { setValues } = form;\n\n    useEffect(() => {\n        docServices\n            .get(docSlug)\n            .then((data) => {\n                setDoc(data);\n                if (data.is_read_only) return;\n\n                setValues({\n                    title: data.title || \"\",\n                    reference: data.reference || \"\",\n                    description: data.description || \"\",\n                });\n            })\n            .catch((err) => {\n                if (err.response) {\n                    if (err.response.status === 404) {\n                        setError(\"notfound\");\n                        return;\n                    }\n                }\n\n                setError(\"error\");\n            });\n    }, [docSlug, setValues]);\n\n    if (error) {\n        return (\n            <div>\n                <h1>Ce document n'existe pas</h1>\n            </div>\n        );\n    }\n\n    if (!doc || !doc.slug) return null;\n\n    if (doc.is_read_only) return <Redirect to={`${addForwardSlash(props.match.url)}view/`} />;\n\n    /**\n     *\n     * @param {Object} param0\n     * @returns\n     */\n    const handleTextInputSave = ({ name, value }) => {\n        if (!doc || doc.is_read_only) return;\n\n        docServices\n            .patch(docSlug, { [name]: value }, { [name]: doc[name] })\n            .then((data) => {\n                // console.log(data);\n            })\n            .catch((err) => {});\n    };\n\n    const addFile = ({ slug }) =>\n        docServices\n            .patchFile(docSlug, { action: \"add\", files: [slug] })\n            .then((data) => {\n                setDoc({ ...doc, ...data });\n            })\n            .catch((err) => {});\n\n    const removeFile = ({ slug }) =>\n        setDoc({\n            ...doc,\n            files: doc.files.filter((i) => i !== slug),\n            files_data: doc.files_data.filter((i) => i.slug !== slug),\n        });\n\n    const shared = { docSlug, doc, setDoc, docSlug, form, handleTextInputSave };\n\n    return (\n        <Form context={form} className=\"document-update-form\">\n            {/* <Prompt when={isL} message=\"Are you sure?\"> */}\n            <AdminView className=\"document-update-view miq-container-fluid\">\n                <ViewHeader {...props} {...{ doc, setDoc, handleTextInputSave }} />\n\n                <Actions {...props} {...shared} />\n\n                {/* FORM */}\n                <div className=\"border-bottom mb-3\">\n                    <DocumentUpdateForm {...props} {...shared} />\n                </div>\n\n                {/* FILES */}\n                <div>\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\n                        <h4>Fichiers</h4>\n                        <div className=\"actions\">\n                            <DocuFileUploadButton\n                                onSuccess={addFile}\n                                disabled={doc.is_read_only}\n                                className=\"btn-primary-2\"\n                            />\n                        </div>\n                    </div>\n\n                    {doc.files && doc.files.length > 0 ? (\n                        <DocuFileList document={doc} items={doc.files_data} onFileDelete={removeFile} />\n                    ) : (\n                        <div className=\"w-100 text-center py-4\">Vous n'avez pas de fichiers ajoutés.</div>\n                    )}\n                </div>\n            </AdminView>\n            {/* </Prompt> */}\n        </Form>\n    );\n}\n","import { API, services } from \"@miq/adminjs\";\nimport { getService } from \"@miq/utils\";\nimport { addOrUpdateArrayObject } from \"@miq/utils\";\nimport { formatDate } from \"@miq/utils\";\n\nexport const formatDocDate = (date) => formatDate(date, { month: \"numeric\", day: \"numeric\", year: \"numeric\" });\n\nexport const getDocumentLinkTo = (document, path) => {\n    const link = `${path}${document.slug}/`;\n    if (document.is_read_only) {\n        return `${link}view/`;\n    }\n    return link;\n};\n\nexport const docServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUMENT\n     */\n\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(docSlug, params) {\n        return getService(API, `${this.path}${docSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(docSlug, values, oldValues) {\n        return services.patch(`${this.path}${docSlug}/`, values, oldValues);\n    },\n    archive(docSlug) {\n        return services.get(`${this.path}${docSlug}/archive/`);\n    },\n    delete(docSlug) {\n        return services.delete(`${this.path}${docSlug}/`);\n    },\n\n    /**\n     * Add a docufile to a document\n     * @param {*} docSlug\n     * @param {*} values\n     * @returns\n     */\n\n    patchFile(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/files/`, values);\n    },\n\n    /**\n     * USER\n     */\n\n    patchUserPermission(docSlug, user_slug, permission) {\n        return services.post(`${this.path}${docSlug}/permission/`, { user_slug, permission });\n    },\n\n    getStaffList(q) {\n        return services.get(\"search-staff/\", { q });\n    },\n\n    patchUser(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/users/`, values);\n    },\n};\n\nexport const docsReducer = (state = { results: [] }, action) => {\n    const { type, payload = {} } = action;\n    let results;\n\n    switch (type) {\n        case \"SET_DOCS\":\n            return { ...payload };\n\n        case \"APPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"ADD_UPDATE_DOC\":\n        case \"PREPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_DOC\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n"],"sourceRoot":""}