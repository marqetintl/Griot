{"version":3,"sources":["../../../../../packages/miq-dmsjs/src/document/components.jsx","../../../../../packages/miq-dmsjs/src/docufile/utils.jsx","../../../../../packages/miq-dmsjs/src/docufile/UploadButton.jsx","../../../../../packages/miq-dmsjs/src/docufile/FileList.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/ShareModal/SelectUserModal.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/ShareModal/AddUserModal.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/ShareModal/index.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/UpdateForm.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/index.jsx","../../../../../packages/miq-dmsjs/src/document/utils.jsx"],"names":["DocumentDeleteIconButton","doc","docSlug","onSuccess","props","is_read_only","deleteDocument","docServices","delete","then","res","isFunction","catch","err","Icon","Icons","Trash","id","label","className","title","renderHeader","renderFooter","setOpen","disabled","onClick","render","UserCount","document","users","length","PersonCircle","FileCount","files","FileEarmarkText","docufileServices","file","isRequired","name","Promise","reject","fd","FormData","append","services","post","headers","DocuFileUploadButton","uploadRef","createRef","PaperClip","click","onChange","evt","Array","from","target","forEach","data","console","log","ref","getIcon","ext","getFileIcon","DocuFileList","items","style","overflowX","renderItem","Tr","Td","name_truncated","size","align","slug","SelectUserModal","form","useState","q","setQ","setUsers","debounceGetStaffUsers","useCallback","debounce","getStaffList","results","useEffect","context","Modal","header","PersonPlus","X","closeModal","footer","floating","required","e","value","placeholder","isOpen","map","user","i","includes","setValue","setUser","role","users_data","setDoc","patchUser","action","DocuSharedPermissionSelect","permission","permissions","Object","values","patchUserPermission","perm","AddUserModal","ArrowLeft","uploaded_by","CheckboxInput","checked","sendNotif","TextArea","maxLength","rows","DocumentShareModal","useForm","message","UserCard","img_data","username","DocumentUpdateForm","handleTextInputSave","Label","TextInput","onSave","autoComplete","TextAreaX","ViewHeader","to","match","path","replace","tabIndex","aria-label","data-tooltip","Share","Actions","history","push","Archive","url","addForwardSlash","status","archive","DocumentUpdateView","params","error","setError","reference","description","setValues","get","response","patch","shared","fileData","patchFile","files_data","formatDocDate","date","formatDate","month","day","year","getDocumentLinkTo","link","list","getService","API","this","listPage","oldValues","keys","user_slug"],"mappings":"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","file":"static/js/7.e87c8b6e.chunk.js","sourcesContent":["import { isFunction } from \"lodash\";\n\nimport { getClassName } from \"@miq/utils\";\nimport { Icons, ConfirmIconButton, Button } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\n\nexport const DocumentDeleteIconButton = ({ doc, docSlug, onSuccess, ...props }) => {\n    if (!doc || doc.is_read_only) return null;\n\n    const deleteDocument = () =>\n        docServices\n            .delete(docSlug)\n            .then((res) => {\n                isFunction(onSuccess) && onSuccess(docSlug);\n            })\n            .catch((err) => {});\n\n    return (\n        <ConfirmIconButton\n            Icon={Icons.Trash}\n            id={props.id}\n            label={props.label}\n            className={props.className}\n            title=\"Supprimer ce document\"\n            renderHeader={() => (\n                <div>\n                    <h3>Supprimer ce document</h3>\n                </div>\n            )}\n            renderFooter={({ setOpen }) => (\n                <div className=\"flex-1 d-flex align-items-center justify-content-between\">\n                    <Button disabled={doc.is_read_only} onClick={deleteDocument} className=\"btn-danger\">\n                        Confirmer\n                    </Button>\n                    <Button onClick={() => setOpen(false)}>Annuler</Button>\n                </div>\n            )}\n            render={() => (\n                <div className=\"p-4\">\n                    <p>Are you sure you want to delete “2. Parties in Payment Gateway business”?</p>\n                    <p>This item will be deleted immediately. You can’t undo this action.</p>\n                </div>\n            )}\n            disabled={doc.is_read_only}\n        />\n    );\n};\n\nexport const UserCount = ({ document = {}, ...props }) => {\n    if (!document || !document.users || !document.users.length) return null;\n\n    return (\n        <span className=\"me-1 d-flex align-items-center\">\n            <span className=\"count\">{document.users.length}</span>\n            <Icons.PersonCircle />\n        </span>\n    );\n};\n\nexport const FileCount = ({ document = {}, ...props }) => {\n    if (!document || !document.files || !document.files.length) return null;\n\n    return (\n        <span className=\"me-1 d-flex align-items-center\">\n            <span className=\"count\">{document.files.length}</span>\n            <Icons.FileEarmarkText />\n        </span>\n    );\n};\n","import { services } from \"@miq/adminjs\";\n\nexport const docufileServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUFILE\n     */\n\n    postFile(file = isRequired(\"file\")) {\n        let name = file.name;\n        if (name.length >= 100) {\n            return Promise.reject(\"File name is too long\");\n        }\n\n        const fd = new FormData();\n        fd.append(\"src\", file, name);\n\n        return services.post(`docufiles/`, fd, {\n            headers: { \"content-type\": \"multipart/form-data\" },\n        });\n    },\n};\n","import { createRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FileInput, IconButton, Icons } from \"@miq/components\";\n\nimport { docufileServices } from \"./utils\";\n\nconst propTypes = {\n    onSuccess: PropTypes.func,\n};\n\nexport default function DocuFileUploadButton({ onSuccess, ...props }) {\n    let uploadRef = createRef();\n\n    function uploadFiles(evt) {\n        // TODO: Ensure this filename has at most 100 characters\n\n        Array.from(evt.target.files).forEach((file) => {\n            docufileServices\n                .postFile(file)\n                .then((data) => {\n                    if (onSuccess) onSuccess(data);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        });\n    }\n\n    return (\n        <>\n            <IconButton\n                Icon={Icons.PaperClip}\n                label=\"Joindre\"\n                title=\"Joindre des fichiers à ce document\"\n                {...props}\n                onClick={() => uploadRef.click()}\n            />\n            <FileInput onChange={uploadFiles} ref={(file) => (uploadRef = file)} />\n        </>\n    );\n}\n\nDocuFileUploadButton.propTypes = propTypes;\n","import { Icons, Button, ImgSquare, Img, ConfirmIconButton } from \"@miq/components\";\nimport { Table, ItemTable, IconButton } from \"@miq/components\";\n\nimport \"./docufile-grid.scss\";\n\nconst getIcon = (file) => {\n    switch (file.ext) {\n        case \".jpg\":\n        case \".jpeg\":\n        case \".png\":\n            return <ImgSquare {...file} />;\n\n        default:\n            const Icon = Icons.getFileIcon(file.ext);\n            return <Icon className=\"icon mb-1\" />;\n    }\n};\n\nexport function DocuFileList({ items, ...props }) {\n    return (\n        <div className=\"border-1 rounded mb-3\" style={{ overflowX: \"scroll\" }}>\n            <ItemTable\n                items={items}\n                renderItem={(file) => {\n                    return (\n                        <Table.Tr className=\"border-bottom\" key={file.slug}>\n                            <Table.Td>\n                                <div className=\"d-flex\">\n                                    <span className=\"d-none d-md-block me-1\">{getIcon(file)}</span>\n                                    <div className=\"\">\n                                        <div>{file.name_truncated}</div>\n                                        <span className=\"text-sm text-muted\">{file.size}</span>\n                                    </div>\n                                </div>\n                            </Table.Td>\n\n                            <Table.Td className=\"d-none d-md-block\"> none</Table.Td>\n\n                            <Table.Td align=\"right\">\n                                <div className=\"actions\">\n                                    <ConfirmIconButton Icon={Icons.Trash} render={() => {}} />\n                                </div>\n                            </Table.Td>\n                        </Table.Tr>\n                    );\n                }}\n                className=\"w-100\"\n            />\n        </div>\n    );\n}\n","import { debounce, throttle } from \"lodash\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport Form from \"@miq/form\";\nimport { Portal, Button, IconButton, Icons, Collapse } from \"@miq/components\";\nimport { docServices } from \"../../utils\";\nimport { UserCard } from \".\";\n\nexport default function SelectUserModal({ form, doc, ...props }) {\n    const [q, setQ] = useState(\"\");\n    const [users, setUsers] = useState([]);\n\n    const getStaffUsers = (q) =>\n        docServices.getStaffList(q).then(({ results }) => {\n            // if (results)\n            setUsers(results);\n        });\n    const debounceGetStaffUsers = useCallback(debounce(getStaffUsers, 400), []);\n\n    useEffect(() => {\n        if (!q || q.length < 3) return;\n\n        debounceGetStaffUsers(q);\n    }, [q, debounceGetStaffUsers]);\n\n    if (!form || !doc) return null;\n\n    const setUser = (user) => {\n        if (doc.users.includes(user.slug)) return;\n        form.setValue(\"user\", user);\n    };\n\n    return (\n        <Portal>\n            <Form context={form} id=\"DocumentShareModal\" className=\"dms-share\">\n                <Portal.Modal\n                    /**\n                     * HEADER\n                     */\n                    header={\n                        <div className=\"dms-share-header\">\n                            <div className=\"title\">\n                                <div className=\"btn btn-icon select\">\n                                    <Icons.PersonPlus className=\"icon\" />\n                                </div>\n                                <h2>Partager avec des personnes</h2>\n                            </div>\n\n                            <div className=\"actions\">\n                                <IconButton Icon={Icons.X} onClick={props.closeModal} />\n                            </div>\n                        </div>\n                    }\n                    /**\n                     * FOOTER\n                     */\n                    footer={\n                        <div className=\"dms-share-footer\">\n                            <div className=\"\">\n                                <Button\n                                    // primary\n                                    onClick={props.closeModal}\n                                >\n                                    Terminé\n                                </Button>\n                            </div>\n                        </div>\n                    }\n                >\n                    <div className=\"dms-share-select\">\n                        <Collapse\n                            floating\n                            header={\n                                <input\n                                    required\n                                    name=\"q\"\n                                    onChange={(e) => setQ(e.target.value)}\n                                    placeholder=\"Ajouter des personnes\"\n                                    className=\"miq-input mb-1\"\n                                />\n                            }\n                            isOpen={q.length > 2 && users.length > 0}\n                        >\n                            {users.map((user, i) => (\n                                <div\n                                    className=\"dms-user-item\"\n                                    onClick={() => setUser(user)}\n                                    key={`${user.slug}-${i}`}\n                                    role=\"button\"\n                                >\n                                    <UserCard {...{ user, form }} />\n                                </div>\n                            ))}\n                        </Collapse>\n\n                        <div className=\"dms-share-users my-2\">\n                            {doc.users_data.map((user) => {\n                                return (\n                                    <div\n                                        className=\"my-1 d-flex align-items-center justify-content-between\"\n                                        key={user.slug}\n                                    >\n                                        <UserCard {...{ user, form }} />\n\n                                        <div className=\"d-flex align-items-center\">\n                                            <DocuSharedPermissionSelect\n                                                {...{ user, doc, form, setDoc: props.setDoc }}\n                                                className=\"me-1\"\n                                            />\n                                            <IconButton\n                                                Icon={Icons.X}\n                                                onClick={() => {\n                                                    docServices\n                                                        .patchUser(doc.slug, { action: \"remove\", users: [user.slug] })\n                                                        .then((data) => {\n                                                            props.setDoc({ ...doc, ...data });\n                                                        })\n                                                        .catch((err) => {\n                                                            console.log(err);\n                                                        });\n                                                }}\n                                                title=\"Supprimer cet utilisateur\"\n                                            />\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </Portal.Modal>\n            </Form>\n        </Portal>\n    );\n}\n\nconst DocuSharedPermissionSelect = ({ user, doc, ...props }) => {\n    const [value, setValue] = useState(user.permission || \"VIEW\");\n\n    const permissions = Object.values(doc.permissions);\n\n    return (\n        <select\n            value={value}\n            className=\"miq-select me-1\"\n            onChange={(e) => {\n                const { value } = e.target;\n                setValue(value);\n                docServices\n                    .patchUserPermission(doc.slug, user.slug, value)\n                    .then((data) => props.setDoc({ ...doc, ...data }));\n            }}\n        >\n            {permissions.map((perm) => (\n                <option key={perm.name} value={perm.value}>\n                    {perm.label}\n                </option>\n            ))}\n        </select>\n    );\n};\n\n/**\n *\n * @param {*} param0\n * @returns\n */\n\nexport function SelectUserTab({ doc, form = {}, ...props }) {\n    const q = form.values.q;\n    const [users, setUsers] = useState([]);\n    const [width, setWidth] = useState(null);\n\n    const getStaffUsers = (q) =>\n        docServices.getStaffList(q).then(({ results }) => {\n            if (results) setUsers(results);\n            console.log(\"her\");\n        });\n    const debounceGetStaffUsers = useCallback(debounce(getStaffUsers, 400), []);\n\n    useEffect(() => {\n        if (!q || q.length < 3) return;\n        debounceGetStaffUsers(q);\n    }, [q, debounceGetStaffUsers]);\n\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const el = ref.current;\n        if (!el || typeof window !== \"object\") return;\n\n        const resize = throttle(\n            () => {\n                const rect = el.getBoundingClientRect();\n                setWidth(rect.width);\n            },\n            400,\n            { trailing: true }\n        );\n\n        window.addEventListener(\"resize\", resize);\n        resize();\n\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    const setUser = (user) => {\n        if (!form || doc.users.includes(user.slug)) return;\n        form.setValue(\"user\", user);\n    };\n\n    return (\n        <div className=\"dms-dropdown\">\n            <div className=\"dms-dropdown-header\">\n                <Form.TextInput required name=\"q\" placeholder=\"Ajouter des personnes\" className=\"mb-1\" ref={ref} />\n            </div>\n\n            {users && users.length !== 0 && (\n                <div className=\"dms-dropdown-body\" style={{ width }}>\n                    <ul className=\"inner\">\n                        {users.map((user, i) => {\n                            return (\n                                <li\n                                    className=\"dms-dropdown-item\"\n                                    onClick={() => setUser(user)}\n                                    key={`${user.slug}-${i}`}\n                                    role=\"button\"\n                                >\n                                    <UserCard {...{ user, form }} />\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n","import Form from \"@miq/form\";\nimport { Portal, Icons, Button, IconButton } from \"@miq/components\";\nimport { UserCard } from \".\";\nimport { docServices } from \"../../utils\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function AddUserModal({ form, doc, ...props }) {\n    const user = form.values.user;\n\n    if (!form) return null;\n\n    const addUser = () => {\n        const { slug } = form.values.user;\n        if (slug === doc.uploaded_by.slug) {\n            return;\n        }\n\n        docServices\n            .patchUser(doc.slug, { action: \"add\", users: [slug] })\n            .then((data) => {\n                props.setDoc({ ...doc, ...data });\n                form.setValue(\"user\", null);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <Portal>\n            <Form context={form} id=\"DocumentShareModal\" className=\"dms-share\">\n                <Portal.Modal\n                    /**\n                     * HEADER\n                     */\n                    header={\n                        <div className=\"dms-share-header\">\n                            <div className=\"title\">\n                                <div>\n                                    <IconButton\n                                        Icon={Icons.ArrowLeft}\n                                        onClick={() => form.setValue(\"user\", \"\")}\n                                        title=\"Retourner derriere\"\n                                        className=\"add\"\n                                    />\n                                </div>\n                                <h2>Partager avec des personnes</h2>\n                            </div>\n\n                            <div className=\"actions\"></div>\n                        </div>\n                    }\n                    /**\n                     * FOOTER\n                     */\n                    footer={\n                        <div className=\"dms-share-footer\">\n                            <div className=\"\">\n                                <Button onClick={addUser}>Envoyer</Button>\n                            </div>\n                        </div>\n                    }\n                >\n                    <div className=\"dms-share-add\">\n                        <div className=\"\">\n                            <UserCard {...{ user }} />\n                        </div>\n\n                        <div className=\"add-form mt-2\">\n                            <Form.CheckboxInput\n                                name=\"sendNotif\"\n                                checked={form.values.sendNotif}\n                                label=\"Envoyer une notification\"\n                            />\n\n                            <Form.TextArea\n                                name=\"message\"\n                                placeholder=\"Message\"\n                                maxLength={200}\n                                rows={4}\n                                className=\"my-1\"\n                            />\n                        </div>\n                    </div>\n                </Portal.Modal>\n            </Form>\n        </Portal>\n    );\n}\n","import { useForm } from \"@miq/form\";\nimport { Avatar } from \"@miq/components\";\nimport SelectUserModal from \"./SelectUserModal\";\nimport AddUserModal from \"./AddUserModal\";\n\nimport \"./share-modal.scss\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentShareModal(props) {\n    const form = useForm({\n        q: \"\",\n        user: null,\n        sendNotif: true,\n        message: \"\",\n    });\n\n    const { isOpen } = props;\n\n    if (!isOpen) return null;\n\n    const closeModal = () => props.setOpen(false);\n\n    if (form.values.user) return <AddUserModal {...props} {...{ form, closeModal }} />;\n\n    return <SelectUserModal {...props} {...{ form, closeModal }} />;\n}\n\nexport const UserCard = ({ user, form, ...props }) => {\n    return (\n        <div className=\"d-flex align-items-center\">\n            <div className=\"\">\n                <Avatar {...user.img_data} />\n            </div>\n            <div className=\"ms-1\">\n                <div className=\"\">{user.name}</div>\n                <div className=\"text-sm text-muted\">@{user.username}</div>\n            </div>\n        </div>\n    );\n};\n","import Form, { FormProvider } from \"@miq/form\";\n\nimport { isRequired } from \"@miq/utils\";\n\nexport default function DocumentUpdateForm({ docSlug, ...props }) {\n    const { form = isRequired(\"form\"), doc, handleTextInputSave } = props;\n\n    return (\n        <FormProvider value={form}>\n            <div className=\"d-grid grid-lg-12 mb-2\">\n                <Form.Label value=\"Reference\" className=\"span-12 mb-1\" />\n                <Form.TextInput\n                    name=\"reference\"\n                    onSave={handleTextInputSave}\n                    autoComplete=\"off\"\n                    className=\"span-12 span-md-4\"\n                    placeholder=\"Ajouter une reference ...\"\n                    disabled={doc.is_read_only}\n                />\n            </div>\n\n            <div className=\"d-grid grid-1 grid-xl-12 mb-2\">\n                <Form.Label value=\"Description\" className=\"span-12 mb-1\" />\n\n                <div className=\"span-lg-8\">\n                    <Form.TextAreaX\n                        name=\"description\"\n                        onSave={handleTextInputSave}\n                        placeholder=\"Ajouter une description ...\"\n                        disabled={doc.is_read_only}\n                    />\n                </div>\n            </div>\n        </FormProvider>\n    );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { AdminView } from \"@miq/adminjs\";\nimport { addForwardSlash } from \"@miq/utils\";\nimport { Icons, IconButton, IconNavLink } from \"@miq/components\";\n\nimport { docServices } from \"../utils\";\n// import DocuFileGrid from \"../../docufile/FileGrid\";\nimport DocuFileUploadButton from \"../../docufile/UploadButton\";\nimport { DocuFileList } from \"../../docufile\";\n\nimport \"./update-view.scss\";\n\nimport DocumentShareModal from \"./ShareModal\";\nimport DocumentUpdateForm from \"./UpdateForm\";\nimport { DocumentDeleteIconButton } from \"../components\";\n\n// import { Prompt } from \"react-router-dom\";\n\nconst ViewHeader = (props) => {\n    const { doc } = props;\n    const [isOpen, setOpen] = useState(false);\n\n    // useEffect(() => {\n    //     return () => {\n    //         window.confirm(\"Are you sure\");\n    //     };\n    // }, []);\n\n    return (\n        <div className=\"document-update-header border-bottom mt-1 py-1\">\n            <div className=\"pe-1\">\n                <IconNavLink\n                    to={props.match.path.replace(\":docSlug/\", \"\")}\n                    Icon={Icons.ArrowLeft}\n                    title=\"Retourner en arriere\"\n                    className=\"\"\n                />\n            </div>\n            <div className=\"flex-1\">\n                <Form.TextInput\n                    required\n                    name=\"title\"\n                    onSave={props.handleTextInputSave}\n                    disabled={doc.is_read_only}\n                    autoComplete=\"off\"\n                    tabIndex={0}\n                    aria-label=\"Renommer ce document\"\n                    title=\"Renommer ce document\"\n                    data-tooltip=\"Renommer ce document\"\n                />\n            </div>\n\n            <div className=\"ps-1\">\n                <IconButton\n                    onClick={() => setOpen(true)}\n                    disabled={doc.is_read_only}\n                    Icon={Icons.Share}\n                    className=\"btn-primary\"\n                    label=\"Partager\"\n                    title=\"Partager ce document avec des personnes\"\n                />\n\n                {!doc.is_read_only && isOpen && <DocumentShareModal {...props} {...{ setOpen, isOpen }} />}\n            </div>\n        </div>\n        // </Prompt>\n    );\n};\n\nconst Actions = (props) => {\n    const { docSlug, doc } = props;\n\n    const handleArchive = (e) => {\n        const url = `${addForwardSlash(props.match.url)}view/`;\n        if (doc.status === \"ARCHIVED\") return props.history.push(url);\n\n        docServices\n            .archive(docSlug)\n            .then(() => {\n                props.history.push(url);\n            })\n            .catch((err) => {});\n    };\n\n    return (\n        <div className=\"document-update-view-actions border-bottom py-1 mb-2\">\n            <DocumentDeleteIconButton\n                {...props}\n                {...{ docSlug }}\n                label=\"Supprimer\"\n                className=\"me-1\"\n                onSuccess={() => props.history.push(\"/grio/documents/\")}\n            />\n\n            <IconButton\n                Icon={Icons.Archive}\n                onClick={handleArchive}\n                label=\"Archiver\"\n                title=\"Archiver ce document. Un document archivé ne peut plus être modifié\"\n                disabled={doc.is_read_only}\n                // className=\"p-1\"\n            />\n        </div>\n    );\n};\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentUpdateView(props) {\n    const { docSlug } = props.match.params;\n\n    const [doc, setDoc] = useState(null);\n    const [error, setError] = useState(null);\n\n    const form = useForm({ title: \"\", reference: \"\", description: \"\" });\n    const { setValues } = form;\n\n    useEffect(() => {\n        docServices\n            .get(docSlug)\n            .then((data) => {\n                setDoc(data);\n                setValues({\n                    title: data.title || \"\",\n                    reference: data.reference || \"\",\n                    description: data.description || \"\",\n                });\n            })\n            .catch((err) => {\n                if (err.response) {\n                    if (err.response.status === 404) {\n                        setError(\"notfound\");\n                        return;\n                    }\n                }\n\n                setError(\"error\");\n            });\n    }, [docSlug, setValues]);\n\n    if (error) {\n        return (\n            <div>\n                <h1>Ce document n'existe pas</h1>\n            </div>\n        );\n    }\n\n    if (!doc || !doc.slug) return null;\n\n    /**\n     *\n     * @param {Object} param0\n     * @returns\n     */\n    const handleTextInputSave = ({ name, value }) => {\n        if (!doc || doc.is_read_only) return;\n\n        docServices\n            .patch(docSlug, { [name]: value }, { [name]: doc[name] })\n            .then((data) => {\n                // console.log(data);\n            })\n            .catch((err) => {});\n    };\n\n    const addFile = (fileData) => {\n        const { slug } = fileData;\n        docServices\n            .patchFile(docSlug, { action: \"add\", files: [slug] })\n            .then((data) => {\n                props.setDoc({ ...doc, ...data });\n            })\n            .catch((err) => {});\n    };\n\n    const shared = { docSlug, doc, setDoc, docSlug, form, handleTextInputSave };\n\n    return (\n        <Form context={form} className=\"document-update-form\">\n            {/* <Prompt when={isL} message=\"Are you sure?\"> */}\n            <AdminView className=\"document-update-view miq-container-fluid\">\n                <ViewHeader {...props} {...{ doc, setDoc, handleTextInputSave }} />\n\n                <Actions {...props} {...shared} />\n\n                {/* FORM */}\n                <div className=\"border-bottom mb-3\">\n                    <DocumentUpdateForm {...props} {...shared} />\n                </div>\n\n                {/* FILES */}\n                <div>\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\n                        <h4>Fichiers</h4>\n                        <div className=\"actions\">\n                            <DocuFileUploadButton\n                                onSuccess={addFile}\n                                disabled={doc.is_read_only}\n                                className=\"btn-primary-2\"\n                            />\n                        </div>\n                    </div>\n\n                    {doc.files && doc.files.length > 0 ? (\n                        <DocuFileList items={doc.files_data} />\n                    ) : (\n                        <div className=\"w-100 text-center py-4\">Vous n'avez pas de fichiers ajoutés.</div>\n                    )}\n                    {/* <DocuFileGrid items={doc.files_data} /> */}\n                </div>\n            </AdminView>\n            {/* </Prompt> */}\n        </Form>\n    );\n}\n","import { API, services } from \"@miq/adminjs\";\nimport { getService } from \"@miq/utils\";\nimport { addOrUpdateArrayObject } from \"@miq/utils\";\nimport { formatDate } from \"@miq/utils\";\n\nexport const formatDocDate = (date) => formatDate(date, { month: \"numeric\", day: \"numeric\", year: \"numeric\" });\n\nexport const getDocumentLinkTo = (document, path) => {\n    const link = `${path}${document.slug}/`;\n    if (document.is_read_only) {\n        return `${link}view/`;\n    }\n    return link;\n};\n\nexport const docServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUMENT\n     */\n\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(docSlug, params) {\n        return getService(API, `${this.path}${docSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(docSlug, values, oldValues) {\n        return services.patch(`${this.path}${docSlug}/`, values, oldValues);\n    },\n    archive(docSlug) {\n        return services.get(`${this.path}${docSlug}/archive/`);\n    },\n    delete(docSlug) {\n        return services.delete(`${this.path}${docSlug}/`);\n    },\n\n    /**\n     * Add a docufile to a document\n     * @param {*} docSlug\n     * @param {*} values\n     * @returns\n     */\n\n    patchFile(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/files/`, values);\n    },\n\n    /**\n     * USER\n     */\n\n    patchUserPermission(docSlug, user_slug, permission) {\n        return services.post(`${this.path}${docSlug}/permission/`, { user_slug, permission });\n    },\n\n    getStaffList(q) {\n        return services.get(\"search-staff/\", { q });\n    },\n\n    patchUser(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/users/`, values);\n    },\n};\n\nexport const docsReducer = (state = { results: [] }, action) => {\n    const { type, payload = {} } = action;\n    let results;\n\n    switch (type) {\n        case \"SET_DOCS\":\n            return { ...payload };\n\n        case \"APPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"ADD_UPDATE_DOC\":\n        case \"PREPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_DOC\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n"],"sourceRoot":""}