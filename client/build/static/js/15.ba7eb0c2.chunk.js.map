{"version":3,"sources":["../../../../../packages/miq-hrmjs/src/employee/utils.jsx","../../../../../packages/miq-hrmjs/src/employee/ListView.jsx","../../../../../packages/miq-hrmjs/src/employee/index.jsx"],"names":["employeeServices","path","list","params","getService","API","this","listPage","url","get","empSlug","post","values","services","patch","oldValues","delete","EmployeeListView","props","compSlug","match","useState","results","data","setData","useEffect","company","then","catch","err","addForwardSlash","title","className","actions","Icon","Icons","Plus","label","to","items","renderItem","employee","user","slug","img_data","first_name","last_name","position","department_data","name","pagination","count","next","previous","onPreviousClick","onNextClick","EmployeeUpdateView","lazy","EmployeeCreateView","EmployeeRoutes","fallback","component","requiredPerms"],"mappings":"qHAAA,oDAGaA,EAAmB,CAC5BC,KAAM,aACNC,KAF4B,SAEvBC,GACD,OAAOC,YAAWC,IAAKC,KAAKL,KAAME,IAEtCI,SAL4B,SAKnBC,GACL,OAAOJ,YAAWC,IAAKG,IAE3BC,IAR4B,SAQxBC,EAASP,GACT,OAAOC,YAAWC,IAAD,UAASC,KAAKL,MAAd,OAAqBS,EAArB,KAAiCP,IAEtDQ,KAX4B,SAWvBC,GACD,OAAOC,IAASF,KAAT,UAAiBL,KAAKL,MAAQW,IAEzCE,MAd4B,SActBJ,EAASE,EAAQG,GACnB,OAAOF,IAASC,MAAT,UAAkBR,KAAKL,MAAvB,OAA8BS,EAA9B,KAA0CE,EAAQG,IAE7DC,OAjB4B,SAiBrBN,GACH,OAAOG,IAASG,OAAT,UAAmBV,KAAKL,MAAxB,OAA+BS,EAA/B,S,+JCTA,SAASO,EAAiBC,GACrC,IAAQC,EAAaD,EAAME,MAAMjB,OAAzBgB,SACR,EAAwBE,mBAAS,CAAEC,QAAS,KAA5C,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACNzB,IACKE,KAAK,CAAEwB,QAASP,IAChBQ,MAAK,SAACJ,GACHC,EAAQD,MAGXK,OAAM,SAACC,SACb,CAACV,IAEJ,IAAMX,EAAMsB,YAAgBZ,EAAME,MAAMZ,KAExC,OACI,cAAC,IAAD,CACIuB,MAAM,YACNC,UAAU,qBACVC,QAAS,cAAC,IAAD,CAAcC,KAAMC,IAAMC,KAAMC,MAAM,eAAeC,GAAE,UAAK9B,EAAL,UAHpE,SAKI,cAAC,IAAD,CACI+B,MAAOhB,EAAKD,QACZkB,WAAY,WAA8B,IAA7BC,EAA4B,uDAAjB,CAAEC,KAAM,IAC5B,OACI,cAAC,IAAD,CAA6BJ,GAAE,UAAK9B,GAAL,OAAWiC,EAASE,KAApB,KAA/B,SACI,sBAAKX,UAAU,qBAAf,UACI,cAAC,IAAD,2BAAYS,EAASC,KAAKE,UAA1B,IAAoCZ,UAAU,qBAE9C,sBAAKA,UAAU,yCAAf,UACI,sBAAKA,UAAU,OAAf,UACKS,EAASC,KAAKG,WADnB,IACgCJ,EAASC,KAAKI,UAC1C,qBAAKd,UAAU,qBAAf,SAAqCS,EAASM,cAGlD,qBAAKf,UAAU,UAAf,SAA0BS,EAASO,gBAAgBC,cAVjDR,EAASE,OAgB/BO,WAAY,CACRC,MAAO5B,EAAK4B,MACZC,KAAM7B,EAAK6B,KACXC,SAAU9B,EAAK8B,SACfC,gBAAiB,aACjBC,YAAa,kBCnDjC,IAAMC,EAAqBC,gBAAK,kBAAM,kCAChCC,EAAqBD,gBAAK,kBAAM,kCAEvB,SAASE,EAAezC,GACnC,IAAQjB,EAASiB,EAAME,MAAfnB,KAER,OACI,cAAC,WAAD,CAAU2D,SAAU,cAAC,IAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACI3D,KAAI,UAAKA,EAAL,QACJ4D,UAAWH,EACXI,cAAe,CAAC,0BAEpB,cAAC,IAAD,CACI7D,KAAI,UAAKA,EAAL,aACJ4D,UAAWL,EACXM,cAAe,CAAC,6BAEpB,cAAC,IAAD,CAAY7D,KAAI,UAAKA,GAAQ4D,UAAW5C,EAAkB6C,cAAe,CAAC","file":"static/js/15.ba7eb0c2.chunk.js","sourcesContent":["import { API, services } from \"@miq/adminjs\";\nimport { getService } from \"@miq/utils\";\n\nexport const employeeServices = {\n    path: \"employees/\",\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(empSlug, params) {\n        return getService(API, `${this.path}${empSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(empSlug, values, oldValues) {\n        return services.patch(`${this.path}${empSlug}/`, values, oldValues);\n    },\n    delete(empSlug) {\n        return services.delete(`${this.path}${empSlug}/`);\n    },\n};\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AdminView, AdminNavLink } from \"@miq/adminjs\";\nimport { addForwardSlash } from \"@miq/utils\";\nimport { Avatar, ItemList, Icons } from \"@miq/components\";\n\nimport { employeeServices } from \"./utils\";\n\nconst propTypes = {};\n\nexport default function EmployeeListView(props) {\n    const { compSlug } = props.match.params;\n    const [data, setData] = useState({ results: [] });\n\n    useEffect(() => {\n        employeeServices\n            .list({ company: compSlug })\n            .then((data) => {\n                setData(data);\n                // console.log(data);\n            })\n            .catch((err) => {});\n    }, [compSlug]);\n\n    const url = addForwardSlash(props.match.url);\n\n    return (\n        <AdminView\n            title=\"Employees\"\n            className=\"employee-list-view\"\n            actions={<AdminNavLink Icon={Icons.Plus} label=\"Add employee\" to={`${url}new/`} />}\n        >\n            <ItemList\n                items={data.results}\n                renderItem={(employee = { user: {} }) => {\n                    return (\n                        <NavLink key={employee.slug} to={`${url}${employee.slug}/`}>\n                            <div className=\"employee-list-item\">\n                                <Avatar {...employee.user.img_data} className=\"employee-avatar\" />\n\n                                <div className=\"content d-flex justify-content-between\">\n                                    <div className=\"name\">\n                                        {employee.user.first_name} {employee.user.last_name}\n                                        <div className=\"text-muted text-sm\">{employee.position}</div>\n                                    </div>\n\n                                    <div className=\"text-sm\">{employee.department_data.name}</div>\n                                </div>\n                            </div>\n                        </NavLink>\n                    );\n                }}\n                pagination={{\n                    count: data.count,\n                    next: data.next,\n                    previous: data.previous,\n                    onPreviousClick: () => {},\n                    onNextClick: () => {},\n                }}\n            />\n        </AdminView>\n    );\n}\n\nEmployeeListView.propTypes = propTypes;\n","import { AdminRoute } from \"@miq/adminjs\";\nimport { Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport { Loading } from \"@miq/components\";\n\nimport EmployeeListView from \"./ListView\";\n\nconst EmployeeUpdateView = lazy(() => import(\"./UpdateView\"));\nconst EmployeeCreateView = lazy(() => import(\"./CreateView\"));\n\nexport default function EmployeeRoutes(props) {\n    const { path } = props.match;\n\n    return (\n        <Suspense fallback={<Loading />}>\n            <Switch>\n                <AdminRoute\n                    path={`${path}new/`}\n                    component={EmployeeCreateView}\n                    requiredPerms={[\"miq_hrm.add_employee\"]}\n                />\n                <AdminRoute\n                    path={`${path}:empSlug/`}\n                    component={EmployeeUpdateView}\n                    requiredPerms={[\"miq_hrm.change_employee\"]}\n                />\n                <AdminRoute path={`${path}`} component={EmployeeListView} requiredPerms={[\"miq_hrm.view_employee\"]} />\n            </Switch>\n        </Suspense>\n    );\n}\n"],"sourceRoot":""}