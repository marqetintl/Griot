{"version":3,"sources":["../../../../../packages/miq-dmsjs/src/document/components.jsx","../../../../../packages/miq-dmsjs/src/document/DocAddForm.jsx","../../../../../packages/miq-dmsjs/src/document/DocTable.jsx","../../../../../packages/miq-dmsjs/src/document/index.jsx","../../../../../packages/miq-dmsjs/src/document/utils.jsx"],"names":["DocumentDeleteIconButton","doc","docSlug","onSuccess","props","is_read_only","deleteDocument","docServices","delete","then","res","isFunction","catch","err","Icon","Icons","Trash","id","label","className","title","renderHeader","renderFooter","setOpen","disabled","onClick","render","UserCount","document","users","length","PersonCircle","FileCount","files","FileEarmarkText","DocumentAddForm","form","useForm","context","onSubmit","e","preventDefault","values","post","newData","handleErr","setError","TextInput","required","autoComplete","name","placeholder","error","errors","maxLength","onCancel","Submit","value","DocumentRow","status","Tr","getClassName","Td","to","getDocumentLinkTo","match","path","title_truncated","formatDocDate","created","slug","setData","data","count","results","filter","i","DocumentTable","items","renderItem","item","key","pagination","next","previous","onPreviousClick","listPage","onNextClick","SearchTextInput","search","history","query","URLSearchParams","useState","get","q","setQ","push","useRef","debounce","url","Search","type","onChange","target","set","current","URL","window","location","href","pathname","DocumentIndexView","setStatus","isAdding","setAdding","perms","useContext","SharedDataCtx","getDocuments","useCallback","list","useEffect","params","canAdd","hasPerms","actions","labelFirst","Plus","newDocument","style","position","top","date","formatDate","month","day","year","link","getService","API","this","services","patch","oldValues","archive","patchFile","Object","keys","includes","Promise","reject","patchUserPermission","user_slug","permission","getStaffList","patchUser"],"mappings":"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","file":"static/js/8.780efdb4.chunk.js","sourcesContent":["import { isFunction } from \"lodash\";\n\nimport { getClassName } from \"@miq/utils\";\nimport { Icons, ConfirmIconButton, Button } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\n\nexport const DocumentDeleteIconButton = ({ doc, docSlug, onSuccess, ...props }) => {\n    if (!doc || doc.is_read_only) return null;\n\n    const deleteDocument = () =>\n        docServices\n            .delete(docSlug)\n            .then((res) => {\n                isFunction(onSuccess) && onSuccess(docSlug);\n            })\n            .catch((err) => {});\n\n    return (\n        <ConfirmIconButton\n            Icon={Icons.Trash}\n            id={props.id}\n            label={props.label}\n            className={props.className}\n            title=\"Supprimer ce document\"\n            renderHeader={() => (\n                <div>\n                    <h3>Supprimer ce document</h3>\n                </div>\n            )}\n            renderFooter={({ setOpen }) => (\n                <div className=\"flex-1 d-flex align-items-center justify-content-between\">\n                    <Button disabled={doc.is_read_only} onClick={deleteDocument} className=\"btn-danger\">\n                        Confirmer\n                    </Button>\n                    <Button onClick={() => setOpen(false)}>Annuler</Button>\n                </div>\n            )}\n            render={() => (\n                <div className=\"p-4\">\n                    <p>Are you sure you want to delete “2. Parties in Payment Gateway business”?</p>\n                    <p>This item will be deleted immediately. You can’t undo this action.</p>\n                </div>\n            )}\n            disabled={doc.is_read_only}\n        />\n    );\n};\n\nexport const UserCount = ({ document = {}, ...props }) => {\n    if (!document || !document.users || !document.users.length) return null;\n\n    return (\n        <span className=\"me-1 d-flex align-items-center\">\n            <span className=\"count\">{document.users.length}</span>\n            <Icons.PersonCircle />\n        </span>\n    );\n};\n\nexport const FileCount = ({ document = {}, ...props }) => {\n    if (!document || !document.files || !document.files.length) return null;\n\n    return (\n        <span className=\"me-1 d-flex align-items-center\">\n            <span className=\"count\">{document.files.length}</span>\n            <Icons.FileEarmarkText />\n        </span>\n    );\n};\n","import Form, { useForm } from \"@miq/form\";\nimport { Button } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\n\nexport default function DocumentAddForm(props) {\n    const form = useForm({ title: \"\" });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const { title } = form.values;\n\n        if (!title) {\n            form.setError(\"title\", \"Entrez le titre du nouveau document\");\n            return;\n        }\n\n        docServices\n            .post({ title })\n            .then((newData) => props.onSuccess(newData))\n            .catch((err) => form.handleErr(err, true));\n    };\n\n    return (\n        <Form context={form} onSubmit={handleSubmit} className=\"document-add-form mb-3\">\n            <div className=\"mb-1\">\n                <Form.TextInput\n                    required\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    placeholder=\"Entrez le titre du nouveau document\"\n                    error={form.errors.title}\n                    maxLength={99}\n                />\n            </div>\n\n            <div className=\"d-flex align-items-center justify-content-between\">\n                <div className=\"\">\n                    <Button onClick={props.onCancel}>Annuler</Button>\n                </div>\n\n                <div className=\"\">\n                    <Form.Submit value=\"Ajouter\" className=\"btn\" />\n                </div>\n            </div>\n        </Form>\n    );\n}\n","import { Link } from \"react-router-dom\";\n\nimport { getClassName } from \"@miq/utils\";\nimport { Icons, ConfirmIconButton, Table, ItemTable } from \"@miq/components\";\n\nimport { docServices, formatDocDate, getDocumentLinkTo } from \"./utils\";\nimport { DocumentDeleteIconButton, FileCount, UserCount } from \"./components\";\n\nconst DocumentRow = ({ document = {}, ...props }) => {\n    const { status } = document;\n    return (\n        <Table.Tr className={getClassName([document.status === \"ARCHIVED\" && \"archived\", \"border-bottom\"])}>\n            <Table.Td className=\"w-100\">\n                <Link to={getDocumentLinkTo(document, props.match.path)}>\n                    <div className=\"\">{document.title_truncated}</div>\n                    <div className=\" d-flex document-meta text-muted ps-1\">\n                        <UserCount document={document} />\n                        <FileCount document={document} />\n                    </div>\n                </Link>\n            </Table.Td>\n\n            <Table.Td className=\"d-none d-md-table-cell\">\n                <div className=\"text-sm\">{document.status}</div>\n            </Table.Td>\n\n            <Table.Td className=\"d-none d-md-table-cell text-sm\">{formatDocDate(document.created)}</Table.Td>\n            <Table.Td className=\"\">\n                <div className=\"actions d-flex\">\n                    <DocumentDeleteIconButton\n                        {...props}\n                        docSlug={document.slug}\n                        doc={document}\n                        onSuccess={(slug) => {\n                            props.setData({\n                                ...props.data,\n                                count: props.data.count - 1,\n                                results: props.data.results.filter((i) => i.slug !== slug),\n                            });\n                        }}\n                    />\n                </div>\n            </Table.Td>\n        </Table.Tr>\n    );\n};\n\nexport default function DocumentTable(props) {\n    const { data = {}, setData } = props;\n\n    return (\n        <div className=\"document-table mb-3\">\n            <ItemTable\n                className=\"w-100\"\n                items={data.results}\n                renderItem={(item) => <DocumentRow {...props} document={item} key={item.slug} />}\n                pagination={{\n                    count: data.count,\n                    next: data.next,\n                    previous: data.previous,\n                    onPreviousClick: () =>\n                        docServices.listPage(data.previous).then((newData) => {\n                            setData(newData);\n                        }),\n                    onNextClick: () =>\n                        docServices.listPage(data.next).then((newData) => {\n                            setData(newData);\n                        }),\n                }}\n            />\n        </div>\n    );\n}\n","import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { debounce } from \"lodash\";\n\nimport { SharedDataCtx } from \"@miq/contexts\";\nimport { AdminView, hasPerms } from \"@miq/adminjs\";\nimport { Icons, IconButton } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\nimport DocumentAddForm from \"./DocAddForm\";\nimport DocumentTable from \"./DocTable\";\n\nimport \"./document.scss\";\n\nconst SearchTextInput = ({ search, history, ...props }) => {\n    const query = new URLSearchParams(search);\n\n    const [q, setQ] = useState(query.get(\"q\") || \"\");\n    const push = useRef(debounce((url) => history.push(url), 300));\n\n    const handleChange = (e) => {\n        const { value } = e.target;\n\n        setQ(value);\n\n        if (!value || value.length < 3) {\n            query.delete(\"q\");\n        } else {\n            query.set(\"q\", e.target.value);\n        }\n\n        if (!push.current) return;\n\n        const path = new URL(window.location.href);\n        push.current(`${path.pathname}?${query}`);\n    };\n\n    return (\n        <div className=\"document-search-form mb-3\">\n            <div className=\"icon-wrapper p-1\">\n                <Icons.Search className=\"icon\" />\n            </div>\n            <input\n                required\n                type=\"text\"\n                name=\"q\"\n                value={q}\n                onChange={handleChange}\n                className=\"miq-input\"\n                placeholder=\"Chercher un document par titre, reference ou description\"\n            />\n            {/* Search tous-tous les Documents elements envoye elements recus archive */}\n        </div>\n    );\n};\n\nexport default function DocumentIndexView(props) {\n    const [status, setStatus] = useState(\"loading\");\n\n    const [data, setData] = useState({ results: [] });\n    const [isAdding, setAdding] = useState(false);\n    const { perms } = useContext(SharedDataCtx);\n\n    const { search } = props.location;\n\n    const getDocuments = useCallback((...params) => docServices.list(...params), []);\n\n    useEffect(() => {\n        let params = new URLSearchParams(search);\n        if (![...params.values()].filter((i) => i).length) {\n            params = null;\n        }\n\n        getDocuments(params)\n            .then((data) => {\n                if (!data) {\n                    setStatus(\"empty\");\n                } else {\n                    setStatus(\"done\");\n                }\n\n                setData(data);\n            })\n            .catch((err) => {\n                setStatus(\"error\");\n            });\n    }, [getDocuments, search]);\n\n    const canAdd = hasPerms(perms.perms, [\"miq_dms.add_document\"]);\n\n    const handleDocumentAdd = (newDocument) => {\n        if (!canAdd) return;\n\n        const url = `${props.match.path}${newDocument.slug}/`;\n        return props.history.push(url);\n    };\n\n    return (\n        <AdminView\n            title=\"Documents\"\n            className=\"document-list-view mb-4\"\n            actions={\n                <>\n                    <IconButton\n                        labelFirst\n                        Icon={Icons.Plus}\n                        label=\"Ajouter\"\n                        title={\n                            canAdd ? \"Ajouter un nouveau document\" : \"Vous ne pouvez pas ajouter de nouveau document\"\n                        }\n                        onClick={() => setAdding(!isAdding)}\n                        disabled={!canAdd}\n                        className=\"btn-primary-2\"\n                    />\n                </>\n            }\n        >\n            <div className=\"miq-container\">\n                {isAdding && (\n                    <div className=\"\">\n                        <h3 className=\"mb-2\">Ajouter un nouveau document</h3>\n                        <DocumentAddForm onSuccess={handleDocumentAdd} onCancel={() => setAdding(false)} />\n                    </div>\n                )}\n\n                {!isAdding && <SearchTextInput {...props} {...{ status }} search={search} />}\n\n                <div className=\"\">\n                    <div className=\"bg-white\" style={{ position: \"sticky\", top: 0 }}>\n                        Sticky\n                    </div>\n\n                    <div id=\"top\" />\n\n                    <DocumentTable {...props} {...{ data, setData, status }} />\n                </div>\n            </div>\n        </AdminView>\n    );\n}\n","import { API, services } from \"@miq/adminjs\";\nimport { getService } from \"@miq/utils\";\nimport { addOrUpdateArrayObject } from \"@miq/utils\";\nimport { formatDate } from \"@miq/utils\";\n\nexport const formatDocDate = (date) => formatDate(date, { month: \"numeric\", day: \"numeric\", year: \"numeric\" });\n\nexport const getDocumentLinkTo = (document, path) => {\n    const link = `${path}${document.slug}/`;\n    if (document.is_read_only) {\n        return `${link}view/`;\n    }\n    return link;\n};\n\nexport const docServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUMENT\n     */\n\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(docSlug, params) {\n        return getService(API, `${this.path}${docSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(docSlug, values, oldValues) {\n        return services.patch(`${this.path}${docSlug}/`, values, oldValues);\n    },\n    archive(docSlug) {\n        return services.get(`${this.path}${docSlug}/archive/`);\n    },\n    delete(docSlug) {\n        return services.delete(`${this.path}${docSlug}/`);\n    },\n\n    /**\n     * Add a docufile to a document\n     * @param {*} docSlug\n     * @param {*} values\n     * @returns\n     */\n\n    patchFile(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/files/`, values);\n    },\n\n    /**\n     * USER\n     */\n\n    patchUserPermission(docSlug, user_slug, permission) {\n        return services.post(`${this.path}${docSlug}/permission/`, { user_slug, permission });\n    },\n\n    getStaffList(q) {\n        return services.get(\"search-staff/\", { q });\n    },\n\n    patchUser(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/users/`, values);\n    },\n};\n\nexport const docsReducer = (state = { results: [] }, action) => {\n    const { type, payload = {} } = action;\n    let results;\n\n    switch (type) {\n        case \"SET_DOCS\":\n            return { ...payload };\n\n        case \"APPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"ADD_UPDATE_DOC\":\n        case \"PREPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_DOC\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n"],"sourceRoot":""}