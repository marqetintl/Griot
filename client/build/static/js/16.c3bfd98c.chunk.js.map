{"version":3,"sources":["../../../../../packages/miq-hrmjs/src/employee/inputs.jsx","../../../../../packages/miq-hrmjs/src/employee/UpdateView.jsx"],"names":["EmployeeFirstnameInput","form","className","Label","value","TextInput","required","name","error","errors","first_name","minLength","EmployeeLastNameInput","last_name","EmployeeEmailInput","props","email","placeholder","type","EmployeeUpdateView","toastCtx","useContext","ToastCtx","useState","user","data","setData","compSlug","match","params","empSlug","useForm","private_email","setValues","useEffect","employeeServices","detail","company","then","empData","slug","catch","err","context","onSubmit","img_data","style","height","width","position","gender_label","username","number","Departement","onClick","success","message","warning","component","e","autoClose","render","id","remove","isEdit","setEdit","department_data"],"mappings":"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","file":"static/js/16.c3bfd98c.chunk.js","sourcesContent":["import Form from '@miq/form';\n\nexport function EmployeeFirstnameInput({ form, ...props }) {\n  return (\n    <div className=\"d-grid grid-md-12 mb-1\">\n      <Form.Label value=\"Firstname\" className=\"span-12 mb-0\" />\n      <Form.TextInput required name=\"first_name\" error={form.errors.first_name} className=\"span-md-6\" minLength={4} />\n    </div>\n  );\n}\n\nexport const EmployeeLastNameInput = ({ form, ...props }) => (\n  <div className=\"d-grid grid-md-12 mb-2\">\n    <Form.Label value=\"Lastname\" className=\"span-12 mb-0\" />\n    <Form.TextInput required name=\"last_name\" error={form.errors.last_name} className=\"span-md-6\" minLength={2} />\n  </div>\n);\n\nexport const EmployeeEmailInput = ({ form, ...props }) => (\n  <Form.TextInput\n    name=\"private_email\"\n    error={form.errors.email}\n    placeholder=\"employee@email.com\"\n    {...props}\n    required\n    type=\"email\"\n  />\n);\n","import { useCallback, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, ToastCtx } from '@miq/components';\n\nimport Form, { useForm } from '@miq/form';\nimport { AdminView } from '@miq/adminjs';\n\nimport { employeeServices } from './utils';\nimport { EmployeeFirstnameInput, EmployeeLastNameInput, EmployeeEmailInput } from './inputs';\n\nconst propTypes = {};\n\nexport default function EmployeeUpdateView(props) {\n  const toastCtx = useContext(ToastCtx);\n\n  const [data, setData] = useState({ user: {} });\n  const { compSlug } = props.match.params;\n  const { empSlug } = props.match.params;\n\n  const form = useForm({ first_name: '', last_name: '', private_email: '' });\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    if (!empSlug || !compSlug) return;\n\n    employeeServices\n      .detail(empSlug, { company: compSlug })\n      .then((empData) => {\n        setData(empData);\n        if (empData.slug) {\n          setValues({\n            first_name: empData.user.first_name || '',\n            last_name: empData.user.last_name || '',\n            private_email: empData.private_email || '',\n          });\n        }\n      })\n      .catch((err) => {});\n  }, [empSlug, compSlug, setValues]);\n\n  // console.log(data);\n\n  if (!data.slug) return null;\n\n  return (\n    <Form context={form} onSubmit={() => {}}>\n      <AdminView className=\"employee-update-view\">\n        <div className=\"d-grid grid-md-3 justify-content-between mb-3\">\n          <div className=\"d-flex justify-content-center\">\n            <Avatar {...data.user.img_data} style={{ height: 100, width: 100 }} />\n          </div>\n\n          <div className=\"span-md-2\">\n            <div className=\"d-flex align-items-center justify-content-between border-bottom p-1\">\n              <div className=\"\">Role</div>\n              <div className=\"\">{data.position}</div>\n            </div>\n            {data.user && (\n              <>\n                <div className=\"d-flex align-items-center justify-content-between border-bottom p-1\">\n                  <div className=\"\">Firstname</div>\n                  <div className=\"\">{data.user.first_name}</div>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-between border-bottom p-1\">\n                  <div className=\"\">Lastname</div>\n                  <div className=\"\">{data.user.last_name}</div>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-between p-1\">\n                  <div className=\"\">Sexe</div>\n                  <div className=\"\">{data.user.gender_label}</div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <section className=\"mb-2 p-1\">\n          <div>Contact</div>\n          <div className=\"d-flex align-items-center justify-content-between border-bottom p-1\">\n            <div className=\"\">Username</div>\n            <div className=\"\">{data.user.username}</div>\n          </div>\n          <div className=\"d-flex align-items-center justify-content-between border-bottom p-1\">\n            <div className=\"\">Phone number</div>\n            <div className=\"\">{data.user.number || '646 322 2795'}</div>\n          </div>\n          <div className=\"d-grid grid-12 p-1 border-bottom\">\n            <div className=\"span-12 span-md-6\">Email</div>\n            <EmployeeEmailInput {...{ form }} className=\"span-12 span-md-6 border-0\" />\n            {/* <div className=\"\">{data.user.email || \"user@email.com\"}</div> */}\n          </div>\n        </section>\n\n        <section className=\"mb-2 p-1\">\n          <div>Department</div>\n          <Departement data={data} />\n        </section>\n\n        <div className=\"\">\n          <button type=\"button\" onClick={() => toastCtx.success({ message: 'Hello' })}>\n            Add message\n          </button>\n          <button type=\"button\" onClick={() => toastCtx.warning({ component: <div>Hello {data.user.username}</div> })}>\n            Add component\n          </button>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              // e.stopPropagation();\n              toastCtx.error({\n                autoClose: false,\n                render: ({ id }) => (\n                  <button type=\"button\" onClick={() => toastCtx.remove(id)}>\n                    Close {id}\n                  </button>\n                ),\n              });\n            }}\n          >\n            render\n          </button>\n        </div>\n      </AdminView>\n    </Form>\n  );\n}\n\nEmployeeUpdateView.propTypes = propTypes;\n\nconst Departement = ({ data = {}, ...props }) => {\n  const [isEdit, setEdit] = useState(false);\n\n  if (!data.department_data) return null;\n\n  if (!isEdit) {\n    return (\n      <div className=\"p-1\">\n        <span>{data.department_data.name}</span>\n        <button onClick={() => setEdit(true)}>Update</button>\n      </div>\n    );\n  }\n\n  return (\n    <Form className=\"\">\n      <button onClick={() => setEdit(false)}>Annuler</button>\n    </Form>\n  );\n};\n"],"sourceRoot":""}