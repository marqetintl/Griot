{"version":3,"sources":["../../../../../packages/miq-hrmjs/src/employee/inputs.jsx","../../../../../packages/miq-hrmjs/src/employee/UpdateView.jsx"],"names":["EmployeeFirstnameInput","form","className","Label","value","TextInput","required","name","error","errors","first_name","minLength","EmployeeLastNameInput","last_name","EmployeeEmailInput","props","email","placeholder","type","EmployeeUpdateView","useContext","ToastCtx","useState","user","data","setData","compSlug","match","params","empSlug","useForm","private_email","setValues","useEffect","employeeServices","detail","company","then","empData","slug","catch","err","context","onSubmit","img_data","style","height","width","Section","title","position","gender_label","username","number","Departement","isEdit","setEdit","department_data","onClick"],"mappings":"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","file":"static/js/17.effd5544.chunk.js","sourcesContent":["import Form from '@miq/form';\n\nexport function EmployeeFirstnameInput({ form, ...props }) {\n  return (\n    <div className=\"d-grid grid-md-12 mb-1\">\n      <Form.Label value=\"Firstname\" className=\"span-12 mb-0\" />\n      <Form.TextInput required name=\"first_name\" error={form.errors.first_name} className=\"span-md-6\" minLength={4} />\n    </div>\n  );\n}\n\nexport const EmployeeLastNameInput = ({ form, ...props }) => (\n  <div className=\"d-grid grid-md-12 mb-2\">\n    <Form.Label value=\"Lastname\" className=\"span-12 mb-0\" />\n    <Form.TextInput required name=\"last_name\" error={form.errors.last_name} className=\"span-md-6\" minLength={2} />\n  </div>\n);\n\nexport const EmployeeEmailInput = ({ form, ...props }) => (\n  <Form.TextInput\n    name=\"private_email\"\n    error={form.errors.email}\n    placeholder=\"employee@email.com\"\n    {...props}\n    required\n    type=\"email\"\n  />\n);\n","import { useCallback, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, ToastCtx } from '@miq/components';\n\nimport Form, { useForm } from '@miq/form';\nimport { AdminView } from '@miq/adminjs';\n\nimport { employeeServices } from './utils';\nimport { EmployeeFirstnameInput, EmployeeLastNameInput, EmployeeEmailInput } from './inputs';\n\nconst propTypes = {};\n\nexport default function EmployeeUpdateView(props) {\n  const toastCtx = useContext(ToastCtx);\n\n  const [data, setData] = useState({ user: {} });\n  const { compSlug } = props.match.params;\n  const { empSlug } = props.match.params;\n\n  const form = useForm({ first_name: '', last_name: '', private_email: '' });\n  const setValues = form.setValues;\n\n  useEffect(() => {\n    if (!empSlug || !compSlug) return;\n\n    employeeServices\n      .detail(empSlug, { company: compSlug })\n      .then((empData) => {\n        setData(empData);\n        if (empData.slug) {\n          setValues({\n            first_name: empData.user.first_name || '',\n            last_name: empData.user.last_name || '',\n            private_email: empData.private_email || '',\n          });\n        }\n      })\n      .catch((err) => {});\n  }, [empSlug, compSlug, setValues]);\n\n  // console.log(data);\n\n  if (!data.slug) return null;\n\n  return (\n    <Form context={form} onSubmit={() => {}}>\n      <AdminView className=\"employee-update-view\">\n        <div className=\"d-grid grid-md-3 justify-content-between mb-3\">\n          <div className=\"d-flex justify-content-center\">\n            <Avatar {...data.user.img_data} style={{ height: 100, width: 100 }} />\n          </div>\n\n          <AdminView.Section title=\"Employee information\" className=\"span-md-2\">\n            <div className=\"d-flex align-items-center justify-content-between border-bottom p-1\">\n              <div className=\"\">Role</div>\n              <div className=\"\">{data.position}</div>\n            </div>\n\n            {data.user && (\n              <div className=\"\">\n                <EmployeeFirstnameInput {...{ form }} className=\"\" />\n                <EmployeeLastNameInput {...{ form }} className=\"\" />\n\n                <div className=\"d-flex align-items-center justify-content-between p-1\">\n                  <div className=\"\">Sexe</div>\n                  <div className=\"\">{data.user.gender_label}</div>\n                </div>\n              </div>\n            )}\n          </AdminView.Section>\n        </div>\n\n        <AdminView.Section title=\"Contact\">\n          <div className=\"d-flex align-items-center justify-content-between border-bottom p-1 mb-2\">\n            <div className=\"\">Username</div>\n            <div className=\"\">{data.user.username}</div>\n          </div>\n          <div className=\"d-flex align-items-center justify-content-between border-bottom p-1 mb-2\">\n            <div className=\"\">Phone number</div>\n            <div className=\"\">{data.user.number || '646 322 2795'}</div>\n          </div>\n          <div className=\"\">\n            <Form.Label value=\"Email\" className=\"mb-1\" />\n            <EmployeeEmailInput {...{ form }} className=\"\" />\n\n            {/* <div className=\"\">{data.user.email || \"user@email.com\"}</div> */}\n          </div>\n        </AdminView.Section>\n\n        <AdminView.Section title=\"Department\">\n          <Departement data={data} />\n        </AdminView.Section>\n      </AdminView>\n    </Form>\n  );\n}\n\nEmployeeUpdateView.propTypes = propTypes;\n\nconst Departement = ({ data = {}, ...props }) => {\n  const [isEdit, setEdit] = useState(false);\n\n  if (!data.department_data) return null;\n\n  if (!isEdit) {\n    return (\n      <div className=\"p-1\">\n        <span>{data.department_data.name}</span>\n        <button onClick={() => setEdit(true)}>Update</button>\n      </div>\n    );\n  }\n\n  return (\n    <Form className=\"\">\n      <button onClick={() => setEdit(false)}>Annuler</button>\n    </Form>\n  );\n};\n"],"sourceRoot":""}