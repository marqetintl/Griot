{"version":3,"sources":["../../../../../packages/miq-hrmjs/src/employee/utils.jsx","../../../../../packages/miq-hrmjs/src/employee/ListView.jsx","../../../../../packages/miq-hrmjs/src/employee/index.jsx"],"names":["employeeServices","StaffService","EmployeeListView","props","compSlug","match","params","useState","results","data","setData","useEffect","list","company","then","catch","err","url","addForwardSlash","className","Section","title","actions","label","to","items","renderItem","employee","user","slug","img_data","first_name","last_name","position","department_data","name","pagination","count","next","previous","onPreviousClick","onNextClick","EmployeeUpdateView","lazy","EmployeeCreateView","EmployeeRoutes","path","component","requiredPerms"],"mappings":"qHAAA,sCAEaA,EAAmB,IAFhC,KAEoCC,GAAa,e,8JCUlC,SAASC,EAAiBC,GACvC,IAAQC,EAAaD,EAAME,MAAMC,OAAzBF,SACR,EAAwBG,mBAAS,CAAEC,QAAS,KAA5C,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRX,IACGY,KAAK,CAAEC,QAAST,IAChBU,MAAK,SAACL,GACLC,EAAQD,MAGTM,OAAM,SAACC,SACT,CAACZ,IAEJ,IAAMa,EAAMC,YAAgBf,EAAME,MAAMY,KAExC,OACE,cAAC,IAAD,CAAWE,UAAU,qBAArB,SACE,cAAC,IAAUC,QAAX,CACEC,MAAM,YACNC,QAAS,cAAC,IAAD,CAAcC,MAAM,eAAeC,GAAE,UAAKP,EAAL,QAAgBE,UAAU,kBAF1E,SAIE,cAAC,IAAD,CACEM,MAAOhB,EAAKD,QACZkB,WAAY,WAA8B,IAA7BC,EAA4B,uDAAjB,CAAEC,KAAM,IAC9B,OACE,cAAC,IAAD,CAA6BJ,GAAE,UAAKP,GAAL,OAAWU,EAASE,KAApB,KAA/B,SACE,sBAAKV,UAAU,qBAAf,UACE,cAAC,IAAD,2BAAYQ,EAASC,KAAKE,UAA1B,IAAoCX,UAAU,qBAE9C,sBAAKA,UAAU,yCAAf,UACE,sBAAKA,UAAU,OAAf,UACGQ,EAASC,KAAKG,WADjB,IAC8BJ,EAASC,KAAKI,UAC1C,qBAAKb,UAAU,qBAAf,SAAqCQ,EAASM,cAGhD,qBAAKd,UAAU,UAAf,SAA0BQ,EAASO,gBAAgBC,cAV3CR,EAASE,OAgB3BO,WAAY,CACVC,MAAO5B,EAAK4B,MACZC,KAAM7B,EAAK6B,KACXC,SAAU9B,EAAK8B,SACfC,gBAAiB,aACjBC,YAAa,oBCrDzB,IAAMC,EAAqBC,gBAAK,kBAAM,kCAChCC,EAAqBD,gBAAK,kBAAM,kCAEvB,SAASE,EAAe1C,GACrC,IAAQ2C,EAAS3C,EAAME,MAAfyC,KAER,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYA,KAAI,UAAKA,EAAL,QAAiBC,UAAWH,EAAoBI,cAAe,CAAC,0BAChF,cAAC,IAAD,CACEF,KAAI,UAAKA,EAAL,aACJC,UAAWL,EACXM,cAAe,CAAC,6BAElB,cAAC,IAAD,CAAYF,KAAI,UAAKA,GAAQC,UAAW7C,EAAkB8C,cAAe,CAAC","file":"static/js/18.c2dd1628.chunk.js","sourcesContent":["import { StaffService } from '@miq/adminjs';\n\nexport const employeeServices = new StaffService('employees/');\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { AdminView, AdminNavLink } from '@miq/adminjs';\nimport { addForwardSlash } from '@miq/utils';\nimport { Avatar, ItemList, Icons } from '@miq/components';\n\nimport { employeeServices } from './utils';\n\nconst propTypes = {};\n\nexport default function EmployeeListView(props) {\n  const { compSlug } = props.match.params;\n  const [data, setData] = useState({ results: [] });\n\n  useEffect(() => {\n    employeeServices\n      .list({ company: compSlug })\n      .then((data) => {\n        setData(data);\n        // console.log(data);\n      })\n      .catch((err) => {});\n  }, [compSlug]);\n\n  const url = addForwardSlash(props.match.url);\n\n  return (\n    <AdminView className=\"employee-list-view\">\n      <AdminView.Section\n        title=\"Employees\"\n        actions={<AdminNavLink label=\"Add employee\" to={`${url}new/`} className=\"btn-primary-3\" />}\n      >\n        <ItemList\n          items={data.results}\n          renderItem={(employee = { user: {} }) => {\n            return (\n              <NavLink key={employee.slug} to={`${url}${employee.slug}/`}>\n                <div className=\"employee-list-item\">\n                  <Avatar {...employee.user.img_data} className=\"employee-avatar\" />\n\n                  <div className=\"content d-flex justify-content-between\">\n                    <div className=\"name\">\n                      {employee.user.first_name} {employee.user.last_name}\n                      <div className=\"text-muted text-sm\">{employee.position}</div>\n                    </div>\n\n                    <div className=\"text-sm\">{employee.department_data.name}</div>\n                  </div>\n                </div>\n              </NavLink>\n            );\n          }}\n          pagination={{\n            count: data.count,\n            next: data.next,\n            previous: data.previous,\n            onPreviousClick: () => {},\n            onNextClick: () => {},\n          }}\n        />\n      </AdminView.Section>\n    </AdminView>\n  );\n}\n\nEmployeeListView.propTypes = propTypes;\n","import { AdminRoute } from '@miq/adminjs';\nimport { lazy } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport EmployeeListView from './ListView';\n\nconst EmployeeUpdateView = lazy(() => import('./UpdateView'));\nconst EmployeeCreateView = lazy(() => import('./CreateView'));\n\nexport default function EmployeeRoutes(props) {\n  const { path } = props.match;\n\n  return (\n    <Switch>\n      <AdminRoute path={`${path}new/`} component={EmployeeCreateView} requiredPerms={['miq_hrm.add_employee']} />\n      <AdminRoute\n        path={`${path}:empSlug/`}\n        component={EmployeeUpdateView}\n        requiredPerms={['miq_hrm.change_employee']}\n      />\n      <AdminRoute path={`${path}`} component={EmployeeListView} requiredPerms={['miq_hrm.view_employee']} />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}