{"version":3,"sources":["../../../../../packages/miq-dmsjs/src/docufile/utils.jsx","../../../../../packages/miq-dmsjs/src/docufile/UploadButton.jsx","../../../../../packages/miq-dmsjs/src/docufile/components.jsx","../../../../../packages/miq-dmsjs/src/docufile/FileList.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/UpdateForm.jsx","../../../../../packages/miq-dmsjs/src/document/UpdateView/index.jsx","../../../../../packages/miq-dmsjs/src/components.jsx"],"names":["docufileServices","file","isRequired","name","length","Promise","reject","files","fd","FormData","append","services","post","headers","docFileSlug","docSlug","delete","SuccesMessage","name_truncated","className","DocuFileUploadButton","onSuccess","props","toast","useContext","ToastCtx","uploadRef","createRef","Icon","Icons","PaperClip","label","title","onClick","click","onChange","evt","Array","from","target","forEach","then","data","success","component","catch","err","error","message","ref","FileDeleteIconButton","document","is_read_only","handleDelete","slug","onFileDelete","disabled","Trash","render","renderHeader","title_truncated","renderFooter","setOpen","getIcon","ext","getFileIcon","DocuFileList","items","isArray","style","overflowX","renderItem","Tr","Td","href","getImgUrl","src","size","align","DocumentUpdateForm","form","doc","handleTextInputSave","value","Label","TextInput","onSave","autoComplete","placeholder","TextAreaX","Actions","useState","handleArchive","e","url","addForwardSlash","match","status","history","push","docServices","archive","path","replace","to","Share","DocumentUpdateView","params","setDoc","setError","useForm","reference","description","setValues","useEffect","detail","response","patch","shared","context","actions","patchFile","action","files_data","filter","i","BackToStaffDocumentsLink","docUrls","staff_path","ArrowLeft"],"mappings":"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","file":"static/js/7.ecd714ee.chunk.js","sourcesContent":["import { services } from \"@miq/adminjs\";\n\nexport const docufileServices = {\n    postFile(file = isRequired(\"file\")) {\n        let name = file.name;\n        if (name.length >= 300) {\n            return Promise.reject({ files: \"File name is too long\" });\n        }\n\n        const fd = new FormData();\n        fd.append(\"src\", file, name);\n\n        return services.post(`docufiles/`, fd, {\n            headers: { \"content-type\": \"multipart/form-data\" },\n        });\n    },\n\n    delete(docFileSlug, docSlug) {\n        return services.delete(`docufiles/${docFileSlug}/?document=${docSlug}`);\n    },\n};\n","import { createRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FileInput, IconButton, Icons, ToastCtx } from \"@miq/components\";\n\nimport { docufileServices } from \"./utils\";\n\nconst propTypes = {\n    onSuccess: PropTypes.func,\n};\n\nconst SuccesMessage = ({ name_truncated }) => (\n    <div>\n        <span className=\"fw-bold d-block\">File Added</span>\n        {name_truncated}\n    </div>\n);\n\nexport default function DocuFileUploadButton({ onSuccess, ...props }) {\n    const toast = useContext(ToastCtx);\n    let uploadRef = createRef();\n\n    function uploadFiles(evt) {\n        // TODO: Ensure this filename has at most 100 characters\n\n        Array.from(evt.target.files).forEach((file) => {\n            docufileServices\n                .postFile(file)\n                .then((data) => {\n                    if (onSuccess) onSuccess(data);\n                    if (toast)\n                        toast.success({\n                            component: <SuccesMessage {...data} />,\n                        });\n                })\n                .catch((err) => {\n                    // console.log(err);\n                    if (toast) toast.error({ message: \"File upload failed.\\nPlease try again.\" });\n                });\n        });\n    }\n\n    return (\n        <>\n            <IconButton\n                Icon={Icons.PaperClip}\n                label=\"Joindre\"\n                title=\"Joindre des fichiers Ã  ce document\"\n                {...props}\n                onClick={() => uploadRef.click()}\n            />\n            <FileInput onChange={uploadFiles} ref={(file) => (uploadRef = file)} />\n        </>\n    );\n}\n\nDocuFileUploadButton.propTypes = propTypes;\n","import { useContext } from \"react\";\nimport { Icons, ConfirmIconButton, Button, ToastCtx } from \"@miq/components\";\n\nimport { docufileServices } from \"./utils\";\n\nexport const FileDeleteIconButton = ({ document, file, ...props }) => {\n    const toast = useContext(ToastCtx);\n\n    if (!document || document.is_read_only) return null;\n\n    const handleDelete = () =>\n        docufileServices\n            .delete(file.slug, document.slug)\n            .then((data) => {\n                props.onFileDelete({ ...data, slug: file.slug });\n                toast.success({ message: \"File deleted.\" });\n            })\n            .catch((err) => {\n                // console.log(err);\n                toast.error({ message: \"Something went wrong.\" });\n            });\n\n    return (\n        <ConfirmIconButton\n            disabled={document.is_read_only}\n            Icon={Icons.Trash}\n            render={() => {\n                return <div className=\"p-3\">Are you sure?</div>;\n            }}\n            renderHeader={() => <div className=\"flex-1 fw-bold\">Delete file {`${document.title_truncated}`}</div>}\n            renderFooter={({ setOpen }) => {\n                return (\n                    <div className=\"flex-1\">\n                        <Button onClick={() => setOpen(false)} className=\"me-1\">\n                            Annuler\n                        </Button>\n                        <Button className=\"btn-danger\" onClick={handleDelete}>\n                            Delete\n                        </Button>\n                    </div>\n                );\n            }}\n        />\n    );\n};\n","import { Icons, Button, ImgSquare, Img, ConfirmIconButton } from '@miq/components';\nimport { Table, ItemTable, IconButton } from '@miq/components';\nimport { getImgUrl } from '@miq/utils';\n\nimport './docufile-grid.scss';\nimport { FileDeleteIconButton } from './components';\nimport { isArray } from 'lodash';\n\nconst getIcon = (file) => {\n  switch (file.ext) {\n    case '.jpg':\n    case '.jpeg':\n    case '.png':\n      return <ImgSquare {...file} />;\n\n    default:\n      const Icon = Icons.getFileIcon(file.ext);\n      return <Icon className=\"icon mb-1\" />;\n  }\n};\n\nexport function DocuFileList({ items, ...props }) {\n  if (!isArray(items)) return null;\n\n  if (!items.length > 0)\n    return <div className=\"w-100 text-center py-4 bg-gray-100 rounded\">Ce document n'a pas de fichiers ajoutÃ©s.</div>;\n\n  return (\n    <div className=\"docufile-list border-1 rounded mb-3\" style={{ overflowX: 'scroll' }}>\n      <ItemTable\n        items={items}\n        renderItem={(file) => {\n          return (\n            <Table.Tr className=\"docufile-list-item border-bottom\" key={file.slug}>\n              <Table.Td>\n                <a href={getImgUrl(file.src)} className=\"docufile-btn\" target=\"_blank\">\n                  <div className=\"d-flex\">\n                    <span className=\"docufile-icon-wrapper d-none d-md-block me-1\">{getIcon(file)}</span>\n                    <div className=\"\">\n                      <div>{file.name_truncated}</div>\n                      <span className=\"text-sm text-muted\">{file.size}</span>\n                    </div>\n                  </div>\n                </a>\n              </Table.Td>\n\n              <Table.Td align=\"right\">\n                <div className=\"actions\">\n                  <FileDeleteIconButton {...props} {...{ file }} />\n                </div>\n              </Table.Td>\n            </Table.Tr>\n          );\n        }}\n        className=\"w-100\"\n      />\n    </div>\n  );\n}\n","import Form, { FormProvider } from '@miq/form';\n\nimport { isRequired } from '@miq/utils';\n\nexport default function DocumentUpdateForm({ docSlug, ...props }) {\n  const { form = isRequired('form'), doc, handleTextInputSave } = props;\n\n  return (\n    <FormProvider value={form}>\n      <div className=\"document-field d-grid grid-lg-12 mb-2\">\n        <Form.Label value=\"Reference\" className=\"span-12 mb-1\" />\n        <Form.TextInput\n          name=\"reference\"\n          onSave={handleTextInputSave}\n          autoComplete=\"off\"\n          className=\"span-12 span-md-4\"\n          placeholder=\"Ajouter une reference ...\"\n          disabled={doc.is_read_only}\n        />\n      </div>\n\n      <div className=\"document-field d-grid grid-1 grid-xl-12 mb-2\">\n        <Form.Label value=\"Description\" className=\"span-12 mb-1\" />\n\n        <div className=\"span-lg-8\">\n          <Form.TextAreaX\n            name=\"description\"\n            onSave={handleTextInputSave}\n            placeholder=\"Ajouter une description ...\"\n            disabled={doc.is_read_only}\n          />\n        </div>\n      </div>\n    </FormProvider>\n  );\n}\n","import { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Form, { useForm } from '@miq/form';\nimport { AdminView } from '@miq/adminjs';\nimport { addForwardSlash } from '@miq/utils';\nimport { Icons, IconNavLink, ToastCtx } from '@miq/components';\n\nimport './update-view.scss';\n\nimport { BackToStaffDocumentsLink } from '../../components';\nimport DocuFileUploadButton from '../../docufile/UploadButton';\nimport { DocuFileList } from '../../docufile';\nimport { docServices } from '../utils';\nimport {\n  DocumentTitleInput,\n  DocumentArchiveIconButton,\n  DocumentSubmitIconButton,\n  DocumentDeleteIconButton,\n} from '../components';\n// import DocumentShareModal from './ShareModal';\nimport DocumentUpdateForm from './UpdateForm';\n\nconst Actions = (props) => {\n  const { docSlug, doc, toast } = props;\n  const [isOpen, setOpen] = useState(false);\n\n  const handleArchive = (e) => {\n    const url = `${addForwardSlash(props.match.url)}view/`;\n    if (doc.status === 'ARCHIVED') return props.history.push(url);\n\n    docServices\n      .archive(docSlug)\n      .then(() => {\n        props.history.push(url);\n      })\n      .catch(() => {\n        toast.error({ message: 'Oops! Something went wrong.' });\n      });\n  };\n\n  const { path } = props.match;\n  const url = addForwardSlash(props.match.url);\n\n  return (\n    <div className=\"document-update-view-actions\">\n      <div className=\"d-flex me-2\">\n        <DocumentDeleteIconButton\n          {...props}\n          {...{ docSlug }}\n          label=\"Supprimer\"\n          className=\"btn-secondary-4 me-1\"\n          onSuccess={() => props.history.push(path.replace(':docSlug/', ''))}\n        />\n\n        <DocumentSubmitIconButton {...{ doc }} onClick={handleArchive} className=\"btn-primary-3\" />\n        <DocumentArchiveIconButton {...{ doc }} onClick={handleArchive} className=\"btn-primary-3\" />\n      </div>\n\n      <div>\n        {/* <IconNavLink to={`${path}share/`}>Par</NavLink> */}\n        <IconNavLink\n          to={`${url}share/`}\n          // onClick={() => setOpen(true)}\n          disabled={doc.is_read_only}\n          Icon={Icons.Share}\n          className=\"btn-primary\"\n          label=\"Partager\"\n          title=\"Partager ce document avec des personnes\"\n        />\n\n        {/* {!doc.is_read_only && isOpen && <DocumentShareModal {...props} {...{ setOpen, isOpen }} />} */}\n      </div>\n    </div>\n  );\n};\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentUpdateView(props) {\n  const { docSlug } = props.match.params;\n\n  const [doc, setDoc] = useState(null);\n  const [error, setError] = useState(null);\n  const toast = useContext(ToastCtx);\n\n  const form = useForm({ title: '', reference: '', description: '' });\n  const { setValues } = form;\n\n  useEffect(() => {\n    docServices\n      .detail(docSlug)\n      .then((data) => {\n        setDoc(data);\n        if (data.is_read_only) return;\n\n        setValues({\n          title: data.title || '',\n          reference: data.reference || '',\n          description: data.description || '',\n        });\n      })\n      .catch((err) => {\n        if (err.response) {\n          if (err.response.status === 404) {\n            setError('notfound');\n            return;\n          }\n        }\n\n        setError('error');\n      });\n  }, [docSlug, setValues]);\n\n  if (error) {\n    return (\n      <div>\n        <h1>Ce document n'existe pas</h1>\n      </div>\n    );\n  }\n\n  if (!doc || !doc.slug) return null;\n\n  if (doc.is_read_only) return <Redirect to={`${addForwardSlash(props.match.url)}view/`} />;\n\n  /**\n   *\n   * @param {Object} param0\n   * @returns\n   */\n  const handleTextInputSave = ({ name, value }) => {\n    if (!doc || doc.is_read_only) return;\n\n    docServices\n      .patch(docSlug, { [name]: value }, { [name]: doc[name] })\n      .then((data) => {\n        // console.log(data);\n      })\n      .catch((err) => {});\n  };\n\n  const addFile = ({ slug }) =>\n    docServices\n      .patchFile(docSlug, { action: 'add', files: [slug] })\n      .then((data) => {\n        setDoc({ ...doc, ...data });\n      })\n      .catch((err) => {});\n\n  const removeFile = ({ slug }) =>\n    setDoc({\n      ...doc,\n      files: doc.files.filter((i) => i !== slug),\n      files_data: doc.files_data.filter((i) => i.slug !== slug),\n    });\n\n  const shared = { ...props, toast, docSlug, doc, setDoc, docSlug, form, handleTextInputSave };\n\n  return (\n    <Form context={form} className=\"document-update-form\">\n      {/* <Prompt when={isL} message=\"Are you sure?\"> */}\n      <AdminView\n        className=\"document-update-view miq-container-fluid\"\n        title={<BackToStaffDocumentsLink className=\"btn-secondary-4\" />}\n        actions={<Actions {...shared} />}\n      >\n        <div className=\"my-3\">\n          <DocumentTitleInput onSave={handleTextInputSave} />\n        </div>\n\n        {/* FORM */}\n        <div className=\"mb-3\">\n          <DocumentUpdateForm {...shared} />\n        </div>\n\n        {/* FILES */}\n\n        <div className=\"d-flex align-items-center justify-content-between mb-3\">\n          <div className=\"fw-bold text-md\">Fichiers</div>\n          <div className=\"actions\">\n            <DocuFileUploadButton onSuccess={addFile} disabled={doc.is_read_only} className=\"btn-primary-2\" />\n          </div>\n        </div>\n\n        <DocuFileList document={doc} items={doc.files_data} onFileDelete={removeFile} />\n      </AdminView>\n      {/* </Prompt> */}\n    </Form>\n  );\n}\n","import React from 'react';\n\nimport { AdminNavLink } from '@miq/adminjs';\nimport { Icons } from '@miq/components';\n\nimport { docUrls } from './document/utils';\n\nexport const BackToStaffDocumentsLink = (props) => {\n  return (\n    <AdminNavLink\n      to={props.to || docUrls.staff_path}\n      Icon={Icons.ArrowLeft}\n      title=\"Retourner aux documents\"\n      className={props.className}\n    />\n  );\n};\n"],"sourceRoot":""}