{"version":3,"sources":["../../../../../packages/miq-dms/src/DocumentAddForm.jsx","../../../../../packages/miq-dms/src/DocumentListView.jsx","../../../../../packages/miq-dms/src/utils.jsx"],"names":["DocumentAddForm","props","form","useForm","title","context","onSubmit","e","preventDefault","values","docServices","post","then","newData","onSuccess","catch","err","handleErr","setError","className","TextInput","required","autoComplete","name","placeholder","error","errors","maxLength","onClick","onCancel","Submit","value","DocumentListView","useState","setStatus","results","data","setData","isAdding","setAdding","perms","useContext","SharedDataCtx","search","location","query","URLSearchParams","get","q","setQ","getDocuments","useCallback","list","useEffect","params","filter","i","length","canAdd","hasPerms","push","useRef","debounce","url","history","actions","labelFirst","Icon","Icons","Plus","label","disabled","newDocument","match","path","slug","type","onChange","target","delete","set","current","URL","window","href","pathname","map","item","key","onPrevious","listPage","previous","onNext","next","DocumentListLink","status","is_read_only","isArchived","link","to","title_truncated","formatDate","created","month","day","year","users","PersonCircle","files","FileEarmarkText","getService","API","this","docSlug","services","patch","oldValues","archive","postFile","file","isRequired","Promise","reject","fd","FormData","append","headers","patchFile","Object","keys","includes","patchUserPermission","user_slug","permission","getStaffList","patchUser"],"mappings":"2QAKe,SAASA,EAAgBC,GACpC,IAAMC,EAAOC,YAAQ,CAAEC,MAAO,KAiB9B,OACI,eAAC,IAAD,CAAMC,QAASH,EAAMI,SAhBJ,SAACC,GAClBA,EAAEC,iBACF,IAAQJ,EAAUF,EAAKO,OAAfL,MAEHA,EAKLM,IACKC,KAAK,CAAEP,UACPQ,MAAK,SAACC,GAAD,OAAaZ,EAAMa,UAAUD,MAClCE,OAAM,SAACC,GAAD,OAASd,EAAKe,UAAUD,GAAK,MAPpCd,EAAKgB,SAAS,QAAS,wCAWkBC,UAAU,yBAAvD,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAKC,UAAN,CACIC,UAAQ,EACRC,aAAa,MACbC,KAAK,QACLC,YAAY,sCACZC,MAAOvB,EAAKwB,OAAOtB,MACnBuB,UAAW,OAInB,sBAAKR,UAAU,oDAAf,UACI,qBAAKA,UAAU,GAAf,SACI,cAAC,IAAD,CAAQS,QAAS3B,EAAM4B,SAAvB,uBAGJ,qBAAKV,UAAU,GAAf,SACI,cAAC,IAAKW,OAAN,CAAaC,MAAM,UAAUZ,UAAU,gBC9B5C,SAASa,EAAiB/B,GACrC,MAA4BgC,mBAAS,WAArC,mBAAeC,GAAf,WAEA,EAAwBD,mBAAS,CAAEE,QAAS,KAA5C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAiBC,EAAjB,KACQC,EAAUC,qBAAWC,KAArBF,MAEAG,EAAW1C,EAAM2C,SAAjBD,OACFE,EAAQ,IAAIC,gBAAgBH,GAClC,EAAkBV,mBAASY,EAAME,IAAI,MAAQ,IAA7C,mBAAOC,EAAP,KAAUC,EAAV,KAEMC,EAAeC,uBAAY,kBAAezC,IAAY0C,KAAZ,MAAA1C,IAAW,aAAkB,IAE7E2C,qBAAU,WACN,IAAIC,EAAS,IAAIR,gBAAgBH,GAC5B,YAAIW,EAAO7C,UAAU8C,QAAO,SAACC,GAAD,OAAOA,KAAGC,SACvCH,EAAS,MAGbJ,EAAaI,GACR1C,MAAK,SAACwB,GAICF,EAHCE,EAGS,OAFA,SAKdC,EAAQD,MAEXrB,OAAM,SAACC,GACJkB,EAAU,cAEnB,CAACgB,EAAcP,IAElB,IAAMe,EAASC,YAASnB,EAAMA,MAAO,CAAC,yBAShCoB,EAAOC,iBAAOC,oBAAS,SAACC,GAAD,OAAS9D,EAAM+D,QAAQJ,KAAKG,KAAM,MAE/D,OACI,eAAC,IAAD,CACI3D,MAAM,YACNe,UAAU,0BACV8C,QACI,mCACI,cAAC,IAAD,CACIC,YAAU,EACVC,KAAMC,IAAMC,KACZC,MAAM,UACNlE,MACIsD,EAAS,8BAAgC,iDAE7C9B,QAAS,kBAAMW,GAAWD,IAC1BiC,UAAWb,MAb3B,UAkBI,qBAAKvC,UAAU,gBAAf,SACKmB,EACG,sBAAKnB,UAAU,GAAf,UACI,oBAAIA,UAAU,OAAd,yCACA,cAACnB,EAAD,CAAiBc,UAhCX,SAAC0D,GACvB,GAAKd,EAAL,CAEA,IAAMK,EAAG,UAAM9D,EAAMwE,MAAMC,MAAlB,OAAyBF,EAAYG,KAArC,KACT,OAAO1E,EAAM+D,QAAQJ,KAAKG,KA4BqClC,SAAU,kBAAMU,GAAU,SAG7E,sBAAKpB,UAAU,OAAf,UACI,uBACIE,UAAQ,EACRuD,KAAK,OACLrD,KAAK,IACLQ,MAAOiB,GAAK,GACZ6B,SAAU,SAACtE,GACP,IAAQwB,EAAUxB,EAAEuE,OAAZ/C,MAUR,GARAkB,EAAKlB,IAEAA,GAASA,EAAM0B,OAAS,EACzBZ,EAAMkC,OAAO,KAEblC,EAAMmC,IAAI,IAAKzE,EAAEuE,OAAO/C,OAGvB6B,EAAKqB,QAAV,CAEA,IAAMP,EAAO,IAAIQ,IAAIC,OAAOvC,SAASwC,MACrCxB,EAAKqB,QAAL,UAAgBP,EAAKW,SAArB,YAAiCxC,MAErC1B,UAAU,YACVK,YAAY,6DAvBpB,6EA8BR,qBAAKL,UAAU,qBAAf,SACKiB,EAAKD,QAAQmD,KAAI,SAACC,GAAD,OACd,wBAAC,EAAD,uCAAsBtF,GAAWsF,GAAjC,IAAuCC,IAAKD,EAAKZ,aAIzD,qBAAKxD,UAAU,OAAf,SACI,cAAC,IAAD,2BACQiB,GADR,IAEIqD,WAAY,kBACR/E,IAAYgF,SAAStD,EAAKuD,UAAU/E,MAAK,SAACC,GACtCwB,EAAQxB,OAGhB+E,OAAQ,kBACJlF,IAAYgF,SAAStD,EAAKyD,MAAMjF,MAAK,SAACC,GAClCwB,EAAQxB,eASpC,IAAMiF,EAAmB,SAAC7F,GACtB,IAAKA,EAAM0E,KAAM,OAAO,KAExB,IAAQoB,EAAyB9F,EAAzB8F,OAAQC,EAAiB/F,EAAjB+F,aACVC,EAAwB,aAAXF,EAEfG,EAAI,UAAMjG,EAAMwE,MAAMC,MAAlB,OAAyBzE,EAAM0E,KAA/B,KAGR,OAFIqB,IAAcE,EAAI,UAAMA,EAAN,UAGlB,cAAC,IAAD,CAAMC,GAAID,EAAM/E,UAAU,qBAA1B,SACI,sBAAKA,UAAU,iCAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,GAAf,SAAmBlB,EAAMmG,kBACzB,sBAAMjF,UAAU,UAAhB,SACKkF,YAAWpG,EAAMqG,QAAS,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,cAExER,GAAc,sBAAM9E,UAAU,UAAhB,8BAGnB,sBAAKA,UAAU,gCAAf,UACKlB,EAAMyG,MAAMjD,OAAS,GAClB,uBAAMtC,UAAU,iCAAhB,UACI,sBAAMA,UAAU,QAAhB,SAAyBlB,EAAMyG,MAAMjD,SACrC,cAAC,IAAMkD,aAAP,OAIP1G,EAAM2G,MAAMnD,OAAS,GAClB,uBAAMtC,UAAU,iCAAhB,UACI,sBAAMA,UAAU,QAAhB,SAAyBlB,EAAM2G,MAAMnD,SACrC,cAAC,IAAMoD,gBAAP,iB,gCCzK5B,oDAGanG,EAAc,CACvBgE,KAAM,aAMNtB,KAPuB,SAOlBE,GACD,OAAOwD,YAAWC,IAAKC,KAAKtC,KAAMpB,IAEtCoC,SAVuB,SAUd3B,GACL,OAAO+C,YAAWC,IAAKhD,IAE3BhB,IAbuB,SAanBkE,EAAS3D,GACT,OAAOwD,YAAWC,IAAD,UAASC,KAAKtC,MAAd,OAAqBuC,EAArB,KAAiC3D,IAEtD3C,KAhBuB,SAgBlBF,GACD,OAAOyG,IAASvG,KAAT,UAAiBqG,KAAKtC,MAAQjE,IAEzC0G,MAnBuB,SAmBjBF,EAASxG,EAAQ2G,GACnB,OAAOF,IAASC,MAAT,UAAkBH,KAAKtC,MAAvB,OAA8BuC,EAA9B,KAA0CxG,EAAQ2G,IAE7DC,QAtBuB,SAsBfJ,GACJ,OAAOC,IAASnE,IAAT,UAAgBiE,KAAKtC,MAArB,OAA4BuC,EAA5B,eAEXlC,OAzBuB,SAyBhBkC,GACH,OAAOC,IAASnC,OAAT,UAAmBiC,KAAKtC,MAAxB,OAA+BuC,EAA/B,OAOXK,SAjCuB,WAiCc,IAA5BC,EAA2B,uDAApBC,WAAW,QACnBjG,EAAOgG,EAAKhG,KAChB,GAAIA,EAAKkC,QAAU,IACf,OAAOgE,QAAQC,OAAO,yBAG1B,IAAMC,EAAK,IAAIC,SAGf,OAFAD,EAAGE,OAAO,MAAON,EAAMhG,GAEhB2F,IAASvG,KAAT,aAA4BgH,EAAI,CACnCG,QAAS,CAAE,eAAgB,0BAInCC,UA/CuB,SA+Cbd,EAASxG,GACf,OAAKuH,OAAOC,KAAKxH,GAAQyH,SAAS,UAI3BhB,IAASvG,KAAT,UAAiBqG,KAAKtC,MAAtB,OAA6BuC,EAA7B,WAA+CxG,GAH3CgH,QAAQC,OAAO,oBAU9BS,oBA3DuB,SA2DHlB,EAASmB,EAAWC,GACpC,OAAOnB,IAASvG,KAAT,UAAiBqG,KAAKtC,MAAtB,OAA6BuC,EAA7B,gBAAoD,CAAEmB,YAAWC,gBAG5EC,aA/DuB,SA+DVtF,GACT,OAAOkE,IAASnE,IAAI,gBAAiB,CAAEC,OAG3CuF,UAnEuB,SAmEbtB,EAASxG,GACf,OAAKuH,OAAOC,KAAKxH,GAAQyH,SAAS,UAI3BhB,IAASvG,KAAT,UAAiBqG,KAAKtC,MAAtB,OAA6BuC,EAA7B,WAA+CxG,GAH3CgH,QAAQC,OAAO","file":"static/js/11.22a67800.chunk.js","sourcesContent":["import Form, { useForm } from \"@miq/form\";\nimport { Button } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\n\nexport default function DocumentAddForm(props) {\n    const form = useForm({ title: \"\" });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const { title } = form.values;\n\n        if (!title) {\n            form.setError(\"title\", \"Entrez le titre du nouveau document\");\n            return;\n        }\n\n        docServices\n            .post({ title })\n            .then((newData) => props.onSuccess(newData))\n            .catch((err) => form.handleErr(err, true));\n    };\n\n    return (\n        <Form context={form} onSubmit={handleSubmit} className=\"document-add-form mb-3\">\n            <div className=\"mb-1\">\n                <Form.TextInput\n                    required\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    placeholder=\"Entrez le titre du nouveau document\"\n                    error={form.errors.title}\n                    maxLength={99}\n                />\n            </div>\n\n            <div className=\"d-flex align-items-center justify-content-between\">\n                <div className=\"\">\n                    <Button onClick={props.onCancel}>Annuler</Button>\n                </div>\n\n                <div className=\"\">\n                    <Form.Submit value=\"Ajouter\" className=\"btn\" />\n                </div>\n            </div>\n        </Form>\n    );\n}\n","import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { debounce } from \"lodash\";\n\nimport { formatDate } from \"@miq/utils\";\nimport { SharedDataCtx } from \"@miq/contexts\";\nimport { AdminView, hasPerms } from \"@miq/admin\";\nimport { Icons, IconButton, Pagination } from \"@miq/components\";\n\nimport { docServices } from \"./utils\";\nimport DocumentAddForm from \"./DocumentAddForm\";\n\nexport default function DocumentListView(props) {\n    const [status, setStatus] = useState(\"loading\");\n\n    const [data, setData] = useState({ results: [] });\n    const [isAdding, setAdding] = useState(false);\n    const { perms } = useContext(SharedDataCtx);\n\n    const { search } = props.location;\n    const query = new URLSearchParams(search);\n    const [q, setQ] = useState(query.get(\"q\") || \"\");\n\n    const getDocuments = useCallback((...params) => docServices.list(...params), []);\n\n    useEffect(() => {\n        let params = new URLSearchParams(search);\n        if (![...params.values()].filter((i) => i).length) {\n            params = null;\n        }\n\n        getDocuments(params)\n            .then((data) => {\n                if (!data) {\n                    setStatus(\"empty\");\n                } else {\n                    setStatus(\"done\");\n                }\n\n                setData(data);\n            })\n            .catch((err) => {\n                setStatus(\"error\");\n            });\n    }, [getDocuments, search]);\n\n    const canAdd = hasPerms(perms.perms, [\"miq_dms.add_document\"]);\n\n    const handleDocumentAdd = (newDocument) => {\n        if (!canAdd) return;\n\n        const url = `${props.match.path}${newDocument.slug}/`;\n        return props.history.push(url);\n    };\n\n    const push = useRef(debounce((url) => props.history.push(url), 300));\n\n    return (\n        <AdminView\n            title=\"Documents\"\n            className=\"document-list-view mb-4\"\n            actions={\n                <>\n                    <IconButton\n                        labelFirst\n                        Icon={Icons.Plus}\n                        label=\"Ajouter\"\n                        title={\n                            canAdd ? \"Ajouter un nouveau document\" : \"Vous ne pouvez pas ajouter de nouveau document\"\n                        }\n                        onClick={() => setAdding(!isAdding)}\n                        disabled={!canAdd}\n                    />\n                </>\n            }\n        >\n            <div className=\"miq-container\">\n                {isAdding ? (\n                    <div className=\"\">\n                        <h3 className=\"mb-2\">Ajouter un nouveau document</h3>\n                        <DocumentAddForm onSuccess={handleDocumentAdd} onCancel={() => setAdding(false)} />\n                    </div>\n                ) : (\n                    <div className=\"mb-3\">\n                        <input\n                            required\n                            type=\"text\"\n                            name=\"q\"\n                            value={q || \"\"}\n                            onChange={(e) => {\n                                const { value } = e.target;\n\n                                setQ(value);\n\n                                if (!value || value.length < 3) {\n                                    query.delete(\"q\");\n                                } else {\n                                    query.set(\"q\", e.target.value);\n                                }\n\n                                if (!push.current) return;\n\n                                const path = new URL(window.location.href);\n                                push.current(`${path.pathname}?${query}`);\n                            }}\n                            className=\"miq-input\"\n                            placeholder=\"Chercher un document par titre, reference ou description\"\n                        />\n                        Search tous-tous les Documents elements envoye elements recus archive\n                    </div>\n                )}\n            </div>\n\n            <div className=\"document-list mb-3\">\n                {data.results.map((item) => (\n                    <DocumentListLink {...props} {...item} key={item.slug} />\n                ))}\n            </div>\n\n            <div className=\"mb-4\">\n                <Pagination\n                    {...data}\n                    onPrevious={() =>\n                        docServices.listPage(data.previous).then((newData) => {\n                            setData(newData);\n                        })\n                    }\n                    onNext={() =>\n                        docServices.listPage(data.next).then((newData) => {\n                            setData(newData);\n                        })\n                    }\n                />\n            </div>\n        </AdminView>\n    );\n}\n\nconst DocumentListLink = (props) => {\n    if (!props.slug) return null;\n\n    const { status, is_read_only } = props;\n    const isArchived = status === \"ARCHIVED\";\n\n    let link = `${props.match.path}${props.slug}/`;\n    if (is_read_only) link = `${link}view/`;\n\n    return (\n        <Link to={link} className=\"document-list-link\">\n            <div className=\"d-flex justify-content-between\">\n                <div className=\"document-title flex-1\">\n                    <div className=\"\">{props.title_truncated}</div>\n                    <span className=\"text-sm\">\n                        {formatDate(props.created, { month: \"numeric\", day: \"numeric\", year: \"numeric\" })}\n                    </span>\n                    {isArchived && <span className=\"text-sm\"> - Archivé</span>}\n                </div>\n\n                <div className=\"document-meta text-muted ps-1\">\n                    {props.users.length > 0 && (\n                        <span className=\"me-1 d-flex align-items-center\">\n                            <span className=\"count\">{props.users.length}</span>\n                            <Icons.PersonCircle />\n                        </span>\n                    )}\n\n                    {props.files.length > 0 && (\n                        <span className=\"me-1 d-flex align-items-center\">\n                            <span className=\"count\">{props.files.length}</span>\n                            <Icons.FileEarmarkText />\n                        </span>\n                    )}\n                </div>\n            </div>\n        </Link>\n    );\n};\n","import { API, services } from \"@miq/admin\";\nimport { getService } from \"@miq/utils\";\n\nexport const docServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUMENT\n     */\n\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(docSlug, params) {\n        return getService(API, `${this.path}${docSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(docSlug, values, oldValues) {\n        return services.patch(`${this.path}${docSlug}/`, values, oldValues);\n    },\n    archive(docSlug) {\n        return services.get(`${this.path}${docSlug}/archive/`);\n    },\n    delete(docSlug) {\n        return services.delete(`${this.path}${docSlug}/`);\n    },\n\n    /**\n     * DOCUFILE\n     */\n\n    postFile(file = isRequired(\"file\")) {\n        let name = file.name;\n        if (name.length >= 100) {\n            return Promise.reject(\"File name is too long\");\n        }\n\n        const fd = new FormData();\n        fd.append(\"src\", file, name);\n\n        return services.post(`docufiles/`, fd, {\n            headers: { \"content-type\": \"multipart/form-data\" },\n        });\n    },\n\n    patchFile(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/files/`, values);\n    },\n\n    /**\n     * USER\n     */\n\n    patchUserPermission(docSlug, user_slug, permission) {\n        return services.post(`${this.path}${docSlug}/permission/`, { user_slug, permission });\n    },\n\n    getStaffList(q) {\n        return services.get(\"search-staff/\", { q });\n    },\n\n    patchUser(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/users/`, values);\n    },\n};\n"],"sourceRoot":""}