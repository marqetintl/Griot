{"version":3,"sources":["../../../../../packages/miq-dms/src/document/UpdateView/ShareModal/SelectUserModal.jsx","../../../../../packages/miq-dms/src/document/UpdateView/ShareModal/AddUserModal.jsx","../../../../../packages/miq-dms/src/document/UpdateView/ShareModal/index.jsx","../../../../../packages/miq-dms/src/docufile/utils.jsx","../../../../../packages/miq-dms/src/docufile/UploadButton.jsx","../../../../../packages/miq-dms/src/document/UpdateView/UpdateForm.jsx","../../../../../packages/miq-dms/src/document/UpdateView/index.jsx","../../../../../packages/miq-dms/src/document/utils.jsx","../../../../../packages/miq-dms/src/docufile/FileGrid.jsx"],"names":["Footer","props","form","className","primary","onClick","closeModal","SelectUserModal","doc","useState","q","setQ","users","setUsers","debounceGetStaffUsers","useCallback","debounce","docServices","getStaffList","then","results","useEffect","length","context","id","Modal","header","PersonPlus","Icon","Icons","X","footer","floating","required","name","onChange","e","target","value","placeholder","isOpen","map","user","i","includes","slug","setValue","setUser","role","users_data","setDoc","patchUser","action","data","catch","err","console","log","title","DocuSharedPermissionSelect","permission","permissions","Object","values","patchUserPermission","perm","label","addUser","AddUserModal","ArrowLeft","uploaded_by","CheckboxInput","checked","sendNotif","TextArea","maxLength","rows","DocumentShareModal","useForm","message","setOpen","UserCard","img_data","username","docufileServices","file","isRequired","Promise","reject","fd","FormData","append","services","post","headers","DocuFileUploadButton","onSuccess","uploadRef","createRef","PaperClip","click","evt","Array","from","files","forEach","ref","DocumentUpdateForm","docSlug","handleTextInputSave","Trash","delete","res","history","push","disabled","is_read_only","Archive","url","addForwardSlash","match","status","archive","fileData","patchFile","Label","TextInput","onSave","autoComplete","TextAreaX","ViewHeader","to","path","replace","tabIndex","aria-label","data-tooltip","Share","DocumentUpdateView","params","error","setError","reference","description","setValues","get","response","patch","items","files_data","list","getService","API","this","listPage","oldValues","user_slug","keys","getIcon","ext","getFileIcon","DocuFileGrid","name_truncated","size"],"mappings":"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","file":"static/js/5.7e6b2d74.chunk.js","sourcesContent":["import { debounce, throttle } from \"lodash\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport Form from \"@miq/form\";\nimport { Portal, Button, IconButton, Icons, Collapse } from \"@miq/components\";\nimport { docServices } from \"../../utils\";\nimport { UserCard } from \".\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport const Footer = (props) => {\n    const { form } = props;\n    return (\n        <div className=\"dms-share-footer\">\n            <div className=\"\">\n                <Button primary onClick={props.closeModal}>\n                    Terminé\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default function SelectUserModal({ form, doc, ...props }) {\n    const [q, setQ] = useState(\"\");\n    const [users, setUsers] = useState([]);\n\n    const getStaffUsers = (q) =>\n        docServices.getStaffList(q).then(({ results }) => {\n            // if (results)\n            setUsers(results);\n        });\n    const debounceGetStaffUsers = useCallback(debounce(getStaffUsers, 400), []);\n\n    useEffect(() => {\n        if (!q || q.length < 3) return;\n\n        debounceGetStaffUsers(q);\n    }, [q, debounceGetStaffUsers]);\n\n    if (!form || !doc) return null;\n\n    const setUser = (user) => {\n        if (doc.users.includes(user.slug)) return;\n        form.setValue(\"user\", user);\n    };\n\n    return (\n        <Portal>\n            <Form context={form} id=\"DocumentShareModal\" className=\"dms-share\">\n                <Portal.Modal\n                    header={\n                        <div className=\"dms-share-header\">\n                            <div className=\"title\">\n                                <div className=\"btn btn-icon select\">\n                                    <Icons.PersonPlus className=\"icon\" />\n                                </div>\n                                <h2>Partager avec des personnes</h2>\n                            </div>\n\n                            <div className=\"actions\">\n                                <IconButton Icon={Icons.X} onClick={props.closeModal} />\n                            </div>\n                        </div>\n                    }\n                    // FOOTER\n                    footer={<Footer {...props} {...{ form }} />}\n                >\n                    <div className=\"dms-share-select\">\n                        {/* <SelectUserTab {...props} {...{ form }} /> */}\n\n                        <Collapse\n                            floating\n                            header={\n                                <input\n                                    required\n                                    name=\"q\"\n                                    onChange={(e) => setQ(e.target.value)}\n                                    placeholder=\"Ajouter des personnes\"\n                                    className=\"miq-input mb-1\"\n                                />\n                            }\n                            isOpen={q.length > 2 && users.length > 0}\n                        >\n                            {users.map((user, i) => (\n                                <div\n                                    className=\"dms-user-item\"\n                                    onClick={() => setUser(user)}\n                                    key={`${user.slug}-${i}`}\n                                    role=\"button\"\n                                >\n                                    <UserCard {...{ user, form }} />\n                                </div>\n                            ))}\n                        </Collapse>\n\n                        <div className=\"dms-share-users my-2\">\n                            {doc.users_data.map((user) => {\n                                return (\n                                    <div\n                                        className=\"my-1 d-flex align-items-center justify-content-between\"\n                                        key={user.slug}\n                                    >\n                                        <UserCard {...{ user, form }} />\n\n                                        <div className=\"d-flex align-items-center\">\n                                            <DocuSharedPermissionSelect\n                                                {...{ user, doc, form, setDoc: props.setDoc }}\n                                                className=\"me-1\"\n                                            />\n                                            <IconButton\n                                                Icon={Icons.X}\n                                                onClick={() => {\n                                                    docServices\n                                                        .patchUser(doc.slug, { action: \"remove\", users: [user.slug] })\n                                                        .then((data) => {\n                                                            props.setDoc({ ...doc, ...data });\n                                                        })\n                                                        .catch((err) => {\n                                                            console.log(err);\n                                                        });\n                                                }}\n                                                title=\"Supprimer cet utilisateur\"\n                                            />\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </Portal.Modal>\n            </Form>\n        </Portal>\n    );\n}\n\nconst DocuSharedPermissionSelect = ({ user, doc, ...props }) => {\n    const [value, setValue] = useState(user.permission || \"VIEW\");\n\n    const permissions = Object.values(doc.permissions);\n\n    return (\n        <select\n            value={value}\n            className=\"miq-select me-1\"\n            onChange={(e) => {\n                const { value } = e.target;\n                setValue(value);\n                docServices\n                    .patchUserPermission(doc.slug, user.slug, value)\n                    .then((data) => props.setDoc({ ...doc, ...data }));\n            }}\n        >\n            {permissions.map((perm) => (\n                <option key={perm.name} value={perm.value}>\n                    {perm.label}\n                </option>\n            ))}\n        </select>\n    );\n};\n\n/**\n *\n * @param {*} param0\n * @returns\n */\n\nexport function SelectUserTab({ doc, form = {}, ...props }) {\n    const q = form.values.q;\n    const [users, setUsers] = useState([]);\n    const [width, setWidth] = useState(null);\n\n    const getStaffUsers = (q) =>\n        docServices.getStaffList(q).then(({ results }) => {\n            if (results) setUsers(results);\n            console.log(\"her\");\n        });\n    const debounceGetStaffUsers = useCallback(debounce(getStaffUsers, 400), []);\n\n    useEffect(() => {\n        if (!q || q.length < 3) return;\n        debounceGetStaffUsers(q);\n    }, [q, debounceGetStaffUsers]);\n\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const el = ref.current;\n        if (!el || typeof window !== \"object\") return;\n\n        const resize = throttle(\n            () => {\n                const rect = el.getBoundingClientRect();\n                setWidth(rect.width);\n            },\n            400,\n            { trailing: true }\n        );\n\n        window.addEventListener(\"resize\", resize);\n        resize();\n\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    const setUser = (user) => {\n        if (!form || doc.users.includes(user.slug)) return;\n        form.setValue(\"user\", user);\n    };\n\n    return (\n        <div className=\"dms-dropdown\">\n            <div className=\"dms-dropdown-header\">\n                <Form.TextInput required name=\"q\" placeholder=\"Ajouter des personnes\" className=\"mb-1\" ref={ref} />\n            </div>\n\n            {users && users.length !== 0 && (\n                <div className=\"dms-dropdown-body\" style={{ width }}>\n                    <ul className=\"inner\">\n                        {users.map((user, i) => {\n                            return (\n                                <li\n                                    className=\"dms-dropdown-item\"\n                                    onClick={() => setUser(user)}\n                                    key={`${user.slug}-${i}`}\n                                    role=\"button\"\n                                >\n                                    <UserCard {...{ user, form }} />\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n","import Form from \"@miq/form\";\nimport { Portal, Icons, Button, IconButton } from \"@miq/components\";\nimport { UserCard } from \".\";\nimport { docServices } from \"../../utils\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport const Footer = (props) => {\n    const { addUser } = props;\n\n    return (\n        <div className=\"dms-share-footer\">\n            <div className=\"\">\n                <Button onClick={addUser}>Envoyer</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default function AddUserModal({ form, doc, ...props }) {\n    const user = form.values.user;\n\n    if (!form) return null;\n\n    const addUser = () => {\n        const { slug } = form.values.user;\n        if (slug === doc.uploaded_by.slug) {\n            return;\n        }\n\n        docServices\n            .patchUser(doc.slug, { action: \"add\", users: [slug] })\n            .then((data) => {\n                props.setDoc({ ...doc, ...data });\n                form.setValue(\"user\", null);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <Portal>\n            <Form context={form} id=\"DocumentShareModal\" className=\"dms-share\">\n                <Portal.Modal\n                    /**\n                     * HEADER\n                     */\n                    header={\n                        <div className=\"dms-share-header\">\n                            <div className=\"title\">\n                                <div>\n                                    <IconButton\n                                        Icon={Icons.ArrowLeft}\n                                        onClick={() => form.setValue(\"user\", \"\")}\n                                        title=\"Retourner derriere\"\n                                        className=\"add\"\n                                    />\n                                </div>\n                                <h2>Partager avec des personnes</h2>\n                            </div>\n\n                            <div className=\"actions\"></div>\n                        </div>\n                    }\n                    /**\n                     * FOOTER\n                     */\n                    footer={<Footer {...props} {...{ addUser }} />}\n                >\n                    <div className=\"dms-share-add\">\n                        <div className=\"\">\n                            <UserCard {...{ user }} />\n                        </div>\n\n                        <div className=\"add-form mt-2\">\n                            <Form.CheckboxInput\n                                name=\"sendNotif\"\n                                checked={form.values.sendNotif}\n                                label=\"Envoyer une notification\"\n                            />\n\n                            <Form.TextArea\n                                name=\"message\"\n                                placeholder=\"Message\"\n                                maxLength={200}\n                                rows={4}\n                                className=\"my-1\"\n                            />\n                        </div>\n                    </div>\n                </Portal.Modal>\n            </Form>\n        </Portal>\n    );\n}\n","import { useForm } from \"@miq/form\";\nimport { Avatar } from \"@miq/components\";\nimport SelectUserModal from \"./SelectUserModal\";\nimport AddUserModal from \"./AddUserModal\";\n\nimport \"./document-share-modal.scss\";\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentShareModal(props) {\n    const form = useForm({\n        q: \"\",\n        user: null,\n        sendNotif: true,\n        message: \"\",\n    });\n\n    const { isOpen } = props;\n\n    if (!isOpen) return null;\n\n    const closeModal = () => props.setOpen(false);\n\n    if (form.values.user) return <AddUserModal {...props} {...{ form, closeModal }} />;\n\n    return <SelectUserModal {...props} {...{ form, closeModal }} />;\n}\n\nexport const UserCard = ({ user, form, ...props }) => {\n    return (\n        <div className=\"d-flex align-items-center\">\n            <div className=\"\">\n                <Avatar {...user.img_data} />\n            </div>\n            <div className=\"ms-1\">\n                <div className=\"\">{user.name}</div>\n                <div className=\"text-sm text-muted\">@{user.username}</div>\n            </div>\n        </div>\n    );\n};\n","import { services } from \"@miq/admin\";\n\nexport const docufileServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUFILE\n     */\n\n    postFile(file = isRequired(\"file\")) {\n        let name = file.name;\n        if (name.length >= 100) {\n            return Promise.reject(\"File name is too long\");\n        }\n\n        const fd = new FormData();\n        fd.append(\"src\", file, name);\n\n        return services.post(`docufiles/`, fd, {\n            headers: { \"content-type\": \"multipart/form-data\" },\n        });\n    },\n\n    patchFile(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/files/`, values);\n    },\n};\n","import { createRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { FileInput, IconButton, Icons } from \"@miq/components\";\n\nimport { docufileServices } from \"./utils\";\n\nconst propTypes = {\n    onSuccess: PropTypes.func,\n};\n\nexport default function DocuFileUploadButton({ onSuccess, ...props }) {\n    let uploadRef = createRef();\n\n    function uploadFiles(evt) {\n        // TODO: Ensure this filename has at most 100 characters\n\n        Array.from(evt.target.files).forEach((file) => {\n            docufileServices\n                .postFile(file)\n                .then((data) => {\n                    if (onSuccess) onSuccess(data);\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        });\n    }\n\n    return (\n        <>\n            <IconButton\n                Icon={Icons.PaperClip}\n                label=\"Joindre\"\n                title=\"Joindre des fichiers à ce document\"\n                {...props}\n                onClick={() => uploadRef.click()}\n            />\n            <FileInput onChange={uploadFiles} ref={(file) => (uploadRef = file)} />\n        </>\n    );\n}\n\nDocuFileUploadButton.propTypes = propTypes;\n","import Form, { FormProvider } from \"@miq/form\";\n\nimport { isRequired, addForwardSlash } from \"@miq/utils\";\nimport { Icons, IconButton } from \"@miq/components\";\nimport { docServices } from \"../utils\";\nimport DocuFileUploadButton from \"../../docufile/UploadButton\";\n\nexport default function DocumentUpdateForm({ docSlug, ...props }) {\n    const { form = isRequired(\"form\"), doc, handleTextInputSave } = props;\n\n    const addFile = (fileData) => {\n        const { slug } = fileData;\n        docServices\n            .patchFile(docSlug, { action: \"add\", files: [slug] })\n            .then((data) => {\n                console.log(data);\n                props.setDoc({ ...doc, ...data });\n            })\n            .catch((err) => {});\n    };\n\n    const handleArchive = (e) => {\n        const url = `${addForwardSlash(props.match.url)}view/`;\n        if (doc.status === \"ARCHIVED\") return props.history.push(url);\n\n        docServices\n            .archive(docSlug)\n            .then(() => {\n                props.history.push(url);\n            })\n            .catch((err) => {});\n    };\n\n    return (\n        <FormProvider value={form}>\n            <div className=\"d-flex align-items-center justify-content-between my-2\">\n                <div className=\"d-flex\">\n                    <IconButton\n                        Icon={Icons.Trash}\n                        label=\"Supprimer\"\n                        title=\"Supprimer ce document\"\n                        onClick={() =>\n                            docServices\n                                .delete(docSlug)\n                                .then((res) => {\n                                    props.history.push(\"/grio/documents/\");\n                                })\n                                .catch((err) => {})\n                        }\n                        className=\"me-1\"\n                        disabled={doc.is_read_only}\n                    />\n\n                    <IconButton\n                        Icon={Icons.Archive}\n                        onClick={handleArchive}\n                        label=\"Archiver\"\n                        title=\"Archiver ce document. Un document archivé ne peut plus être modifié\"\n                        disabled={doc.is_read_only}\n                        // className=\"p-1\"\n                    />\n                </div>\n                <div className=\"actions\">\n                    <DocuFileUploadButton onSuccess={addFile} disabled={doc.is_read_only} className=\"p-1\" />\n                </div>\n            </div>\n\n            <div className=\"d-grid grid-lg-12 mb-2\">\n                <Form.Label value=\"Reference\" className=\"span-12 mb-1\" />\n                <Form.TextInput\n                    name=\"reference\"\n                    onSave={handleTextInputSave}\n                    autoComplete=\"off\"\n                    className=\"span-12 span-md-4\"\n                    placeholder=\"Ajouter une reference ...\"\n                    disabled={doc.is_read_only}\n                />\n            </div>\n\n            <div className=\"d-grid grid-1 grid-xl-12 mb-2\">\n                <Form.Label value=\"Description\" className=\"span-12 mb-1\" />\n\n                <div className=\"span-lg-8\">\n                    <Form.TextAreaX\n                        name=\"description\"\n                        onSave={handleTextInputSave}\n                        placeholder=\"Ajouter une description ...\"\n                        disabled={doc.is_read_only}\n                    />\n                </div>\n            </div>\n        </FormProvider>\n    );\n}\n","import Form, { useForm } from \"@miq/form\";\nimport { Icons, IconButton, IconNavLink } from \"@miq/components\";\nimport { useEffect, useState } from \"react\";\nimport { AdminView } from \"@miq/admin\";\nimport { docServices } from \"../utils\";\nimport DocuFileGrid from \"../../docufile/FileGrid\";\n\nimport \"./document-update-view.scss\";\n\nimport DocumentShareModal from \"./ShareModal\";\nimport DocumentUpdateForm from \"./UpdateForm\";\n\nexport const ViewHeader = (props) => {\n    const { doc } = props;\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <div className=\"document-update-header my-2\">\n            <div className=\"pe-1\">\n                <IconNavLink\n                    to={props.match.path.replace(\":docSlug/\", \"\")}\n                    Icon={Icons.ArrowLeft}\n                    title=\"Retourner en arriere\"\n                />\n            </div>\n            <div className=\"flex-1\">\n                <Form.TextInput\n                    required\n                    name=\"title\"\n                    onSave={props.handleTextInputSave}\n                    disabled={doc.is_read_only}\n                    autoComplete=\"off\"\n                    tabIndex={0}\n                    aria-label=\"Renommer ce document\"\n                    title=\"Renommer ce document\"\n                    data-tooltip=\"Renommer ce document\"\n                />\n            </div>\n\n            <div className=\"ps-1\">\n                <IconButton\n                    primary\n                    onClick={() => setOpen(true)}\n                    disabled={doc.is_read_only}\n                    Icon={Icons.Share}\n                    // className=\"p-1\"\n                    label=\"Partager\"\n                    title=\"Partager ce document avec des personnes\"\n                />\n\n                {!doc.is_read_only && isOpen && <DocumentShareModal {...props} {...{ setOpen, isOpen }} />}\n            </div>\n        </div>\n    );\n};\n\n/**\n *\n * @param {*} props\n * @returns\n */\n\nexport default function DocumentUpdateView(props) {\n    const { docSlug } = props.match.params;\n\n    const [doc, setDoc] = useState(null);\n    const [error, setError] = useState(null);\n\n    const form = useForm({ title: \"\", reference: \"\", description: \"\" });\n    const { setValues } = form;\n\n    useEffect(() => {\n        docServices\n            .get(docSlug)\n            .then((data) => {\n                setDoc(data);\n                setValues({\n                    title: data.title || \"\",\n                    reference: data.reference || \"\",\n                    description: data.description || \"\",\n                });\n            })\n            .catch((err) => {\n                if (err.response) {\n                    if (err.response.status === 404) {\n                        setError(\"notfound\");\n                        return;\n                    }\n                }\n\n                setError(\"error\");\n            });\n    }, [docSlug, setValues]);\n\n    if (error)\n        return (\n            <div>\n                <h1>Ce document n'existe pas</h1>\n            </div>\n        );\n\n    if (!doc || !doc.slug) return null;\n\n    /**\n     *\n     * @param {Object} param0\n     * @returns\n     */\n    const handleTextInputSave = ({ name, value }) => {\n        if (!doc || doc.is_read_only) return;\n\n        docServices\n            .patch(docSlug, { [name]: value }, { [name]: doc[name] })\n            .then((data) => {\n                // console.log(data);\n            })\n            .catch((err) => {});\n    };\n\n    return (\n        <Form context={form} className=\"document-update-form\">\n            <AdminView className=\"document-update-view miq-container-fluid\">\n                <ViewHeader {...props} {...{ doc, setDoc, handleTextInputSave }} />\n\n                {/* FORM */}\n                <DocumentUpdateForm {...props} {...{ docSlug, doc, setDoc, docSlug, form, handleTextInputSave }} />\n\n                {/* FILES */}\n                <div>\n                    <div className=\"d-flex align-items-center justify-content-between\">\n                        <h4>Fichiers</h4>\n                    </div>\n\n                    <DocuFileGrid items={doc.files_data} />\n                </div>\n            </AdminView>\n        </Form>\n    );\n}\n","import { API, services } from \"@miq/admin\";\nimport { getService } from \"@miq/utils\";\nimport { addOrUpdateArrayObject } from \"@miq/utils\";\n\nexport const docServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUMENT\n     */\n\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(docSlug, params) {\n        return getService(API, `${this.path}${docSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(docSlug, values, oldValues) {\n        return services.patch(`${this.path}${docSlug}/`, values, oldValues);\n    },\n    archive(docSlug) {\n        return services.get(`${this.path}${docSlug}/archive/`);\n    },\n    delete(docSlug) {\n        return services.delete(`${this.path}${docSlug}/`);\n    },\n\n    /**\n     * USER\n     */\n\n    patchUserPermission(docSlug, user_slug, permission) {\n        return services.post(`${this.path}${docSlug}/permission/`, { user_slug, permission });\n    },\n\n    getStaffList(q) {\n        return services.get(\"search-staff/\", { q });\n    },\n\n    patchUser(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/users/`, values);\n    },\n};\n\nexport const docsReducer = (state = { results: [] }, action) => {\n    const { type, payload = {} } = action;\n    let results;\n\n    switch (type) {\n        case \"SET_DOCS\":\n            return { ...payload };\n\n        case \"APPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"ADD_UPDATE_DOC\":\n        case \"PREPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_DOC\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n","import { Icons, Button, ImgSquare } from \"@miq/components\";\n\nimport \"./docufile-grid.scss\";\n\nconst getIcon = (file) => {\n    switch (file.ext) {\n        case \".jpg\":\n        case \".jpeg\":\n        case \".png\":\n            return <ImgSquare {...file} />;\n\n        default:\n            const Icon = Icons.getFileIcon(file.ext);\n            return <Icon className=\"icon mb-1\" />;\n    }\n};\n\nexport default function DocuFileGrid({ items = [], ...props }) {\n    return (\n        <div className=\"docufile-grid\">\n            {items.map((file) => {\n                return (\n                    <Button title={file.name} className=\"docufile-btn\" key={file.slug}>\n                        {getIcon(file)}\n\n                        <div className=\"text-center\">\n                            <span className=\"label d-block\">{file.name_truncated}</span>\n                            <span className=\"size d-block\">{file.size}</span>\n                        </div>\n                    </Button>\n                );\n            })}\n        </div>\n    );\n}\n"],"sourceRoot":""}