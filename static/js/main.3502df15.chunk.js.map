{"version":3,"sources":["../../griot-admin/src/index.jsx","reportWebVitals.js","index.jsx"],"names":["Main","props","path","className","component","Settings","Dashboard","NavBar","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","match","document","getElementById"],"mappings":"2MAeA,IAAMA,EAAO,SAACC,GACV,IAAQC,EAASD,EAATC,KAER,OACI,qBAAKC,UAAU,GAAf,SACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOD,KAAI,UAAKA,EAAL,aAAsBE,UAAWC,IAC5C,cAAC,IAAD,CAAOH,KAAI,UAAKA,GAAQE,UAAWE,UAM7CA,EAAY,SAACL,GACf,OAAO,qBAAKE,UAAU,GAAf,wBAGLE,EAAW,SAACJ,GACd,OAAO,qBAAKE,UAAU,GAAf,uBAGLI,EAAS,SAACN,GACZ,IAAQC,EAASD,EAATC,KACR,OACI,sBAAKC,UAAU,GAAf,UACI,cAAC,IAAD,CAASK,GAAIN,EAAb,uBACA,cAAC,IAAD,CAASM,GAAE,UAAKN,EAAL,aAAX,0BC9BGO,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCEdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOlB,KAAK,SAASE,UFXtB,SAAeH,GAC1B,IAAQC,EAASD,EAAMoB,MAAfnB,KAER,OACI,cAAC,IAAD,UACI,sBAAKC,UAAU,GAAf,UACI,cAAC,EAAD,2BAAYF,GAAZ,IAAmBC,KAAMA,KACzB,cAAC,EAAD,2BAAUD,GAAV,IAAiBC,KAAMA,mBEQnCoB,SAASC,eAAe,SAM5Bd,M","file":"static/js/main.3502df15.chunk.js","sourcesContent":["import { BrowserRouter, NavLink, Route, Switch } from \"react-router-dom\";\n\nexport default function Admin(props) {\n    const { path } = props.match;\n\n    return (\n        <BrowserRouter>\n            <div className=\"\">\n                <NavBar {...props} path={path} />\n                <Main {...props} path={path} />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nconst Main = (props) => {\n    const { path } = props;\n\n    return (\n        <div className=\"\">\n            <Switch>\n                {/* <Route path={`${path}settings/`} component={Comp} /> */}\n                <Route path={`${path}settings/`} component={Settings} />\n                <Route path={`${path}`} component={Dashboard} />\n            </Switch>\n        </div>\n    );\n};\n\nconst Dashboard = (props) => {\n    return <div className=\"\">Dashboard</div>;\n};\n\nconst Settings = (props) => {\n    return <div className=\"\">Settings</div>;\n};\n\nconst NavBar = (props) => {\n    const { path } = props;\n    return (\n        <div className=\"\">\n            <NavLink to={path}>Dashboard</NavLink>\n            <NavLink to={`${path}settings/`}>Settings</NavLink>\n        </div>\n    );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Admin from \"@griot/admin\";\n\nimport \"./index.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/grio/\" component={Admin} />\n            </Switch>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}