{"version":3,"sources":["../../../../../packages/miq-shared/src/components/Modal/index.jsx","../../../../../packages/miq-shared/src/components/Image/index.jsx","../../../../../packages/miq-shared/src/components/buttons.jsx","../../grio-admin/src/utils.jsx","../../grio-admin/src/actions.jsx","../../grio-admin/src/editor/Section/utils.jsx","../../../../../packages/miq-shared/src/contexts/index.jsx","../../grio-admin/src/AdminLayout/index.jsx","../../grio-admin/src/index.jsx","reportWebVitals.js","index.jsx","../../grio-admin/src/pages/utils.jsx","../../../../../packages/miq-shared/src/components/inputs/TextareaX/index.jsx","../../../../../packages/miq-shared/src/form/FormCtx.jsx","../../../../../packages/miq-shared/src/form/TextInput.jsx","../../../../../packages/miq-shared/src/form/useForm.jsx","../../../../../packages/miq-shared/src/form/index.jsx","../../grio-admin/src/editor/Section/section-components.jsx","../../grio-admin/src/editor/Section/section-ui.jsx","../../grio-admin/src/editor/Section/ImageSection/index.jsx","../../grio-admin/src/editor/Section/renderers.jsx","../../grio-admin/src/editor/Section/MarkdownSection/index.jsx","../../grio-admin/src/editor/Section/TextSection/index.jsx","../../grio-admin/src/editor/Section/index.jsx","../../grio-admin/src/editor/Editor/index.jsx","../../grio-admin/src/editor/index.jsx","../../../../../packages/miq-shared/src/utils/index.jsx"],"names":["Portal","children","ReactDOM","createPortal","document","body","Modal","id","header","footer","fullscreen","className","getClassName","propTypes","PropTypes","node","isRequired","Img","props","Icon","src","rest","getImgUrl","alt","alt_text","ImgPlaceholderDiv","ImgIcon","xmlns","width","height","fill","viewBox","d","IconButton","label","maxSize","title","type","IconNavLink","to","ENDPOINT","DOMAIN","process","axios","defaults","xsrfCookieName","xsrfHeaderName","headers","post","API","create","baseURL","timeout","withCredentials","actions","get","path","params","request","Promise","resolve","reject","then","data","isString","reduxStore","dispatch","payload","catch","err","values","patch","oldValues","isEqual","isUpdated","delete","slug","res","status","deleted","arrAddOrUpdateObject","arr","obj","key","arrKey","map","i","includes","sectionActions","list","sectSlug","initialState","sections","results","sectionsReducer","state","action","filter","SharedDataCtx","createContext","SharedDataProvider","useState","isLoaded","value","setValue","window","location","href","useEffect","getSharedData","console","log","Provider","PagesLayout","lazy","SettingsLayout","AdminLayout","ctx","useContext","match","role","fallback","component","Dashboard","NavBar","site","name","exact","House","Bookmark","Files","PersonBadge","Gear","NavItem","MobileNav","reducers","pages","pagesReducer","EditorLayout","Fallback","storeReducer","combineReducers","middleware","thunk","enhancers","applyMiddleware","IS_DEV","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","Grio","store","EDITOR_PATH","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","Admin","getElementById","items","pagesActions","this","pageSlug","forEach","item","getPageUpdatePath","PAGE_CREATE_PATH","TextareaX","forwardRef","require","ref","clearFocus","onChange","placeholder","style","FormCtx","FormProvider","withInput","Component","args","checked","Object","keys","handleChange","TextInput","string","required","bool","disabled","CheckboxInput","any","TextArea","TextAreaX","displayName","useForm","defaultValues","setValues","errors","setErrors","toggleCheck","e","target","Form","context","SectionSaveButton","form","ArrowUpCircle","onClick","shouldSave","text","setEdit","isEdit","onSave","SectionDeleteButton","Trash","remove","SectionEditButton","Eye","PencilSquare","SectionBody","SectionHeader","SectionFooter","ImgUploadButton","UploadTab","tab","LibraryTab","UnsplashTab","ImgSectionEdit","setTab","ImgSectionPreview","image","CloudArrowUp","ImageSection","ImageIcon","marked","setOptions","renderer","Renderer","highlight","code","lang","hljs","language","getLanguage","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","MdSectionEdit","autoFocus","MdSectionPreview","dangerouslySetInnerHTML","__html","html","MarkdownSection","update","Markdown","TxtSectionEdit","TxtSectionPreview","TextSection","TextareaT","SectionCtx","Section","useRef","useDispatch","useMemo","getSectionComponent","Editor","sourceSlug","loading","setLoading","sourceData","source","onSubmit","preventDefault","Panel","useSelector","tabIndex","maxLength","PageUpdateView","PageAddView","page","PageUpdateHeader","ChevronLeft","origin","HTTP","onUploadProgress","progressEvt","a","sharedData","base","URL","pathname","search","parser","DOMParser","doc","parseFromString","JSON","parse","textContent","df","Array","isArray","Boolean","join","domain","addForwardSlash","str","endsWith","Error"],"mappings":"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","file":"static/js/main.73f84fac.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { getClassName } from \"@miq/utils\";\n\nimport \"./modal.scss\";\n\nexport const Portal = ({ children }) => {\n    return ReactDOM.createPortal(children, document.body);\n};\n\nPortal.Modal = Modal;\nPortal.propTypes = { children: PropTypes.node.isRequired };\n\nexport default function Modal({ id, header, children, footer, fullscreen }) {\n    return (\n        <div id={id} className=\"modal-container\">\n            <div className=\"modal-background\" />\n            <div className=\"modal-inner\">\n                <div className=\"modal-content\">\n                    <div\n                        className={getClassName([\n                            \"modal-content-inner\",\n                            fullscreen && \"modal-content-inner-fullscreen\",\n                        ])}\n                    >\n                        {header && <div className=\"modal-header\">{header}</div>}\n                        <div className=\"modal-body\">{children}</div>\n                        {footer && <div className=\"modal-footer\">{footer}</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nModal.propTypes = {\n    id: PropTypes.string,\n    fullscreen: PropTypes.bool,\n\n    header: PropTypes.node,\n    children: PropTypes.node.isRequired,\n    footer: PropTypes.node,\n};\n","import React from \"react\";\nimport { getClassName, getImgUrl } from \"@miq/utils\";\n\nimport \"./image.scss\";\n\n/**\n * IMAGE\n */\n\nexport default function Img(props) {\n    let { Icon, src, ...rest } = props;\n    if (!src) return <ImgPlaceholderDiv {...props} {...{ Icon }} />;\n\n    src = getImgUrl(src);\n\n    return <img {...rest} src={src} alt={props.alt_text || \"\"} />;\n}\n\n/**\n * IMAGE PLACEHOLDER\n */\n\nexport const ImgPlaceholderDiv = (props) => {\n    let { Icon = ImgIcon, ...rest } = props;\n\n    return (\n        <div {...rest} className={getClassName([\"img-placeholder\", rest.className])}>\n            <Icon className=\"icon\" />\n        </div>\n    );\n};\n\nconst ImgIcon = (props) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 16 16\"\n        {...props}\n    >\n        <path d=\"M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\n        <path d=\"M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z\" />\n    </svg>\n);\n","import PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { getClassName } from \"@miq/utils\";\n\nconst propTypes = {\n    label: PropTypes.string,\n    title: PropTypes.string,\n    maxSize: PropTypes.number,\n    Icon: PropTypes.object.isRequired,\n};\n\nexport const IconButton = ({ Icon, label, ...props }) => {\n    const { maxSize, ...rest } = props;\n    if (!Icon) return null;\n\n    return (\n        <button\n            title={label}\n            type=\"button\"\n            {...rest}\n            className={getClassName([\"btn btn-icon\", props.className])}\n        >\n            <Icon className=\"icon\" height={maxSize} width={maxSize} />\n            {label && <span className=\"label\">{label}</span>}\n        </button>\n    );\n};\nIconButton.propTypes = propTypes;\n\nexport const IconNavLink = ({ Icon, label, ...props }) => {\n    if (!Icon || !props.to) return null;\n\n    return (\n        <NavLink {...props} className={getClassName([\"btn btn-icon\", props.className])}>\n            <Icon className=\"icon\" />\n            {label && <span className=\"label\">{label}</span>}\n        </NavLink>\n    );\n};\nIconNavLink.propTypes = propTypes;\n","import axios from \"axios\";\n\nimport { DOMAIN } from \"@miq/utils\";\n\nexport const ENDPOINT = `${DOMAIN}${process.env.REACT_APP_API_ENDPOINT}`;\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n// axios.defaults.headers[\"Content-Type\"] = \"text/html; charset=UTF-8\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport const API = axios.create({\n    baseURL: ENDPOINT,\n    timeout: 3000,\n    withCredentials: true,\n    // headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n    headers: {\n        \"Content-type\": \"application/json\",\n    },\n    // onUploadProgress: (progressEvt) => {},\n});\n","import { isEqual, isString } from \"lodash\";\nimport { reduxStore } from \".\";\nimport { API } from \"./utils\";\n\nconst actions = {\n    /**\n     *\n     * @param {String} path\n     * @param {Object} params\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    get(path, params, type, request = API) {\n        return new Promise((resolve, reject) =>\n            request\n                .get(path, { params })\n                .then(({ data }) => {\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: data });\n                    }\n                    return resolve(data);\n                })\n                .catch((err) => reject(err))\n        );\n    },\n\n    /**\n     *\n     * @param {String} path\n     * @param {Object} values\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    post(path, values, type, request = API) {\n        return new Promise((resolve, reject) => {\n            request\n                .post(path, values)\n                .then(({ data }) => {\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: data });\n                    }\n\n                    return resolve(data);\n                })\n                .catch((err) => reject(err));\n        });\n    },\n\n    /**\n     *\n     * @param {String} path\n     * @param {Object} values\n     * @param {Object} oldValues\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    patch(path, values, oldValues, type, request = API) {\n        return new Promise((resolve, reject) => {\n            if (oldValues && isEqual(values, oldValues)) {\n                return resolve({ isUpdated: false });\n            }\n\n            request\n                .patch(path, values)\n                .then(({ data }) => {\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: data });\n                    }\n\n                    return resolve({ ...data, isUpdated: true });\n                })\n                .catch((err) => reject(err));\n        });\n    },\n\n    /**\n     *\n     * @param {String} path\n     * @param {String} slug\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    delete(path, slug, type, request = API) {\n        return new Promise((resolve, reject) =>\n            request\n                .delete(path)\n                .then((res) => {\n                    if (!res.status === 204) return reject(res);\n\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: { slug } });\n                    }\n\n                    resolve({ deleted: true });\n                })\n                .catch((err) => reject(err))\n        );\n    },\n};\n\nexport default actions;\n","import actions from \"../../actions\";\n\nexport function arrAddOrUpdateObject(arr, obj, key = \"slug\") {\n    const arrKey = arr.map((i) => i[key]);\n\n    if (!arrKey.includes(obj[key])) return [obj, ...arr];\n\n    return arr.map((i) => {\n        if (i[key] === obj[key]) return obj;\n        return i;\n    });\n}\n\nconst path = `sections/`;\nexport const sectionActions = {\n    list(params) {\n        return actions.get(path, params, \"SET_SECTIONS\");\n    },\n    get(sectSlug, params) {\n        return actions.get(`${path}${sectSlug}/`, params, \"ADD_UPDATE_SECTION\");\n    },\n    patch(sectSlug, values, oldValues) {\n        return actions.patch(`${path}${sectSlug}/`, values, oldValues, \"ADD_UPDATE_SECTION\");\n    },\n    delete(sectSlug) {\n        return actions.delete(`${path}${sectSlug}/`, sectSlug, \"REMOVE_SECTION\");\n    },\n};\n\nconst initialState = { sections: { results: [] } };\n\nexport const sectionsReducer = (state = initialState.sections, action) => {\n    const { type, payload = {} } = action;\n    let { results } = payload;\n\n    switch (type) {\n        case \"SET_SECTIONS\":\n            return { ...payload };\n\n        case \"ADD_UPDATE_SECTION\":\n            results = arrAddOrUpdateObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_SECTION\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n","import { useEffect, useState, createContext } from \"react\";\nimport { getSharedData } from \"@miq/utils\";\n\nexport const SharedDataCtx = createContext();\n\nexport const SharedDataProvider = ({ children }) => {\n    const [value, setValue] = useState({ isLoaded: false });\n\n    const path = window.location.href;\n\n    useEffect(() => {\n        // setValue({ isLoaded: false });\n\n        getSharedData()\n            .then((data) => {\n                setValue({ ...data, isLoaded: true });\n            })\n            .catch((err) => {\n                setValue({ isLoaded: false });\n                console.log(err);\n            });\n    }, [path]);\n\n    return <SharedDataCtx.Provider value={value}>{children}</SharedDataCtx.Provider>;\n};\n\nSharedDataProvider.propTypes = {\n    // children: PropTypes.arrayOf([PropTypes.node]).isRequired,\n};\n","import { lazy, Suspense, useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { House, Gear, Files, Bookmark, PersonBadge } from \"react-bootstrap-icons\";\n\nimport { IconNavLink } from \"@miq/components\";\nimport { SharedDataCtx } from \"@miq/contexts\";\nimport { Fallback } from \"../index\";\n\nconst PagesLayout = lazy(() => import(\"../pages\"));\nconst SettingsLayout = lazy(() => import(\"../settings\"));\n\nexport default function AdminLayout(props) {\n    const ctx = useContext(SharedDataCtx);\n    const { path } = props.match;\n\n    if (!ctx) return null;\n    if (!ctx.isLoaded) return <Fallback />;\n\n    return (\n        <div id=\"AdminView\">\n            <NavBar {...props} {...{ path, ctx }} />\n\n            <main className=\"grio-main\" role=\"main\">\n                <section className=\"container\">\n                    <Suspense fallback={<Fallback />}>\n                        <Switch>\n                            <Route path={`${path}pages/`} component={PagesLayout} />\n                            <Route path={`${path}settings/`} component={SettingsLayout} />\n                            <Route path={`${path}`} component={Dashboard} />\n                        </Switch>\n                    </Suspense>\n                </section>\n            </main>\n\n            <MobileNav />\n        </div>\n    );\n}\n\nexport const Dashboard = (props) => {\n    return <div className=\"\">Dashboard</div>;\n};\n\nexport const NavBar = (props) => {\n    const { path, ctx = {} } = props;\n\n    return (\n        <nav id=\"AdminNav\" className=\"grio-nav\">\n            <header className=\"grio-nav-header\">\n                <h1>{ctx.site.name}</h1>\n            </header>\n\n            <section className=\"grio-nav-body\">\n                <div className=\"grio-nav-content\">\n                    <NavItem exact to={\"/grio/\"} label=\"Dashboard\" Icon={House} />\n\n                    <div className=\"grio-nav-items\">\n                        <NavItem to={`${path}blog`} label=\"Articles\" Icon={Bookmark} />\n                    </div>\n\n                    <NavItem to={`${path}pages/`} label=\"Pages\" Icon={Files} />\n                    <NavItem to={`${path}staff/`} label=\"Staff\" Icon={PersonBadge} />\n                </div>\n\n                <div className=\"grio-nav-footer\">\n                    <NavItem to={`${path}settings/`} label=\"Settings\" Icon={Gear} />\n                </div>\n            </section>\n        </nav>\n    );\n};\n\nconst NavItem = (props) => {\n    return (\n        <div className=\"grio-nav-item\">\n            <IconNavLink {...props} className=\"grio-nav-link\" />\n        </div>\n    );\n};\n\nexport const MobileNav = (props) => {\n    return <nav className=\"grio-mobile-nav\">Mobile</nav>;\n};\n","import thunk from \"redux-thunk\";\nimport { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport \"./scss/main.scss\";\n\nimport { SharedDataProvider } from \"@miq/contexts\";\nimport { IS_DEV } from \"@miq/utils\";\n\nimport { EDITOR_PATH } from \"./editor\";\nimport AdminLayout from \"./AdminLayout\";\nimport { pagesReducer } from \"./pages/utils\";\nimport { sectionsReducer } from \"./editor/Section/utils\";\n\nexport const initialState = {};\n\nconst reducers = { pages: pagesReducer, sections: sectionsReducer };\n\nconst EditorLayout = lazy(() => import(\"./editor\"));\nexport const Fallback = (props) => <div>Loading ...</div>;\n\nconst storeReducer = combineReducers({ ...reducers });\n\nconst middleware = [thunk];\nlet enhancers = [applyMiddleware(...middleware)];\nif (IS_DEV) {\n    enhancers = [...enhancers, window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f];\n}\n\nexport const reduxStore = createStore(storeReducer, initialState, compose(...enhancers));\n\nexport default function Grio(props) {\n    return (\n        <SharedDataProvider>\n            <ReduxProvider store={reduxStore}>\n                <div id=\"Grio\">\n                    <Suspense fallback={<Fallback />}>\n                        <Switch>\n                            <Route path={`${EDITOR_PATH}`} component={EditorLayout} />\n                            <Route component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </div>\n            </ReduxProvider>\n        </SharedDataProvider>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Admin from \"@grio/admin\";\n\nimport \"./index.scss\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Switch>\n                {/* /grio/ */}\n                <Route path=\"/grio/\" component={Admin} />\n            </Switch>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import actions from \"../actions\";\nimport { PAGE_CREATE_PATH } from \"../editor\";\n\nconst initialState = { results: [], items: {} };\n\nexport const pagesActions = {\n    path: \"pages/\",\n\n    list(params) {\n        return actions.get(this.path, params, \"SET_PAGES\");\n    },\n    get(pageSlug, params) {\n        return actions.get(`${this.path}${pageSlug}/`, params, \"ADD_UPDATE_PAGE\");\n    },\n    patch(pageSlug, values, oldValues) {\n        return actions.patch(`${this.path}${pageSlug}/`, values, oldValues, \"ADD_UPDATE_PAGE\");\n    },\n    delete(pageSlug) {\n        return actions.delete(`${this.path}${pageSlug}/`, pageSlug, \"REMOVE_PAGE\");\n    },\n};\n\nexport const pagesReducer = (state = initialState, action) => {\n    const { type, payload = {} } = action;\n    let items;\n\n    switch (type) {\n        case \"SET_PAGES\":\n            const { results, ...rest } = payload;\n            state = { ...rest };\n\n            if (results) {\n                items = {};\n\n                results.forEach((item) => {\n                    items[`${item.slug}`] = item;\n                });\n                state = { ...state, items };\n            }\n            return state;\n\n        case \"ADD_UPDATE_PAGE\":\n            items = { ...state.items, [payload.slug]: payload };\n            return { ...state, items };\n\n        case \"REMOVE_PAGE\":\n            items = state.items;\n            delete items[payload.slug];\n            return { ...state, items };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport const getPageUpdatePath = (slug) => `${PAGE_CREATE_PATH}${slug}/`;\n","import PropTypes from \"prop-types\";\n\nimport \"./textareax.scss\";\nimport { getClassName } from \"@miq/utils\";\n\nconst { forwardRef } = require(\"react\");\n\nconst propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    ref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.any })]),\n\n    value: PropTypes.string,\n    required: PropTypes.bool,\n\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onKeyUp: PropTypes.func,\n\n    style: PropTypes.object,\n    placeholder: PropTypes.string,\n    clearFocus: PropTypes.bool,\n};\n\nconst TextareaX = forwardRef((props, ref) => {\n    const { id, clearFocus, value, onChange, placeholder = \"Start typing ...\", ...rest } = props;\n    const style = props.style;\n\n    return (\n        <div id={id} className={getClassName([\"textareax\", clearFocus && \"clear-focus\"])}>\n            <span className=\"textareax-mirror\" {...{ style }}>{`${value}\\n`}</span>\n\n            <div className=\"textareax-input\">\n                <textarea {...rest} {...{ value, onChange, placeholder, style }} ref={ref} />\n            </div>\n        </div>\n    );\n});\n\nTextareaX.propTypes = propTypes;\n\nexport default TextareaX;\n","import { createContext } from \"react\";\n\nconst FormCtx = createContext(null);\n\nexport const FormProvider = FormCtx.Provider;\n\nexport default FormCtx;\n","import React, { forwardRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextareaX from \"../components/inputs/TextareaX\";\nimport { getClassName, isRequired, IS_DEV } from \"@miq/utils\";\nimport FormCtx from \"./FormCtx\";\n\nconst withInput = (Component, args = {}) => {\n    return forwardRef((props, ref) => {\n        props = { ...args, ...props };\n        const ctx = useContext(FormCtx) || isRequired(\"FormCtx\");\n        const { name = isRequired(\"name prop\") } = props;\n        let { value, checked, onChange } = props;\n\n        if (Object.keys(ctx.values).includes(name)) {\n            if (props.type === \"checkbox\") checked = ctx.values[name];\n            else value = ctx.values[name];\n        }\n\n        onChange = onChange || ctx.handleChange;\n\n        return (\n            <Component\n                {...props}\n                className={getClassName([args.className, props.className])}\n                {...{ value, checked, onChange }}\n                ref={ref}\n            />\n        );\n    });\n};\n\nexport const TextInput = withInput(\"input\", { className: \"input\" });\nTextInput.propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n};\n\nexport const CheckboxInput = withInput(\"input\", {\n    type: \"checkbox\",\n    className: \"input input-checkbox\",\n});\n\nCheckboxInput.propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.any,\n    checked: PropTypes.bool,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n};\n\nexport const TextArea = withInput(\"textarea\", { className: \"textarea\" });\nexport const TextAreaX = withInput(TextareaX);\n\nif (IS_DEV) {\n    TextInput.displayName = \"TextInput\";\n    CheckboxInput.displayName = \"CheckboxInput\";\n\n    TextArea.displayName = \"TextArea\";\n    TextAreaX.displayName = \"TextAreaX\";\n}\n","import { useState } from \"react\";\n\nexport default function useForm(defaultValues = {}) {\n    const [values, setValues] = useState({ ...defaultValues });\n    const [errors, setErrors] = useState({});\n\n    const setValue = (key, value) => {\n        setValues({ ...values, [key]: value });\n    };\n\n    const toggleCheck = (e) => {\n        const { name } = e.target;\n        return setValue(name, !values[name]);\n    };\n\n    const handleChange = (e) => {\n        switch (e.target.type) {\n            case \"checkbox\":\n                return toggleCheck(e);\n\n            default:\n                return setValue(e.target.name, e.target.value);\n        }\n    };\n    return { values, handleChange, toggleCheck, setValue, setValues, errors, setErrors };\n}\n","import { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./form.scss\";\nimport { TextArea, TextAreaX, TextInput, CheckboxInput } from \"./TextInput\";\nimport { FormProvider } from \"./FormCtx\";\n\nconst propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n\n    children: PropTypes.node,\n    context: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func,\n};\n\nconst Form = forwardRef(({ children, context, ...props }, ref) => {\n    return (\n        <FormProvider value={context}>\n            <form {...props} ref={ref}>\n                {children}\n            </form>\n        </FormProvider>\n    );\n});\n\nForm.TextInput = TextInput;\nForm.CheckboxInput = CheckboxInput;\nForm.TextArea = TextArea;\nForm.TextAreaX = TextAreaX;\n\nForm.propTypes = propTypes;\n\nexport default Form;\nexport { default as useForm } from \"./useForm\";\nexport { default as FormCtx, FormProvider } from \"./FormCtx\";\n","import { ArrowUpCircle, Eye, PencilSquare, Trash } from \"react-bootstrap-icons\";\n\nimport { IconButton } from \"@miq/components\";\nimport { isRequired } from \"@miq/utils\";\n\nexport const SectionSaveButton = (props) => {\n    const { context = isRequired(\"section context\") } = props;\n    const { form = isRequired(\"form context\") } = props;\n    const { data = isRequired(\"section data\") } = props;\n\n    const handleSave = (e) => {\n        const shouldSave = data.text !== form.values.text;\n        console.log(\"Saving\", shouldSave);\n\n        if (!shouldSave) return context.setEdit(!context.isEdit);\n        if (!props.onSave) return;\n\n        props.onSave();\n    };\n\n    return <IconButton Icon={ArrowUpCircle} label=\"Save\" className=\"section-btn\" title=\"Save\" onClick={handleSave} />;\n};\n\nexport const SectionDeleteButton = (props) => {\n    console.log(props);\n    const { context = isRequired(\"section context\") } = props;\n    const { data = isRequired(\"section data\") } = props;\n\n    return (\n        <IconButton\n            {...props}\n            Icon={Trash}\n            className=\"section-btn btn-danger\"\n            title=\"Delete\"\n            onClick={() => context.remove(data.slug)}\n        />\n    );\n};\n\nexport const SectionEditButton = (props) => {\n    const { context = isRequired(\"section context\") } = props;\n    const { isEdit } = context;\n\n    if (isEdit) return <SectionSaveButton {...props} />;\n\n    return (\n        <IconButton\n            Icon={isEdit ? Eye : PencilSquare}\n            className=\"section-btn\"\n            title={isEdit ? \"Preview Mode\" : \"Edit Mode\"}\n            onClick={() => context.setEdit(!isEdit)}\n        />\n    );\n};\n","import { getClassName } from \"@miq/utils\";\n\nexport const SectionBody = ({ children, id, className }) => (\n    <div id={id} className={getClassName([\"section-body\", className])}>\n        {children}\n    </div>\n);\n\nexport const SectionHeader = ({ children, Icon, id, className }) => (\n    <div id={id} className={getClassName([\"section-header\", className])}>\n        {Icon && (\n            <div className=\"\">\n                <Icon className=\"icon\" />\n            </div>\n        )}\n\n        {children}\n    </div>\n);\n\nexport const SectionFooter = ({ children, id, className }) => (\n    <div id={id} className={getClassName([\"section-footer\", className])}>\n        {children}\n    </div>\n);\n","import { forwardRef, useState } from \"react\";\nimport { CloudArrowUp, Image as ImageIcon } from \"react-bootstrap-icons\";\n\nimport { IconButton, Img } from \"@miq/components\";\nimport { getClassName, IS_DEV } from \"@miq/utils\";\n\nimport { SectionDeleteButton } from \"../section-components\";\nimport { SectionBody, SectionFooter, SectionHeader } from \"../section-ui\";\n\n/**\n * IMAGE SECTION\n * images Icon:viewlist\n * slider; distribute-horizontal\n */\n\nconst ImgUploadButton = ({ children }) => {\n    return (\n        <div className=\"\" onClick={() => console.log(\"Uploading...\")}>\n            {children}\n        </div>\n    );\n};\n\nconst UploadTab = (props) => {\n    const { tab } = props;\n\n    if (tab === \"library\") return <LibraryTab {...props} />;\n    if (tab === \"unsplash\") return <UnsplashTab {...props} />;\n\n    return (\n        <div className=\"tab-upload\">\n            <div className=\"\">Click to upload an image</div>\n            <div className=\"\">or</div>\n            <div className=\"\">Paste url</div>\n        </div>\n    );\n};\nconst LibraryTab = (props) => {\n    return <div className=\"tab-library\">Images from library</div>;\n};\n\nconst UnsplashTab = (props) => {\n    return <div className=\"tab-unsplash\">Images from unsplash</div>;\n};\n\nconst ImgSectionEdit = (props) => {\n    const [tab, setTab] = useState(\"new\");\n    return (\n        <div className=\"section-edit\">\n            <div className=\"\">\n                <button onClick={() => setTab(\"new\")}>New</button>\n                <button onClick={() => setTab(\"library\")}>Library</button>\n                <button onClick={() => setTab(\"unsplash\")}>Unsplash</button>\n            </div>\n\n            <UploadTab {...{ tab }} />\n\n            <ImgUploadButton />\n        </div>\n    );\n};\n\nconst ImgSectionPreview = (props) => {\n    const { data } = props;\n\n    if (props.context.isEdit) return <ImgSectionEdit {...props} />;\n\n    const src =\n        \"https://images.unsplash.com/photo-1621570070821-2e2b1358fae3?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wxfDF8YWxsfDF8fHx8fHwyfHwxNjIxOTkyNDMw&ixlib=rb-1.2.1&q=80&w=2000\";\n\n    return (\n        <div\n            className={getClassName([\"section-preview\", !data.image && \"empty\"])}\n            onClick={() => props.context.setEdit(!props.context.isEdit)}\n        >\n            <Img Icon={CloudArrowUp} src={src} />\n            {!data.image && <span>Click to upload an image</span>}\n        </div>\n    );\n};\n\nconst ImageSection = forwardRef((props, ref) => {\n    return (\n        <div id={props.id} {...{ ref }} className={getClassName([props.className, \"section-img\"])}>\n            <SectionHeader Icon={ImageIcon} />\n\n            <SectionBody>\n                <ImgSectionPreview {...props} />\n            </SectionBody>\n\n            <SectionFooter>\n                <div className=\"actions\">\n                    <SectionDeleteButton {...props} />\n                </div>\n            </SectionFooter>\n        </div>\n    );\n});\n\nif (IS_DEV) {\n    ImageSection.displayName = \"ImageSection\";\n}\n\nexport default ImageSection;\n","import marked from \"marked\";\nimport ReactDOMServer from \"react-dom/server\";\n\nimport { isRequired } from \"@miq/utils\";\n\nmarked.setOptions({\n    renderer: new marked.Renderer(),\n    highlight: function (code, lang) {\n        const hljs = require(\"highlight.js\");\n        const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\n\n        return hljs.highlight(code, { language }).value;\n    },\n    pedantic: false,\n    gfm: true,\n    breaks: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n});\n\nexport const componentToHtml = (Component) => ReactDOMServer.renderToStaticMarkup(Component);\n\nexport default function render(data) {\n    const { type = isRequired(\"section type\") } = data;\n\n    switch (type) {\n        case \"MD\":\n            return marked(data.text);\n\n        default:\n            return `<div>${data.text}</div>`;\n    }\n}\n\n/**\n * UI\n */\n","import { getClassName, IS_DEV } from \"@miq/utils\";\nimport { forwardRef } from \"react\";\n\nimport \"highlight.js/styles/atelier-cave-dark.css\";\n\nimport { Markdown } from \"react-bootstrap-icons\";\nimport Form, { FormProvider, useForm } from \"@miq/form\";\nimport { SectionFooter, SectionHeader, SectionBody } from \"../section-ui\";\nimport { SectionDeleteButton, SectionEditButton } from \"../section-components\";\nimport render from \"../renderers\";\n\n/**\n * MARKDOWN SECTION\n */\n\nconst MdSectionEdit = (props) => {\n    return (\n        <div className=\"\">\n            <Form.TextAreaX autoFocus clearFocus name=\"text\" placeholder=\"# Mardown is supported ...\" />\n        </div>\n    );\n};\n\nconst MdSectionPreview = (props) => {\n    if (props.context.isEdit) return <MdSectionEdit {...props} />;\n\n    return (\n        <div className=\"\">\n            <div dangerouslySetInnerHTML={{ __html: props.data.html || \"Nothing to preview\" }} />\n        </div>\n    );\n};\n\nconst MarkdownSection = forwardRef((props, ref) => {\n    const form = useForm({ text: props.data.text || \"\" });\n    const { data } = props;\n    const update = props.context.update;\n\n    const handleSave = () => {\n        if (!data) return;\n\n        const { type } = data;\n\n        update(\n            props.data.slug,\n            { type, text: form.values.text, html: render({ ...form.values, type }) },\n            { type, text: data.text }\n        ).then((res) => {\n            props.context.setEdit(false);\n        });\n    };\n\n    return (\n        <FormProvider value={form}>\n            <div id={props.id} {...{ ref }} className={getClassName([props.className, \"section-md\"])}>\n                <SectionHeader Icon={Markdown} />\n\n                <SectionBody>\n                    <MdSectionPreview {...props} />\n                </SectionBody>\n\n                <SectionFooter>\n                    <div className=\"actions\">\n                        <SectionDeleteButton {...props} label=\"Delete\" />\n\n                        <div className=\"actions-primary\">\n                            <SectionEditButton\n                                context={props.context}\n                                form={form}\n                                data={props.data}\n                                onSave={handleSave}\n                            />\n                        </div>\n                    </div>\n                </SectionFooter>\n            </div>\n        </FormProvider>\n    );\n});\n\nif (IS_DEV) {\n    MarkdownSection.displayName = \"MarkdownSection\";\n}\n\nexport default MarkdownSection;\n","import { getClassName, IS_DEV } from \"@miq/utils\";\nimport { forwardRef } from \"react\";\nimport { TextareaT } from \"react-bootstrap-icons\";\nimport { SectionDeleteButton, SectionEditButton } from \"../section-components\";\nimport { SectionBody, SectionFooter, SectionHeader } from \"../section-ui\";\n\n/**\n * TEXT SECTION\n */\n\nconst TxtSectionEdit = (props) => {\n    return <div className=\"\">TxtSectionEdit</div>;\n};\n\nconst TxtSectionPreview = (props) => {\n    if (props.context.isEdit) return <TxtSectionEdit {...props} />;\n\n    return <div className=\"\">Prev</div>;\n};\n\nconst TextSection = forwardRef((props, ref) => {\n    return (\n        <div id={props.id} {...{ ref }} className={getClassName([props.className])}>\n            <SectionHeader Icon={TextareaT} />\n\n            <SectionBody>\n                <TxtSectionPreview {...props} />\n            </SectionBody>\n\n            <SectionFooter>\n                <div className=\"actions\">\n                    <SectionDeleteButton {...props} label=\"Delete\" />\n\n                    <SectionEditButton context={props.context} />\n                </div>\n            </SectionFooter>\n        </div>\n    );\n});\n\nif (IS_DEV) {\n    TextSection.displayName = \"TextSection\";\n}\n\nexport default TextSection;\n","import React, { createContext, useRef } from \"react\";\nimport { useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./section.scss\";\n\nimport { getClassName, isRequired } from \"@miq/utils\";\n\nimport ImageSection from \"./ImageSection\";\nimport MarkdownSection from \"./MarkdownSection\";\nimport TextSection from \"./TextSection\";\nimport { sectionActions } from \"./utils\";\n\nconst getSectionComponent = (type) => {\n    switch (type) {\n        case \"MD\":\n            return MarkdownSection;\n        case \"IMG\":\n            return ImageSection;\n\n        default:\n            return TextSection;\n    }\n};\n\nexport const SectionCtx = createContext();\n\nexport default function Section(props) {\n    const { data = isRequired(\"section data props\") } = props;\n    const { slug, type } = data;\n\n    const ref = useRef();\n    const [isEdit, setEdit] = useState(props.isEdit || false);\n\n    const dispatch = useDispatch();\n\n    const context = useMemo(() => {\n        return { isEdit, setEdit, update: sectionActions.patch, remove: sectionActions.delete, dispatch };\n    }, [isEdit, dispatch]);\n\n    if (!slug) return null;\n\n    const Component = getSectionComponent(type);\n\n    return (\n        <SectionCtx.Provider value={context}>\n            <Component {...{ ...props, ref, context, className: getClassName([\"section\", isEdit && \"active\"]) }} />\n        </SectionCtx.Provider>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { isRequired } from \"@miq/utils\";\nimport Section from \"../Section\";\n\nimport { useSelector } from \"react-redux\";\nimport { sectionActions } from \"../Section/utils\";\nimport { useState } from \"react\";\n\nconst propTypes = {\n    sourceSlug: PropTypes.string.isRequired,\n    sourceData: PropTypes.object.isRequired,\n    // children: PropTypes.string.isRequired,\n};\n\nexport default function Editor({ sourceSlug = isRequired(\"source slug\"), children, ...props }) {\n    const [loading, setLoading] = useState(1);\n    const { sourceData = isRequired(\"source data\") } = props;\n\n    useEffect(() => {\n        if (!sourceSlug) return;\n\n        sectionActions.list({ source: sourceSlug }).then(() => {\n            setLoading(0);\n        });\n    }, [sourceSlug]);\n\n    const form = useForm({ label: sourceData.label || \"\" });\n\n    if (loading) return <div>Loading ...</div>;\n\n    return (\n        <>\n            <Form context={form} onSubmit={(e) => e.preventDefault()}>\n                {children}\n            </Form>\n        </>\n    );\n}\n\nconst Panel = (props) => {\n    const sections = useSelector((state) => state.sections);\n\n    if (!sections) return null;\n\n    return (\n        <div className=\"editor-panel\">\n            <div className=\"editor-content\">\n                <div className=\"editor-label\">\n                    <Form.TextAreaX name=\"label\" tabIndex={1} maxLength={250} />\n                </div>\n\n                <div className=\"editor-sections\">\n                    {sections.results.map((data) => (\n                        <Section data={data} key={data.slug} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nEditor.Panel = Panel;\n\nEditor.propTypes = propTypes;\n","import { Redirect, Route, Switch } from \"react-router\";\n\nimport \"./editor.scss\";\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pagesActions } from \"../pages/utils\";\nimport Editor from \"./Editor\";\nimport { IconNavLink } from \"@miq/components\";\nimport { ChevronLeft } from \"react-bootstrap-icons\";\n\nexport const EDITOR_PATH = \"/grio/editor/\";\nexport const PAGE_CREATE_PATH = `${EDITOR_PATH}pages/`;\n\nexport default function EditorLayout(props) {\n    const { path } = props.match;\n\n    return (\n        <div className=\"editor\">\n            <Switch>\n                <Route path={`${path}pages/:pageSlug/`} component={PageUpdateView} />\n                <Route path={`${path}pages/`} component={PageAddView} />\n                <Redirect to={PAGE_CREATE_PATH} />\n            </Switch>\n        </div>\n    );\n}\n\nconst PageAddView = (props) => {\n    return <div className=\"view\">page add</div>;\n};\n\nconst PageUpdateView = (props) => {\n    const { pageSlug } = props.match.params;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!pageSlug) return;\n\n        pagesActions.get(pageSlug).catch((err) => {});\n    }, [pageSlug]);\n\n    const page = useSelector((state) => state.pages.items)[`${pageSlug}`];\n\n    if (!page) return null;\n\n    return (\n        <Editor sourceSlug={pageSlug} sourceData={page}>\n            <div className=\"view\">\n                <section className=\"view-content\">\n                    <PageUpdateHeader {...props} {...{ pageSlug, dispatch, page }} />\n\n                    <Editor.Panel />\n                </section>\n            </div>\n        </Editor>\n    );\n};\n\nconst PageUpdateHeader = (props) => {\n    return (\n        <header className=\"view-header\">\n            <IconNavLink label=\"Pages\" Icon={ChevronLeft} to=\"/grio/pages/\" />\n        </header>\n    );\n};\n","import axios from \"axios\";\nimport { isDate } from \"lodash\";\n\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\n\nexport const DOMAIN = IS_DEV ? `http://127.0.0.1:8000` : `${window.location.origin}`;\n\n// AXIOS\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.headers[\"Content-Type\"] = \"text/html; charset=UTF-8\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport const HTTP = axios.create({\n    baseURL: DOMAIN,\n    timeout: 3000,\n    withCredentials: true, // To enable cookies\n    headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n    onUploadProgress: (progressEvt) => {\n        // console.log(Math.round(progressEvt.loaded / progressEvt.total * 100) + '%')\n    },\n});\n\n// DATE HELPERS\n\nexport const formatDate = (date, format = { weekday: \"short\", month: \"long\", day: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", {\n        ...format,\n        //    weekday: \"short\",\n        //    month: \"long\",\n        //    day: \"numeric\",\n        // hour: \"numeric\",\n        // minute: \"numeric\",\n        // year: 'numeric',\n    });\n    return date_time.format(new Date(date));\n};\n\nexport const formatDateToStr = (date) => {\n    if (!isDate(date)) return \"\";\n\n    var dd = date.getDate();\n    var mm = date.getMonth() + 1; //January is 0!\n    var yyyy = date.getFullYear();\n\n    if (dd < 10) {\n        dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n        mm = \"0\" + mm;\n    }\n\n    return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nexport const formatTime = (date, format = { hour: \"numeric\", minute: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", { ...format });\n    return date_time.format(new Date(date));\n};\n\n// HELPERS\n\nexport const getSharedData = () =>\n    new Promise(async (resolve, reject) => {\n        let sharedData = document.getElementById(\"sharedData\");\n\n        if (!sharedData && IS_DEV) {\n            // This will not run in production\n            console.log(`Getting page shared data in ${process.env.NODE_ENV} mode`);\n\n            const base = new URL(window.location.href);\n            const path = `${base.pathname}${base.search}`;\n\n            let res;\n            try {\n                res = await HTTP.get(path);\n            } catch (err) {\n                return reject(err);\n            }\n\n            if (!res || res.status !== 200) return reject(\"No data\");\n\n            if (res.headers[\"content-type\"].includes(\"text\")) {\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(res.data, \"text/html\");\n                sharedData = doc.getElementById(\"sharedData\");\n            }\n        }\n        if (sharedData) {\n            return resolve(JSON.parse(sharedData.textContent));\n        }\n\n        return resolve({});\n    });\n\nexport const getClassName = (df = []) => {\n    let className;\n    if (Array.isArray(df)) {\n        className = df\n            .map((i) => i && `${i}`)\n            .filter(Boolean)\n            .join(\" \");\n    }\n    return className;\n};\n\nexport const getImgUrl = (src) => {\n    if (IS_DEV && src) {\n        const domain = new URL(DOMAIN);\n        if (!src.includes(\"http\")) {\n            src = `${domain.origin}${src}`;\n        }\n    }\n    return src;\n};\n\nexport const addForwardSlash = (str = isRequired(\"string param\")) =>\n    str.endsWith(\"/\") ? str : `${str}/`;\n\nexport const isRequired = (name = \"Param\") => {\n    throw new Error(`${name} is required`);\n};\n"],"sourceRoot":""}