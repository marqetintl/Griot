{"version":3,"sources":["../../../../../packages/miq-dms/src/document/ReadOnlyView.jsx","../../../../../packages/miq-dms/src/document/utils.jsx","../../../../../packages/miq-dms/src/docufile/FileGrid.jsx"],"names":["DocumentReadOnlyView","props","docSlug","match","params","useState","doc","setDoc","setError","useEffect","docServices","get","then","data","catch","err","id","className","title","actions","users_data","map","user","UserAvatar","slug","style","fontWeight","reference","formatDate","created","month","day","year","description","items","files_data","initials","path","list","getService","API","this","listPage","url","post","values","services","patch","oldValues","archive","delete","patchUserPermission","user_slug","permission","getStaffList","q","patchUser","Object","keys","includes","Promise","reject","getIcon","file","ext","Icon","Icons","getFileIcon","DocuFileGrid","name","name_truncated","size"],"mappings":"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","file":"static/js/6.ff0083b4.chunk.js","sourcesContent":["import { AdminView } from \"@miq/admin\";\nimport { useEffect, useState } from \"react\";\n\nimport { formatDate } from \"@miq/utils\";\n\nimport DocuFileGrid from \"../docufile/FileGrid\";\nimport { docServices } from \"./utils\";\n\nexport default function DocumentReadOnlyView(props) {\n    const { docSlug } = props.match.params;\n\n    const [doc, setDoc] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        docServices\n            .get(docSlug)\n            .then((data) => {\n                setDoc(data);\n            })\n            .catch((err) => setError(\"Error\"));\n    }, []);\n\n    if (!doc) return null;\n\n    return (\n        <AdminView\n            id=\"DocumentReadOnlyView\"\n            className=\"document-readonly-view\"\n            title={doc.title}\n            actions={\n                <>\n                    <div className=\"miq-user-avatar-group\">\n                        <div className=\"miq-user-avatar count\">+6</div>\n\n                        {doc.users_data.map((user) => (\n                            <UserAvatar user={user} key={user.slug} />\n                        ))}\n                    </div>\n                </>\n            }\n        >\n            <div className=\"d-flex justify-content-between mb-2\">\n                <div className=\"\">\n                    Reference <span style={{ fontWeight: \"600\" }}>{doc.reference}</span>\n                </div>\n\n                <div className=\"text-muted fs-sm\">\n                    {formatDate(doc.created, { month: \"long\", day: \"numeric\", year: \"numeric\" }, \"fr\")}\n                </div>\n            </div>\n\n            <div className=\"mb-4\">{doc.description}</div>\n\n            {/*  */}\n            <DocuFileGrid items={doc.files_data} />\n\n            <div className=\"\">Voir les commentaires</div>\n        </AdminView>\n    );\n}\n\nconst UserAvatar = ({ user, ...props }) => {\n    if (!user) return null;\n    return <div className=\"miq-user-avatar\">{user.initials}</div>;\n};\n","import { API, services } from \"@miq/admin\";\nimport { getService } from \"@miq/utils\";\nimport { addOrUpdateArrayObject } from \"@miq/utils\";\n\nexport const docServices = {\n    path: \"documents/\",\n\n    /**\n     * DOCUMENT\n     */\n\n    list(params) {\n        return getService(API, this.path, params);\n    },\n    listPage(url) {\n        return getService(API, url);\n    },\n    get(docSlug, params) {\n        return getService(API, `${this.path}${docSlug}/`, params);\n    },\n    post(values) {\n        return services.post(`${this.path}`, values);\n    },\n    patch(docSlug, values, oldValues) {\n        return services.patch(`${this.path}${docSlug}/`, values, oldValues);\n    },\n    archive(docSlug) {\n        return services.get(`${this.path}${docSlug}/archive/`);\n    },\n    delete(docSlug) {\n        return services.delete(`${this.path}${docSlug}/`);\n    },\n\n    /**\n     * USER\n     */\n\n    patchUserPermission(docSlug, user_slug, permission) {\n        return services.post(`${this.path}${docSlug}/permission/`, { user_slug, permission });\n    },\n\n    getStaffList(q) {\n        return services.get(\"search-staff/\", { q });\n    },\n\n    patchUser(docSlug, values) {\n        if (!Object.keys(values).includes(\"action\")) {\n            return Promise.reject(\"Action required\");\n        }\n\n        return services.post(`${this.path}${docSlug}/users/`, values);\n    },\n};\n\nexport const docsReducer = (state = { results: [] }, action) => {\n    const { type, payload = {} } = action;\n    let results;\n\n    switch (type) {\n        case \"SET_DOCS\":\n            return { ...payload };\n\n        case \"APPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"ADD_UPDATE_DOC\":\n        case \"PREPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_DOC\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n","import { Icons, Button, ImgSquare } from \"@miq/components\";\n\nimport \"./docufile-grid.scss\";\n\nconst getIcon = (file) => {\n    switch (file.ext) {\n        case \".jpg\":\n        case \".jpeg\":\n        case \".png\":\n            return <ImgSquare {...file} />;\n\n        default:\n            const Icon = Icons.getFileIcon(file.ext);\n            return <Icon className=\"icon mb-1\" />;\n    }\n};\n\nexport default function DocuFileGrid({ items = [], ...props }) {\n    return (\n        <div className=\"docufile-grid\">\n            {items.map((file) => {\n                return (\n                    <Button title={file.name} className=\"docufile-btn\" key={file.slug}>\n                        {getIcon(file)}\n\n                        <div className=\"text-center\">\n                            <span className=\"label d-block\">{file.name_truncated}</span>\n                            <span className=\"size d-block\">{file.size}</span>\n                        </div>\n                    </Button>\n                );\n            })}\n        </div>\n    );\n}\n"],"sourceRoot":""}