{"version":3,"sources":["../../../grio-adminjs/src/utils.jsx","../../../../../packages/miq-shared/src/components/Modal/index.jsx","../../../../../packages/miq-shared/src/components/Image/index.jsx","../../../../../packages/miq-shared/src/components/buttons.jsx","../../../../../packages/miq-shared/src/admin/src/views/index.jsx","../../../../../packages/miq-shared/src/admin/src/index.jsx","../../../grio-adminjs/src/editor/Section/utils.jsx","../../../../../packages/miq-shared/src/contexts/index.jsx","../../../grio-adminjs/src/Dashboard/index.jsx","../../../grio-adminjs/src/AdminLayout/index.jsx","../../../grio-adminjs/src/index.jsx","../../../grio-adminjs/src/pages/utils.jsx","reportWebVitals.js","index.jsx","../../../../../packages/miq-shared/src/components/inputs/TextareaX/index.jsx","../../../../../packages/miq-shared/src/form/FormCtx.jsx","../../../../../packages/miq-shared/src/form/TextInput.jsx","../../../../../packages/miq-shared/src/form/useForm.jsx","../../../../../packages/miq-shared/src/form/index.jsx","../../../grio-adminjs/src/editor/Section/section-components.jsx","../../../grio-adminjs/src/editor/Section/section-ui.jsx","../../../grio-adminjs/src/editor/Section/ImageSection/index.jsx","../../../grio-adminjs/src/editor/Section/renderers.jsx","../../../grio-adminjs/src/editor/Section/MarkdownSection/index.jsx","../../../grio-adminjs/src/editor/Section/TextSection/index.jsx","../../../grio-adminjs/src/editor/Section/index.jsx","../../../grio-adminjs/src/editor/Editor/index.jsx","../../../grio-adminjs/src/editor/index.jsx","../../../../../packages/miq-shared/src/utils/index.jsx","../../../grio-adminjs/src/documents/utils.jsx","../../../grio-adminjs/src/actions.jsx"],"names":["ENDPOINT","DOMAIN","process","axios","defaults","xsrfCookieName","xsrfHeaderName","headers","post","API","create","baseURL","timeout","withCredentials","addOrUpdateArrayObject","arr","obj","key","append","arrKey","map","i","includes","Portal","children","ReactDOM","createPortal","document","body","Modal","id","header","footer","fullscreen","className","getClassName","propTypes","PropTypes","node","isRequired","Img","props","Icon","src","rest","getImgUrl","alt","alt_text","ImgPlaceholderDiv","ImgIcon","xmlns","width","height","fill","viewBox","d","IconButton","label","maxSize","title","type","IconNavLink","to","ViewHeader","actions","View","Views","List","sidebar","Sidebar","SidebarHeader","Admin","Layout","Main","role","MobileNavbar","SidebarBody","path","sectionActions","list","params","get","sectSlug","values","patch","oldValues","delete","initialState","sections","results","sectionsReducer","state","action","payload","filter","slug","SharedDataCtx","createContext","SharedDataProvider","useState","isLoaded","value","setValue","window","location","href","useEffect","getSharedData","then","data","catch","err","console","log","Provider","Dashboard","DocumentRoutes","lazy","PagesLayout","SettingsLayout","AdminLayout","ctx","useContext","match","fallback","component","SidebarFooter","Gear","site","name","exact","House","Bookmark","Files","PersonBadge","NavItem","MobileNav","reducers","docs","docsReducer","pages","pagesReducer","EditorLayout","Fallback","storeReducer","combineReducers","middleware","thunk","enhancers","applyMiddleware","IS_DEV","__REDUX_DEVTOOLS_EXTENSION__","f","reduxStore","createStore","compose","Grio","store","EDITOR_PATH","items","pagesActions","this","pageSlug","postSection","forEach","item","getPageUpdatePath","PAGE_CREATE_PATH","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","getElementById","render","StrictMode","TextareaX","forwardRef","require","ref","clearFocus","onChange","placeholder","style","FormCtx","FormProvider","withInput","Component","args","checked","Object","keys","handleChange","TextInput","string","required","bool","disabled","CheckboxInput","any","TextArea","TextAreaX","displayName","useForm","defaultValues","setValues","errors","setErrors","toggleCheck","e","target","Form","context","SectionAddButton","sourceSlug","onClick","SectionSaveButton","form","ArrowUpCircle","shouldSave","text","setEdit","isEdit","onSave","SectionDeleteButton","Trash","remove","SectionEditButton","Eye","PencilSquare","SectionBody","SectionHeader","SectionFooter","ImgUploadButton","UploadTab","tab","LibraryTab","UnsplashTab","ImgSectionEdit","setTab","ImgSectionPreview","image","CloudArrowUp","ImageSection","ImageIcon","marked","setOptions","renderer","Renderer","highlight","code","lang","hljs","language","getLanguage","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","MdSectionEdit","autoFocus","MdSectionPreview","dangerouslySetInnerHTML","__html","html","MarkdownSection","update","Markdown","res","TxtSectionEdit","TxtSectionPreview","TextSection","TextareaT","SectionCtx","Section","useRef","dispatch","useDispatch","useMemo","getSectionComponent","Editor","loading","setLoading","sourceData","source","onSubmit","preventDefault","Panel","useSelector","tabIndex","maxLength","PageUpdateView","PageAddView","page","PageUpdateHeader","ChevronLeft","origin","HTTP","onUploadProgress","progressEvt","formatDate","date","format","weekday","month","day","locale","date_time","Intl","DateTimeFormat","Date","Promise","resolve","reject","a","sharedData","base","URL","pathname","search","status","parser","DOMParser","doc","parseFromString","JSON","parse","textContent","df","Array","isArray","Boolean","join","domain","addForwardSlash","str","endsWith","Error","docActions","docSlug","file","length","fd","FormData","request","isString","config","isEqual","isUpdated","deleted"],"mappings":"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","file":"static/js/main.ab2b623b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { DOMAIN } from \"@miq/utils\";\n\nexport const ENDPOINT = `${DOMAIN}${process.env.REACT_APP_API_ENDPOINT}`;\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n// axios.defaults.headers[\"Content-Type\"] = \"text/html; charset=UTF-8\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport const API = axios.create({\n    baseURL: ENDPOINT,\n    timeout: 3000,\n    withCredentials: true,\n    // headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n    headers: {\n        \"Content-type\": \"application/json\",\n    },\n    // onUploadProgress: (progressEvt) => {},\n});\n\nexport function addOrUpdateArrayObject(arr, obj, key = \"slug\", append = false) {\n    const arrKey = arr.map((i) => i[key]);\n\n    if (!arrKey.includes(obj[key])) {\n        if (append) return [...arr, obj];\n        return [obj, ...arr];\n    }\n\n    return arr.map((i) => {\n        if (i[key] === obj[key]) return obj;\n        return i;\n    });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { getClassName } from \"@miq/utils\";\n\nimport \"./modal.scss\";\n\nexport const Portal = ({ children }) => {\n    return ReactDOM.createPortal(children, document.body);\n};\n\nPortal.Modal = Modal;\nPortal.propTypes = { children: PropTypes.node.isRequired };\n\nexport default function Modal({ id, header, children, footer, fullscreen }) {\n    return (\n        <div id={id} className=\"modal-container\">\n            <div className=\"modal-background\" />\n            <div className=\"modal-inner\">\n                <div className=\"modal-content\">\n                    <div\n                        className={getClassName([\n                            \"modal-content-inner\",\n                            fullscreen && \"modal-content-inner-fullscreen\",\n                        ])}\n                    >\n                        {header && <div className=\"modal-header\">{header}</div>}\n                        <div className=\"modal-body\">{children}</div>\n                        {footer && <div className=\"modal-footer\">{footer}</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nModal.propTypes = {\n    id: PropTypes.string,\n    fullscreen: PropTypes.bool,\n\n    header: PropTypes.node,\n    children: PropTypes.node.isRequired,\n    footer: PropTypes.node,\n};\n","import React from \"react\";\nimport { getClassName, getImgUrl } from \"@miq/utils\";\n\nimport \"./image.scss\";\n\n/**\n * IMAGE\n */\n\nexport default function Img(props) {\n    let { Icon, src, ...rest } = props;\n    if (!src) return <ImgPlaceholderDiv {...props} {...{ Icon }} />;\n\n    src = getImgUrl(src);\n\n    return <img {...rest} src={src} alt={props.alt_text || \"\"} />;\n}\n\n/**\n * IMAGE PLACEHOLDER\n */\n\nexport const ImgPlaceholderDiv = (props) => {\n    let { Icon = ImgIcon, ...rest } = props;\n\n    return (\n        <div {...rest} className={getClassName([\"img-placeholder\", rest.className])}>\n            <Icon className=\"icon\" />\n        </div>\n    );\n};\n\nconst ImgIcon = (props) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 16 16\"\n        {...props}\n    >\n        <path d=\"M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\n        <path d=\"M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z\" />\n    </svg>\n);\n","import PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { getClassName } from \"@miq/utils\";\n\nimport \"./buttons.scss\";\n\nconst propTypes = {\n    label: PropTypes.string,\n    title: PropTypes.string,\n    maxSize: PropTypes.number,\n    Icon: PropTypes.object.isRequired,\n};\n\nexport const IconButton = ({ Icon, label, ...props }) => {\n    const { maxSize, ...rest } = props;\n    if (!Icon) return null;\n\n    return (\n        <button title={label} type=\"button\" {...rest} className={getClassName([\"btn btn-icon\", props.className])}>\n            <Icon className=\"icon\" height={maxSize} width={maxSize} />\n            {label && <span className=\"label\">{label}</span>}\n        </button>\n    );\n};\nIconButton.propTypes = propTypes;\n\nexport const IconNavLink = ({ Icon, label, ...props }) => {\n    if (!Icon || !props.to) return null;\n\n    return (\n        <NavLink {...props} className={getClassName([\"btn btn-icon\", props.className])}>\n            <Icon className=\"icon\" />\n            {label && <span className=\"label\">{label}</span>}\n        </NavLink>\n    );\n};\nIconNavLink.propTypes = propTypes;\n","import { getClassName } from \"@miq/utils\";\n\nimport \"./views.scss\";\n\n/**\n * LIST VIEW\n * @param {*} props\n * @returns\n */\n\nconst ListView = ({ children, ...props }) => {\n    if (children) return <View {...props} {...{ children }} />;\n\n    return <View {...props} className={getClassName([\"miq-view-list\", props.className])}></View>;\n};\n\n/**\n * BASE LAYOUT\n * @param {*} props\n * @returns\n */\n\nconst ViewHeader = (props) => {\n    const { header, title, actions } = props;\n\n    if (!header) return null;\n\n    return (\n        <header className=\"miq-view-header\">\n            <div className=\"miq-view-header-inner\">\n                <div className=\"miq-view-title\">{title && <h2>{title}</h2>}</div>\n\n                {actions && <section className=\"miq-view-actions\">{actions}</section>}\n            </div>\n        </header>\n    );\n};\n\nconst View = ({ children, ...props }) => {\n    const { title, actions, ...rest } = props;\n    const header = title || actions;\n    return (\n        <div {...rest} className={getClassName([\"miq-view\", props.className])}>\n            <ViewHeader {...{ title, actions, header }} />\n\n            {children}\n        </div>\n    );\n};\n\nconst Views = { View, List: ListView };\n\nexport default Views;\n","import { getClassName } from \"@miq/utils\";\n\nimport \"./index.scss\";\n\n/**\n * SIDEBAR\n */\n\nconst SidebarBody = ({ children, footer, ...props }) => {\n    return (\n        <section {...props} className={getClassName([\"miq-admin-aside-body\", props.className])}>\n            <div className=\"miq-admin-aside-body-content\">{children}</div>\n            {footer && <div className=\"miq-admin-aside-body-footer\">{footer}</div>}\n        </section>\n    );\n};\n\nconst sidebar = {\n    /**\n     *\n     * @param {*} param0\n     * @returns\n     */\n    Sidebar({ children, ...props }) {\n        return (\n            <nav {...props} className={getClassName([\"miq-admin-aside\", props.className])}>\n                {children}\n            </nav>\n        );\n    },\n    SidebarHeader({ children, ...props }) {\n        return (\n            <header {...props} className={getClassName([\"miq-admin-aside-header\", props.className])}>\n                {children}\n            </header>\n        );\n    },\n};\n\n/**\n * ADMIN\n */\n\nconst Admin = {\n    Layout({ children, ...props }) {\n        return (\n            <div {...props} className={getClassName([\"miq-admin\", props.className])}>\n                {children}\n            </div>\n        );\n    },\n    Main({ children, ...props }) {\n        return (\n            <main {...props} className={getClassName([\"miq-admin-main\", props.className])} role=\"main\">\n                <section className=\"container\">{children}</section>\n            </main>\n        );\n    },\n\n    MobileNavbar({ children, ...props }) {\n        return (\n            <nav {...props} className={getClassName([\"miq-admin-mobile-nav\", props.className])}>\n                {children}\n            </nav>\n        );\n    },\n    ...sidebar,\n    SidebarBody,\n};\n\n/**\n * EXPORTS\n */\n\nexport { default as Views } from \"./views\";\nexport default Admin;\n","import actions from \"../../actions\";\nimport { addOrUpdateArrayObject } from \"../../utils\";\n\nconst path = `sections/`;\nexport const sectionActions = {\n    list(params) {\n        return actions.get(path, params, \"SET_SECTIONS\");\n    },\n    get(sectSlug, params, type = \"PREPEND_SECTION\") {\n        return actions.get(`${path}${sectSlug}/`, params, type);\n    },\n    post(values, type = \"PREPEND_SECTION\") {\n        return actions.post(`${path}`, values, type);\n    },\n    patch(sectSlug, values, oldValues) {\n        return actions.patch(`${path}${sectSlug}/`, values, oldValues, \"UPDATE_SECTION\");\n    },\n    delete(sectSlug) {\n        return actions.delete(`${path}${sectSlug}/`, sectSlug, \"REMOVE_SECTION\");\n    },\n};\n\nconst initialState = { sections: { results: [] } };\n\nexport const sectionsReducer = (state = initialState.sections, action) => {\n    const { type, payload = {} } = action;\n    let { results } = payload;\n\n    switch (type) {\n        case \"SET_SECTIONS\":\n            return { ...payload };\n\n        case \"APPEND_SECTION\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"PREPEND_SECTION\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"UPDATE_SECTION\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_SECTION\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n","import { useEffect, useState, createContext } from \"react\";\nimport { getSharedData } from \"@miq/utils\";\n\nexport const SharedDataCtx = createContext();\n\nexport const SharedDataProvider = ({ children }) => {\n    const [value, setValue] = useState({ isLoaded: false });\n\n    const path = window.location.href;\n\n    useEffect(() => {\n        // setValue({ isLoaded: false });\n\n        getSharedData()\n            .then((data) => {\n                setValue({ ...data, isLoaded: true });\n            })\n            .catch((err) => {\n                setValue({ isLoaded: false });\n                console.log(err);\n            });\n    }, [path]);\n\n    return <SharedDataCtx.Provider value={value}>{children}</SharedDataCtx.Provider>;\n};\n\nSharedDataProvider.propTypes = {\n    // children: PropTypes.arrayOf([PropTypes.node]).isRequired,\n};\n","import { Views } from \"@miq/admin\";\n\nexport default function Dashboard(props) {\n    return <Views.View title=\"Dashboard\">Welcome</Views.View>;\n}\n","import { lazy, Suspense, useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { House, Gear, Files, Bookmark, PersonBadge } from \"react-bootstrap-icons\";\n\nimport Admin from \"@miq/admin\";\nimport { IconNavLink } from \"@miq/components\";\nimport { SharedDataCtx } from \"@miq/contexts\";\nimport { Fallback } from \"../index\";\nimport Dashboard from \"../Dashboard\";\n\nimport \"./admin-layout.scss\";\n\nconst DocumentRoutes = lazy(() => import(\"../documents\"));\nconst PagesLayout = lazy(() => import(\"../pages\"));\nconst SettingsLayout = lazy(() => import(\"../settings\"));\n\nexport default function AdminLayout(props) {\n    const ctx = useContext(SharedDataCtx);\n    const { path } = props.match;\n\n    if (!ctx) return null;\n    if (!ctx.isLoaded) return <Fallback />;\n\n    return (\n        <Admin.Layout>\n            <Sidebar {...props} {...{ path, ctx }} />\n\n            <Admin.Main className=\"grio-main\">\n                <Suspense fallback={<Fallback />}>\n                    <Switch>\n                        <Route path={`${path}documents/`} component={DocumentRoutes} />\n                        <Route path={`${path}pages/`} component={PagesLayout} />\n                        <Route path={`${path}settings/`} component={SettingsLayout} />\n                        <Route path={`${path}`} component={Dashboard} />\n                    </Switch>\n                </Suspense>\n            </Admin.Main>\n\n            <MobileNav />\n        </Admin.Layout>\n    );\n}\n\nexport const SidebarFooter = (props) => {\n    return (\n        <>\n            <NavItem to={`${props.path}settings/`} label=\"Settings\" Icon={Gear} />\n        </>\n    );\n};\n\nexport const Sidebar = (props) => {\n    const { path, ctx = {} } = props;\n\n    return (\n        <Admin.Sidebar id=\"AdminNav\" className=\"grio-nav\">\n            <Admin.SidebarHeader>\n                <h1>{ctx.site.name}</h1>\n            </Admin.SidebarHeader>\n\n            <Admin.SidebarBody footer={<SidebarFooter {...{ path }} />}>\n                <NavItem exact to={\"/grio/\"} label=\"Dashboard\" Icon={House} />\n\n                <div className=\"grio-nav-items\">\n                    <NavItem to={`${path}documents/`} label=\"Documents\" Icon={Bookmark} />\n                </div>\n\n                <NavItem to={`${path}pages/`} label=\"Pages\" Icon={Files} />\n                <NavItem to={`${path}staff/`} label=\"Staff\" Icon={PersonBadge} />\n            </Admin.SidebarBody>\n        </Admin.Sidebar>\n    );\n};\n\nconst NavItem = (props) => {\n    return (\n        <div className=\"grio-nav-item\">\n            <IconNavLink {...props} className=\"grio-nav-link\" />\n        </div>\n    );\n};\n\nexport const MobileNav = (props) => {\n    return <Admin.MobileNavbar className=\"grio-mobile-nav\">Mobile</Admin.MobileNavbar>;\n};\n","import thunk from \"redux-thunk\";\nimport { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport \"./scss/main.scss\";\n\nimport { SharedDataProvider } from \"@miq/contexts\";\nimport { IS_DEV } from \"@miq/utils\";\n\nimport { EDITOR_PATH } from \"./editor\";\nimport AdminLayout from \"./AdminLayout\";\nimport { pagesReducer } from \"./pages/utils\";\nimport { docsReducer } from \"./documents/utils\";\n\nimport { sectionsReducer } from \"./editor/Section/utils\";\n\nexport const initialState = {};\n\nconst reducers = { docs: docsReducer, pages: pagesReducer, sections: sectionsReducer };\n\nconst EditorLayout = lazy(() => import(\"./editor\"));\nexport const Fallback = (props) => <div>Loading ...</div>;\n\nconst storeReducer = combineReducers({ ...reducers });\n\nconst middleware = [thunk];\nlet enhancers = [applyMiddleware(...middleware)];\nif (IS_DEV) {\n    enhancers = [...enhancers, window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f];\n}\n\nexport const reduxStore = createStore(storeReducer, initialState, compose(...enhancers));\n\nexport default function Grio(props) {\n    return (\n        <SharedDataProvider>\n            <ReduxProvider store={reduxStore}>\n                <div id=\"Grio\">\n                    <Suspense fallback={<Fallback />}>\n                        <Switch>\n                            <Route path={`${EDITOR_PATH}`} component={EditorLayout} />\n                            <Route component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </div>\n            </ReduxProvider>\n        </SharedDataProvider>\n    );\n}\n","import actions from \"../actions\";\nimport { PAGE_CREATE_PATH } from \"../editor\";\n\nconst initialState = { results: [], items: {} };\n\nexport const pagesActions = {\n    path: \"pages/\",\n\n    list(params) {\n        return actions.get(this.path, params, \"SET_PAGES\");\n    },\n    get(pageSlug, params) {\n        return actions.get(`${this.path}${pageSlug}/`, params, \"ADD_UPDATE_PAGE\");\n    },\n    post(values) {\n        return actions.post(`${this.path}`, values, \"ADD_UPDATE_PAGE\");\n    },\n    patch(pageSlug, values, oldValues) {\n        return actions.patch(`${this.path}${pageSlug}/`, values, oldValues);\n    },\n    postSection(pageSlug, values) {\n        return actions.post(`${this.path}${pageSlug}/section/`, values, \"APPEND_SECTION\");\n    },\n    delete(pageSlug) {\n        return actions.delete(`${this.path}${pageSlug}/`, pageSlug, \"REMOVE_PAGE\");\n    },\n};\n\nexport const pagesReducer = (state = initialState, action) => {\n    const { type, payload = {} } = action;\n    let items;\n\n    switch (type) {\n        case \"SET_PAGES\":\n            const { results, ...rest } = payload;\n            state = { ...rest };\n\n            if (results) {\n                items = {};\n\n                results.forEach((item) => {\n                    items[`${item.slug}`] = item;\n                });\n                state = { ...state, items };\n            }\n            return state;\n\n        case \"ADD_UPDATE_PAGE\":\n            items = { ...state.items, [payload.slug]: payload };\n            return { ...state, items };\n\n        case \"REMOVE_PAGE\":\n            items = state.items;\n            delete items[payload.slug];\n            return { ...state, items };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport const getPageUpdatePath = (slug) => `${PAGE_CREATE_PATH}${slug}/`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Admin from \"@grio/admin\";\n\nimport \"./index.scss\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = document.getElementById(\"root\");\n\nif (root) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Switch>\n                    {/* /grio/ */}\n                    <Route path=\"/grio/\" component={Admin} />\n                </Switch>\n            </BrowserRouter>\n        </React.StrictMode>,\n        root\n    );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import PropTypes from \"prop-types\";\n\nimport \"./textareax.scss\";\nimport { getClassName } from \"@miq/utils\";\n\nconst { forwardRef } = require(\"react\");\n\nconst propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    ref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.any })]),\n\n    value: PropTypes.string,\n    required: PropTypes.bool,\n\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onKeyUp: PropTypes.func,\n\n    style: PropTypes.object,\n    placeholder: PropTypes.string,\n    clearFocus: PropTypes.bool,\n};\n\nconst TextareaX = forwardRef((props, ref) => {\n    const { id, clearFocus, value, onChange, placeholder = \"Start typing ...\", ...rest } = props;\n    const style = props.style;\n\n    return (\n        <div id={id} className={getClassName([\"textareax\", clearFocus && \"clear-focus\"])}>\n            <span className=\"textareax-mirror\" {...{ style }}>{`${value}\\n`}</span>\n\n            <div className=\"textareax-input\">\n                <textarea {...rest} {...{ value, onChange, placeholder, style }} ref={ref} />\n            </div>\n        </div>\n    );\n});\n\nTextareaX.propTypes = propTypes;\n\nexport default TextareaX;\n","import { createContext } from \"react\";\n\nconst FormCtx = createContext(null);\n\nexport const FormProvider = FormCtx.Provider;\n\nexport default FormCtx;\n","import React, { forwardRef, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextareaX from \"../components/inputs/TextareaX\";\nimport { getClassName, isRequired, IS_DEV } from \"@miq/utils\";\nimport FormCtx from \"./FormCtx\";\n\nconst withInput = (Component, args = {}) => {\n    return forwardRef((props, ref) => {\n        props = { ...args, ...props };\n        const ctx = useContext(FormCtx) || isRequired(\"FormCtx\");\n        const { name = isRequired(\"name prop\") } = props;\n        let { value, checked, onChange } = props;\n\n        if (Object.keys(ctx.values).includes(name)) {\n            if (props.type === \"checkbox\") checked = ctx.values[name];\n            else value = ctx.values[name];\n        }\n\n        onChange = onChange || ctx.handleChange;\n\n        return (\n            <Component\n                {...props}\n                className={getClassName([args.className, props.className])}\n                {...{ value, checked, onChange }}\n                ref={ref}\n            />\n        );\n    });\n};\n\nexport const TextInput = withInput(\"input\", { className: \"input\" });\nTextInput.propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n};\n\nexport const CheckboxInput = withInput(\"input\", {\n    type: \"checkbox\",\n    className: \"input input-checkbox\",\n});\n\nCheckboxInput.propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    value: PropTypes.any,\n    checked: PropTypes.bool,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n};\n\nexport const TextArea = withInput(\"textarea\", { className: \"textarea\" });\nexport const TextAreaX = withInput(TextareaX);\n\nif (IS_DEV) {\n    TextInput.displayName = \"TextInput\";\n    CheckboxInput.displayName = \"CheckboxInput\";\n\n    TextArea.displayName = \"TextArea\";\n    TextAreaX.displayName = \"TextAreaX\";\n}\n","import { useState } from \"react\";\n\nexport default function useForm(defaultValues = {}) {\n    const [values, setValues] = useState({ ...defaultValues });\n    const [errors, setErrors] = useState({});\n\n    const setValue = (key, value) => {\n        setValues({ ...values, [key]: value });\n    };\n\n    const toggleCheck = (e) => {\n        const { name } = e.target;\n        return setValue(name, !values[name]);\n    };\n\n    const handleChange = (e) => {\n        switch (e.target.type) {\n            case \"checkbox\":\n                return toggleCheck(e);\n\n            default:\n                return setValue(e.target.name, e.target.value);\n        }\n    };\n    return { values, handleChange, toggleCheck, setValue, setValues, errors, setErrors };\n}\n","import { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./form.scss\";\nimport { TextArea, TextAreaX, TextInput, CheckboxInput } from \"./TextInput\";\nimport { FormProvider } from \"./FormCtx\";\n\nconst propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n\n    children: PropTypes.node,\n    context: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func,\n};\n\nconst Form = forwardRef(({ children, context, ...props }, ref) => {\n    return (\n        <FormProvider value={context}>\n            <form {...props} ref={ref}>\n                {children}\n            </form>\n        </FormProvider>\n    );\n});\n\nForm.TextInput = TextInput;\nForm.CheckboxInput = CheckboxInput;\nForm.TextArea = TextArea;\nForm.TextAreaX = TextAreaX;\n\nForm.propTypes = propTypes;\n\nexport default Form;\nexport { default as useForm } from \"./useForm\";\nexport { default as FormCtx, FormProvider } from \"./FormCtx\";\n","import { ArrowUpCircle, Eye, PencilSquare, Trash } from \"react-bootstrap-icons\";\n\nimport { IconButton } from \"@miq/components\";\nimport { isRequired } from \"@miq/utils\";\nimport { pagesActions } from \"../../pages/utils\";\n\nexport const SectionAddButton = (props) => {\n    const { sourceSlug = isRequired(\"section source slug\"), type = isRequired(\"section type\") } = props;\n\n    const handleCreate = () => {\n        pagesActions.postSection(sourceSlug, { type });\n    };\n\n    return <button onClick={handleCreate}>Add {type}</button>;\n};\n\nexport const SectionSaveButton = (props) => {\n    const { context = isRequired(\"section context\") } = props;\n    const { form = isRequired(\"form context\") } = props;\n    const { data = isRequired(\"section data\") } = props;\n\n    const handleSave = (e) => {\n        const shouldSave = data.text !== form.values.text;\n        console.log(\"Saving\", shouldSave);\n\n        if (!shouldSave) return context.setEdit(!context.isEdit);\n        if (!props.onSave) return;\n\n        props.onSave();\n    };\n\n    return <IconButton Icon={ArrowUpCircle} label=\"Save\" className=\"section-btn\" title=\"Save\" onClick={handleSave} />;\n};\n\nexport const SectionDeleteButton = (props) => {\n    console.log(props);\n    const { context = isRequired(\"section context\") } = props;\n    const { data = isRequired(\"section data\") } = props;\n\n    return (\n        <IconButton\n            {...props}\n            Icon={Trash}\n            className=\"section-btn btn-danger\"\n            title=\"Delete\"\n            onClick={() => context.remove(data.slug)}\n        />\n    );\n};\n\nexport const SectionEditButton = (props) => {\n    const { context = isRequired(\"section context\") } = props;\n    const { isEdit } = context;\n\n    if (isEdit) return <SectionSaveButton {...props} />;\n\n    return (\n        <IconButton\n            Icon={isEdit ? Eye : PencilSquare}\n            className=\"section-btn\"\n            title={isEdit ? \"Preview Mode\" : \"Edit Mode\"}\n            onClick={() => context.setEdit(!isEdit)}\n        />\n    );\n};\n","import { getClassName } from \"@miq/utils\";\n\nexport const SectionBody = ({ children, id, className }) => (\n    <div id={id} className={getClassName([\"section-body\", className])}>\n        {children}\n    </div>\n);\n\nexport const SectionHeader = ({ children, Icon, id, className }) => (\n    <div id={id} className={getClassName([\"section-header\", className])}>\n        {Icon && (\n            <div className=\"\">\n                <Icon className=\"icon\" />\n            </div>\n        )}\n\n        {children}\n    </div>\n);\n\nexport const SectionFooter = ({ children, id, className }) => (\n    <div id={id} className={getClassName([\"section-footer\", className])}>\n        {children}\n    </div>\n);\n","import { forwardRef, useState } from \"react\";\nimport { CloudArrowUp, Image as ImageIcon } from \"react-bootstrap-icons\";\n\nimport { IconButton, Img } from \"@miq/components\";\nimport { getClassName, IS_DEV } from \"@miq/utils\";\n\nimport { SectionDeleteButton } from \"../section-components\";\nimport { SectionBody, SectionFooter, SectionHeader } from \"../section-ui\";\n\n/**\n * IMAGE SECTION\n * images Icon:viewlist\n * slider; distribute-horizontal\n */\n\nconst ImgUploadButton = ({ children }) => {\n    return (\n        <div className=\"\" onClick={() => console.log(\"Uploading...\")}>\n            {children}\n        </div>\n    );\n};\n\nconst UploadTab = (props) => {\n    const { tab } = props;\n\n    if (tab === \"library\") return <LibraryTab {...props} />;\n    if (tab === \"unsplash\") return <UnsplashTab {...props} />;\n\n    return (\n        <div className=\"tab-upload\">\n            <div className=\"\">Click to upload an image</div>\n            <div className=\"\">or</div>\n            <div className=\"\">Paste url</div>\n        </div>\n    );\n};\nconst LibraryTab = (props) => {\n    return <div className=\"tab-library\">Images from library</div>;\n};\n\nconst UnsplashTab = (props) => {\n    return <div className=\"tab-unsplash\">Images from unsplash</div>;\n};\n\nconst ImgSectionEdit = (props) => {\n    const [tab, setTab] = useState(\"new\");\n    return (\n        <div className=\"section-edit\">\n            <div className=\"\">\n                <button onClick={() => setTab(\"new\")}>New</button>\n                <button onClick={() => setTab(\"library\")}>Library</button>\n                <button onClick={() => setTab(\"unsplash\")}>Unsplash</button>\n            </div>\n\n            <UploadTab {...{ tab }} />\n\n            <ImgUploadButton />\n        </div>\n    );\n};\n\nconst ImgSectionPreview = (props) => {\n    const { data } = props;\n\n    if (props.context.isEdit) return <ImgSectionEdit {...props} />;\n\n    const src =\n        \"https://images.unsplash.com/photo-1621570070821-2e2b1358fae3?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wxfDF8YWxsfDF8fHx8fHwyfHwxNjIxOTkyNDMw&ixlib=rb-1.2.1&q=80&w=2000\";\n\n    return (\n        <div\n            className={getClassName([\"section-preview\", !data.image && \"empty\"])}\n            onClick={() => props.context.setEdit(!props.context.isEdit)}\n        >\n            <Img Icon={CloudArrowUp} src={src} />\n            {!data.image && <span>Click to upload an image</span>}\n        </div>\n    );\n};\n\nconst ImageSection = forwardRef((props, ref) => {\n    return (\n        <div id={props.id} {...{ ref }} className={getClassName([props.className, \"section-img\"])}>\n            <SectionHeader Icon={ImageIcon} />\n\n            <SectionBody>\n                <ImgSectionPreview {...props} />\n            </SectionBody>\n\n            <SectionFooter>\n                <div className=\"actions\">\n                    <SectionDeleteButton {...props} />\n                </div>\n            </SectionFooter>\n        </div>\n    );\n});\n\nif (IS_DEV) {\n    ImageSection.displayName = \"ImageSection\";\n}\n\nexport default ImageSection;\n","import marked from \"marked\";\nimport ReactDOMServer from \"react-dom/server\";\n\nimport { isRequired } from \"@miq/utils\";\n\nmarked.setOptions({\n    renderer: new marked.Renderer(),\n    highlight: function (code, lang) {\n        const hljs = require(\"highlight.js\");\n        const language = hljs.getLanguage(lang) ? lang : \"plaintext\";\n\n        return hljs.highlight(code, { language }).value;\n    },\n    pedantic: false,\n    gfm: true,\n    breaks: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n    xhtml: false,\n});\n\nexport const componentToHtml = (Component) => ReactDOMServer.renderToStaticMarkup(Component);\n\nexport default function render(data) {\n    const { type = isRequired(\"section type\") } = data;\n\n    switch (type) {\n        case \"MD\":\n            return marked(data.text);\n\n        default:\n            return `<div>${data.text}</div>`;\n    }\n}\n\n/**\n * UI\n */\n","import { getClassName, IS_DEV } from \"@miq/utils\";\nimport { forwardRef } from \"react\";\n\nimport \"highlight.js/styles/atelier-cave-dark.css\";\n\nimport { Markdown } from \"react-bootstrap-icons\";\nimport Form, { FormProvider, useForm } from \"@miq/form\";\nimport { SectionFooter, SectionHeader, SectionBody } from \"../section-ui\";\nimport { SectionDeleteButton, SectionEditButton } from \"../section-components\";\nimport render from \"../renderers\";\n\n/**\n * MARKDOWN SECTION\n */\n\nconst MdSectionEdit = (props) => {\n    return (\n        <div className=\"\">\n            <Form.TextAreaX autoFocus clearFocus name=\"text\" placeholder=\"# Mardown is supported ...\" />\n        </div>\n    );\n};\n\nconst MdSectionPreview = (props) => {\n    if (props.context.isEdit) return <MdSectionEdit {...props} />;\n\n    return (\n        <div className=\"\">\n            <div dangerouslySetInnerHTML={{ __html: props.data.html || \"Nothing to preview\" }} />\n        </div>\n    );\n};\n\nconst MarkdownSection = forwardRef((props, ref) => {\n    const form = useForm({ text: props.data.text || \"\" });\n    const { data } = props;\n    const update = props.context.update;\n\n    const handleSave = () => {\n        if (!data) return;\n\n        const { type } = data;\n\n        update(\n            props.data.slug,\n            { type, text: form.values.text, html: render({ ...form.values, type }) },\n            { type, text: data.text }\n        ).then((res) => {\n            props.context.setEdit(false);\n        });\n    };\n\n    return (\n        <FormProvider value={form}>\n            <div id={props.id} {...{ ref }} className={getClassName([props.className, \"section-md\"])}>\n                <SectionHeader Icon={Markdown} />\n\n                <SectionBody>\n                    <MdSectionPreview {...props} />\n                </SectionBody>\n\n                <SectionFooter>\n                    <div className=\"actions\">\n                        <SectionDeleteButton {...props} label=\"Delete\" />\n\n                        <div className=\"actions-primary\">\n                            <SectionEditButton\n                                context={props.context}\n                                form={form}\n                                data={props.data}\n                                onSave={handleSave}\n                            />\n                        </div>\n                    </div>\n                </SectionFooter>\n            </div>\n        </FormProvider>\n    );\n});\n\nif (IS_DEV) {\n    MarkdownSection.displayName = \"MarkdownSection\";\n}\n\nexport default MarkdownSection;\n","import { getClassName, IS_DEV } from \"@miq/utils\";\nimport { forwardRef } from \"react\";\nimport { TextareaT } from \"react-bootstrap-icons\";\nimport { SectionDeleteButton, SectionEditButton } from \"../section-components\";\nimport { SectionBody, SectionFooter, SectionHeader } from \"../section-ui\";\n\n/**\n * TEXT SECTION\n */\n\nconst TxtSectionEdit = (props) => {\n    return <div className=\"\">TxtSectionEdit</div>;\n};\n\nconst TxtSectionPreview = (props) => {\n    if (props.context.isEdit) return <TxtSectionEdit {...props} />;\n\n    return <div className=\"\">Prev</div>;\n};\n\nconst TextSection = forwardRef((props, ref) => {\n    return (\n        <div id={props.id} {...{ ref }} className={getClassName([props.className])}>\n            <SectionHeader Icon={TextareaT} />\n\n            <SectionBody>\n                <TxtSectionPreview {...props} />\n            </SectionBody>\n\n            <SectionFooter>\n                <div className=\"actions\">\n                    <SectionDeleteButton {...props} label=\"Delete\" />\n\n                    <SectionEditButton context={props.context} />\n                </div>\n            </SectionFooter>\n        </div>\n    );\n});\n\nif (IS_DEV) {\n    TextSection.displayName = \"TextSection\";\n}\n\nexport default TextSection;\n","import React, { createContext, useRef } from \"react\";\nimport { useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./section.scss\";\n\nimport { getClassName, isRequired } from \"@miq/utils\";\n\nimport ImageSection from \"./ImageSection\";\nimport MarkdownSection from \"./MarkdownSection\";\nimport TextSection from \"./TextSection\";\nimport { sectionActions } from \"./utils\";\n\nconst getSectionComponent = (type) => {\n    switch (type) {\n        case \"MD\":\n            return MarkdownSection;\n        case \"IMG\":\n            return ImageSection;\n\n        default:\n            return TextSection;\n    }\n};\n\nexport const SectionCtx = createContext();\n\nexport default function Section(props) {\n    const { data = isRequired(\"section data props\") } = props;\n    const { slug, type } = data;\n\n    const ref = useRef();\n    const [isEdit, setEdit] = useState(props.isEdit || false);\n\n    const dispatch = useDispatch();\n\n    const context = useMemo(() => {\n        return { isEdit, setEdit, update: sectionActions.patch, remove: sectionActions.delete, dispatch };\n    }, [isEdit, dispatch]);\n\n    if (!slug) return null;\n\n    const Component = getSectionComponent(type);\n\n    return (\n        <SectionCtx.Provider value={context}>\n            <Component {...{ ...props, ref, context, className: getClassName([\"section\", isEdit && \"active\"]) }} />\n        </SectionCtx.Provider>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Form, { useForm } from \"@miq/form\";\nimport { isRequired } from \"@miq/utils\";\nimport Section from \"../Section\";\n\nimport { useSelector } from \"react-redux\";\nimport { sectionActions } from \"../Section/utils\";\nimport { useState } from \"react\";\nimport { SectionAddButton } from \"../Section/section-components\";\n\nconst propTypes = {\n    sourceSlug: PropTypes.string.isRequired,\n    sourceData: PropTypes.object.isRequired,\n    // children: PropTypes.string.isRequired,\n};\n\nexport default function Editor({ sourceSlug = isRequired(\"source slug\"), children, ...props }) {\n    const [loading, setLoading] = useState(1);\n    const { sourceData = isRequired(\"source data\") } = props;\n\n    useEffect(() => {\n        if (!sourceSlug) return;\n\n        sectionActions.list({ source: sourceSlug }).then(() => {\n            setLoading(0);\n        });\n    }, [sourceSlug]);\n\n    const form = useForm({ label: sourceData.label || \"\" });\n\n    if (loading) return <div>Loading ...</div>;\n\n    return (\n        <>\n            <Form context={form} onSubmit={(e) => e.preventDefault()}>\n                {children}\n            </Form>\n        </>\n    );\n}\n\nconst Panel = (props) => {\n    const sections = useSelector((state) => state.sections);\n\n    if (!sections) return null;\n\n    return (\n        <div className=\"editor-panel\">\n            <div className=\"editor-content\">\n                <div className=\"editor-label\">\n                    <Form.TextAreaX name=\"label\" tabIndex={1} maxLength={250} />\n                </div>\n\n                <div className=\"editor-sections\">\n                    {sections.results.map((data) => (\n                        <Section data={data} key={data.slug} />\n                    ))}\n                </div>\n\n                <div className=\"editor-actions\">\n                    <SectionAddButton sourceSlug={props.sourceSlug} type=\"TXT\" />\n                    <SectionAddButton sourceSlug={props.sourceSlug} type=\"MD\" />\n                    <SectionAddButton sourceSlug={props.sourceSlug} type=\"IMG\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nEditor.Panel = Panel;\n\nEditor.propTypes = propTypes;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport \"./editor.scss\";\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pagesActions } from \"../pages/utils\";\nimport Editor from \"./Editor\";\nimport { IconNavLink } from \"@miq/components\";\nimport { ChevronLeft } from \"react-bootstrap-icons\";\n\nexport const EDITOR_PATH = \"/grio/editor/\";\nexport const PAGE_CREATE_PATH = `${EDITOR_PATH}pages/`;\n\nexport default function EditorLayout(props) {\n    const { path } = props.match;\n\n    return (\n        <div className=\"editor\">\n            <Switch>\n                <Route path={`${path}pages/:pageSlug/`} component={PageUpdateView} />\n                <Route path={`${path}pages/`} component={PageAddView} />\n                <Redirect to={PAGE_CREATE_PATH} />\n            </Switch>\n        </div>\n    );\n}\n\nconst PageAddView = (props) => {\n    return <div className=\"view\">page add</div>;\n};\n\nconst PageUpdateView = (props) => {\n    const { pageSlug } = props.match.params;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!pageSlug) return;\n\n        pagesActions.get(pageSlug).catch((err) => {});\n    }, [pageSlug]);\n\n    const page = useSelector((state) => state.pages.items)[`${pageSlug}`];\n\n    if (!page) return null;\n\n    return (\n        <Editor sourceSlug={pageSlug} sourceData={page}>\n            <div className=\"view\">\n                <section className=\"view-content\">\n                    <PageUpdateHeader {...props} {...{ pageSlug, dispatch, page }} />\n\n                    <Editor.Panel sourceSlug={pageSlug} />\n                </section>\n            </div>\n        </Editor>\n    );\n};\n\nconst PageUpdateHeader = (props) => {\n    return (\n        <header className=\"view-header\">\n            <IconNavLink label=\"Pages\" Icon={ChevronLeft} to=\"/grio/pages/\" />\n        </header>\n    );\n};\n","import axios from \"axios\";\nimport { isDate } from \"lodash\";\n\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\n\nexport const DOMAIN = IS_DEV ? `http://127.0.0.1:8000` : `${window.location.origin}`;\n\n// AXIOS\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.headers[\"Content-Type\"] = \"text/html; charset=UTF-8\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport const HTTP = axios.create({\n    baseURL: DOMAIN,\n    timeout: 3000,\n    withCredentials: true, // To enable cookies\n    headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n    onUploadProgress: (progressEvt) => {\n        // console.log(Math.round(progressEvt.loaded / progressEvt.total * 100) + '%')\n    },\n});\n\n// DATE HELPERS\n\nexport const formatDate = (date, format = { weekday: \"short\", month: \"long\", day: \"numeric\" }, locale = \"en-US\") => {\n    const date_time = new Intl.DateTimeFormat(locale, {\n        ...format,\n        //    weekday: \"short\",\n        //    month: \"long\",\n        //    day: \"numeric\",\n        // hour: \"numeric\",\n        // minute: \"numeric\",\n        // year: 'numeric',\n    });\n    return date_time.format(new Date(date));\n};\n\nexport const formatDateToStr = (date) => {\n    if (!isDate(date)) return \"\";\n\n    var dd = date.getDate();\n    var mm = date.getMonth() + 1; //January is 0!\n    var yyyy = date.getFullYear();\n\n    if (dd < 10) {\n        dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n        mm = \"0\" + mm;\n    }\n\n    return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nexport const formatTime = (date, format = { hour: \"numeric\", minute: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", { ...format });\n    return date_time.format(new Date(date));\n};\n\n// HELPERS\n\nexport const getSharedData = () =>\n    new Promise(async (resolve, reject) => {\n        let sharedData = document.getElementById(\"sharedData\");\n\n        if (!sharedData && IS_DEV) {\n            // This will not run in production\n            console.log(`Getting page shared data in ${process.env.NODE_ENV} mode`);\n\n            const base = new URL(window.location.href);\n            const path = `${base.pathname}${base.search}`;\n\n            let res;\n            try {\n                res = await HTTP.get(path);\n            } catch (err) {\n                return reject(err);\n            }\n\n            if (!res || res.status !== 200) return reject(\"No data\");\n\n            if (res.headers[\"content-type\"].includes(\"text\")) {\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(res.data, \"text/html\");\n                sharedData = doc.getElementById(\"sharedData\");\n            }\n        }\n        if (sharedData) {\n            return resolve(JSON.parse(sharedData.textContent));\n        }\n\n        return resolve({});\n    });\n\n/**\n *\n * @param {Array} df\n * @returns {String}\n */\n\nexport const getClassName = (df = []) => {\n    let className;\n    if (Array.isArray(df)) {\n        className = df\n            .map((i) => i && `${i}`)\n            .filter(Boolean)\n            .join(\" \");\n    }\n    return className;\n};\n\n/**\n *\n * @param {String} src\n * @returns {String}\n */\n\nexport const getImgUrl = (src) => {\n    if (IS_DEV && src) {\n        const domain = new URL(DOMAIN);\n        if (!src.includes(\"http\")) {\n            src = `${domain.origin}${src}`;\n        }\n    }\n    return src;\n};\n\nexport const addForwardSlash = (str = isRequired(\"string param\")) => (str.endsWith(\"/\") ? str : `${str}/`);\n\nexport const isRequired = (name = \"Param\") => {\n    throw new Error(`${name} is required`);\n};\n","import { isRequired } from \"@miq/utils\";\nimport actions from \"../actions\";\nimport { addOrUpdateArrayObject, API } from \"../utils\";\nconst initialState = { results: [] };\n\nexport const docActions = {\n    path: \"documents/\",\n\n    list(params) {\n        return actions.get(this.path, params, \"SET_DOCS\");\n    },\n    get(docSlug, params) {\n        return actions.get(`${this.path}${docSlug}/`, params, \"ADD_UPDATE_DOC\");\n    },\n    post(file = isRequired(\"file\")) {\n        let name = file.name;\n        if (name.length >= 100) {\n            return Promise.reject(\"File name is too long\");\n        }\n\n        const fd = new FormData();\n        fd.append(\"src\", file, name);\n\n        return actions.post(`${this.path}`, fd, \"PREPEND_DOC\", API, {\n            headers: { \"content-type\": \"multipart/form-data\" },\n        });\n    },\n\n    patch(docSlug, values, oldValues) {\n        return actions.patch(`${this.path}${docSlug}/`, values, oldValues, \"ADD_UPDATE_DOC\");\n    },\n    delete(docSlug) {\n        return actions.delete(`${this.path}${docSlug}/`, docSlug, \"REMOVE_DOC\");\n    },\n};\n\nexport const docsReducer = (state = initialState, action) => {\n    const { type, payload = {} } = action;\n    let results;\n\n    switch (type) {\n        case \"SET_DOCS\":\n            return { ...payload };\n\n        case \"APPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload, \"slug\", true);\n            return { ...state, results };\n\n        case \"ADD_UPDATE_DOC\":\n        case \"PREPEND_DOC\":\n            results = addOrUpdateArrayObject(state.results, payload);\n            return { ...state, results };\n\n        case \"REMOVE_DOC\":\n            results = state.results.filter(({ slug }) => slug !== payload.slug);\n            return { ...state, results };\n\n        default:\n            return { ...state };\n    }\n};\n","import { isEqual, isString } from \"lodash\";\nimport { reduxStore } from \".\";\nimport { API } from \"./utils\";\n\nconst actions = {\n    /**\n     *\n     * @param {String} path\n     * @param {Object} params\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    get(path, params, type, request = API) {\n        return new Promise((resolve, reject) =>\n            request\n                .get(path, { params })\n                .then(({ data }) => {\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: data });\n                    }\n                    return resolve(data);\n                })\n                .catch((err) => reject(err))\n        );\n    },\n\n    /**\n     *\n     * @param {String} path\n     * @param {Object} values\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    post(path, values, type, request = API, config) {\n        return new Promise((resolve, reject) => {\n            request\n                .post(path, values, config)\n                .then(({ data }) => {\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: data });\n                    }\n\n                    return resolve(data);\n                })\n                .catch((err) => reject(err));\n        });\n    },\n\n    /**\n     *\n     * @param {String} path\n     * @param {Object} values\n     * @param {Object} oldValues\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    patch(path, values, oldValues, type, request = API) {\n        return new Promise((resolve, reject) => {\n            if (oldValues && isEqual(values, oldValues)) {\n                return resolve({ isUpdated: false });\n            }\n\n            request\n                .patch(path, values)\n                .then(({ data }) => {\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: data });\n                    }\n\n                    return resolve({ ...data, isUpdated: true });\n                })\n                .catch((err) => reject(err));\n        });\n    },\n\n    /**\n     *\n     * @param {String} path\n     * @param {String} slug\n     * @param {String} type\n     * @param {Function} request\n     * @returns {Promise}\n     */\n\n    delete(path, slug, type, request = API) {\n        return new Promise((resolve, reject) =>\n            request\n                .delete(path)\n                .then((res) => {\n                    if (!res.status === 204) return reject(res);\n\n                    if (isString(type)) {\n                        reduxStore.dispatch({ type, payload: { slug } });\n                    }\n\n                    resolve({ deleted: true });\n                })\n                .catch((err) => reject(err))\n        );\n    },\n};\n\nexport default actions;\n"],"sourceRoot":""}